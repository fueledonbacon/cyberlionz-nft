{
	"id": "5e47a7e1af22cfc350c62eabe1a40e41",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"CLstaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n\ninterface Mintable {\n   function mint(address to, uint256 amount) external;\n   function transferFrom(address sender, address recipient, uint256 amount) external returns(bool);\n}\n\ncontract CyberlionStaking is Ownable, AccessControl {\n    bytes32 public ADMIN_ROLE = keccak256(\"ADMIN\");\n    using SafeMath for uint256;\n\n    using Address for address;\n\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\n    uint256 constant SECONDS_PER_DAY = 24*60*60;\n    address rewardsTokenAddress;\n    \n    struct CollectionInfo {\n        address collectionAddress;\n        uint256 rewardPerDay;\n        uint256 totalAmountStaked;\n    }\n\n    mapping(address => mapping(address => uint[])) addressToStakedTokens;\n    mapping(address => mapping(uint => address)) contractTokenIdToOwner;\n    mapping(address => mapping(uint => uint)) contractTokenIdToStakedTimestamp;\n\n    CollectionInfo[] public collectionInfo;\n\n    constructor(address _rewardsToken) {\n        rewardsTokenAddress = _rewardsToken;\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(ADMIN_ROLE, msg.sender);\n    }\n\n    function setAdminRole(address admin) public onlyRole(DEFAULT_ADMIN_ROLE){\n        _setupRole(ADMIN_ROLE, admin);\n    }\n\n    function stake(uint256 _collectionID, uint256 _tokenID) external {\n        _stake( _collectionID, _tokenID);\n    }\n\n    function _stake(\n        uint256 _collectionID,\n        uint256 _tokenID\n    ) internal {\n        CollectionInfo storage collection = collectionInfo[_collectionID];\n        \n        // Track original owner of token about to be staked\n        contractTokenIdToOwner[collection.collectionAddress][_tokenID] = msg.sender;\n        // Track time token was staked\n        contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID] = block.timestamp;\n        // Add to the list of tokens staked for this particular owner and contract\n        addressToStakedTokens[collection.collectionAddress][msg.sender].push(_tokenID);\n\n        collection.totalAmountStaked += 1;\n\n        // transfer token into the custody of the contract\n        IERC721(collection.collectionAddress).transferFrom(msg.sender, address(this), _tokenID);\n    }\n\n    function batchStake(uint256 _collectionID, uint256[] memory _tokenIDs) external {\n        for (uint256 i = 0; i < _tokenIDs.length; ++i) {\n            _stake(_collectionID, _tokenIDs[i]);\n        }\n    }\n\n    function batchUnstake(uint256 _collectionID, uint256[] memory _tokenIDs) external {\n        for (uint256 i = 0; i < _tokenIDs.length; ++i) {\n            _unstake(_collectionID, _tokenIDs[i]);\n        }\n    }\n\n    function unstake(uint256 _collectionID, uint256 _tokenID) external {\n        _unstake(_collectionID, _tokenID);\n    }\n\n    function mintTest() public onlyRole(ADMIN_ROLE) {\n        Mintable(rewardsTokenAddress).mint(msg.sender,1);\n    }\n\n    function _unstake(\n        uint256 _collectionID,\n        uint256 _tokenID\n    ) internal {\n        CollectionInfo storage collection = collectionInfo[_collectionID];\n\n        require(contractTokenIdToOwner[collection.collectionAddress][_tokenID] == msg.sender,\n            \"token is not staked or sender does not own it\"\n        );\n\n        _claimReward(msg.sender, _collectionID, _tokenID);\n\n        // remove token ID from list of user's staked tokens\n        _removeElement(addressToStakedTokens[collection.collectionAddress][msg.sender], _tokenID);\n        // remove record of NFT token owner address\n        delete contractTokenIdToOwner[collection.collectionAddress][_tokenID];\n        // remove record of when the token was staked\n        delete contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID];\n\n        collection.totalAmountStaked -= 1;\n\n        IERC721(collection.collectionAddress).transferFrom(address(this), msg.sender, _tokenID);\n        \n    }\n\n    function totalClaimableReward(address _userAddress, uint256 _collectionID) public view returns(uint256) {\n        uint256 payableAmount = 0;\n        address collectionAddress = collectionInfo[_collectionID].collectionAddress;\n        for (uint256 i; i < addressToStakedTokens[collectionAddress][_userAddress].length; i++) {\n            uint256 _tokenId = addressToStakedTokens[collectionAddress][_userAddress][i];\n            payableAmount += claimableReward(_userAddress, _collectionID, _tokenId);\n        }\n        return payableAmount;\n    }\n\n    function claimableReward(address _userAddress, uint256 _collectionID, uint256 _tokenID) public view returns(uint256) {\n        CollectionInfo storage collection = collectionInfo[_collectionID];\n\n        // check to see if token is currently staked\n        if(contractTokenIdToOwner[collection.collectionAddress][_tokenID] != _userAddress)\n          return 0;\n\n        uint timeStaked = contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID];\n        uint256 payableAmount = (block.timestamp - timeStaked)\n            .div(SECONDS_PER_DAY)\n            .mul(collection.rewardPerDay);\n        return payableAmount;\n    }\n\n    function _claimReward(address _userAddress, uint256 _collectionID,uint256 _tokenID) internal {\n        uint256 payableAmount = claimableReward(_userAddress, _collectionID,_tokenID);\n        Mintable(rewardsTokenAddress).mint(msg.sender,payableAmount);\n    }\n\n    function setCollection(address _collectionAddress, uint256 _rewardPerDay) public onlyRole(ADMIN_ROLE) {\n\n        collectionInfo.push(\n            CollectionInfo({collectionAddress: _collectionAddress, rewardPerDay: _rewardPerDay, totalAmountStaked: 0})\n        );\n    }\n\n    function updateCollection(\n        uint256 _collectionID,\n        address _collectionAddress,\n        uint256 _rewardPerDay\n    ) public onlyRole(ADMIN_ROLE)  {\n        CollectionInfo storage collection = collectionInfo[_collectionID];\n        collection.collectionAddress = _collectionAddress;\n        collection.rewardPerDay = _rewardPerDay;\n    }\n\n    function getUserStakedTokens(address _userAddress, uint256 _collectionID) external view returns(uint256[] memory){\n        CollectionInfo storage collection = collectionInfo[_collectionID];\n        return addressToStakedTokens[collection.collectionAddress][_userAddress];\n    }\n\n    function getTotalStakedItemsCount(uint256 _collectionID) external view returns (uint256) {\n        CollectionInfo storage collection = collectionInfo[_collectionID];\n        return collection.totalAmountStaked;\n    }\n\n    function onERC721Received( address, address, uint256) public pure returns (bytes4) {\n        return _ERC721_RECEIVED;\n    }\n\n    function _removeElement(uint256[] storage _array, uint256 _element) internal {\n\n        for (uint256 i; i < _array.length; i++) {\n            if (_array[i] == _element) {\n                _array[i] = _array[_array.length - 1];\n                _array.pop();\n                break;\n            }\n        }\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 400,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2843:2868   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2831:2833   */\n      0x20\n        /* \"#utility.yul\":2816:2834   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2697:2874   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2542:2555  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2574:2579  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2567:2579  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4076:4083  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5358:5360   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5340:5361   */\n      mstore\n        /* \"#utility.yul\":5397:5399   */\n      0x2c\n        /* \"#utility.yul\":5377:5395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5370:5400   */\n      mstore\n        /* \"#utility.yul\":5436:5470   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":5416:5434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5409:5471   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":5487:5505   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5480:5522   */\n      mstore\n        /* \"#utility.yul\":5539:5558   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4201  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3631  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3649:3656  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3648  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3657  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3681:3686  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3677  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5771:5773   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5753:5774   */\n      mstore\n        /* \"#utility.yul\":5810:5812   */\n      0x21\n        /* \"#utility.yul\":5790:5808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5783:5813   */\n      mstore\n        /* \"#utility.yul\":5849:5883   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5829:5847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5822:5884   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5900:5918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5893:5924   */\n      mstore\n        /* \"#utility.yul\":5941:5960   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_91\n        /* \"#utility.yul\":5569:5966   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3777  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3818  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_101\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3798:3803  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6173:6175   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6155:6176   */\n      mstore\n        /* \"#utility.yul\":6212:6214   */\n      0x38\n        /* \"#utility.yul\":6192:6210   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6185:6215   */\n      mstore\n        /* \"#utility.yul\":6251:6285   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":6231:6249   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6224:6286   */\n      mstore\n        /* \"#utility.yul\":6322:6348   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":6302:6320   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6295:6349   */\n      mstore\n        /* \"#utility.yul\":6366:6385   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_91\n        /* \"#utility.yul\":5971:6391   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3920:3922  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3924:3931  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3919  _approve */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4949:4956  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4934  _isApprovedOrOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4908:5011  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5032:5036  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5038:5040  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5042:5049  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5031  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5273:5277  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5279:5281  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5283:5290  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5272  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2263:2270  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2305  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7016:7018   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6998:7019   */\n      mstore\n        /* \"#utility.yul\":7055:7057   */\n      0x29\n        /* \"#utility.yul\":7035:7053   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7028:7058   */\n      mstore\n        /* \"#utility.yul\":7094:7128   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":7074:7092   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7067:7129   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7145:7163   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7138:7177   */\n      mstore\n        /* \"#utility.yul\":7194:7213   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":6814:7219   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7426:7428   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7408:7429   */\n      mstore\n        /* \"#utility.yul\":7465:7467   */\n      0x2a\n        /* \"#utility.yul\":7445:7463   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7438:7468   */\n      mstore\n        /* \"#utility.yul\":7504:7538   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":7484:7502   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7477:7539   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":7555:7573   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7548:7588   */\n      mstore\n        /* \"#utility.yul\":7605:7624   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_91\n        /* \"#utility.yul\":7224:7630   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2120  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2706:2719  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2738:2745  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2731:2745  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4411:4419  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4421:4429  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4396  _setApprovalForAll */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5570:5577  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5555  _isApprovedOrOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5529:5632  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5656:5660  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5662:5664  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5666:5673  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5675:5680  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5655  _safeTransfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7225:7229  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2891:2904  string memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7837:7839   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7819:7840   */\n      mstore\n        /* \"#utility.yul\":7876:7878   */\n      0x2f\n        /* \"#utility.yul\":7856:7874   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7849:7879   */\n      mstore\n        /* \"#utility.yul\":7915:7949   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":7895:7913   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7888:7950   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7966:7984   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7959:8004   */\n      mstore\n        /* \"#utility.yul\":8021:8040   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":7635:8046   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3003:3024  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3465:3474  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3389:3481  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3003:3037  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3078:3079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3060:3067  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3075  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3079  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_151\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_152)\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3106:3113  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3131  tokenId.toString */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3089:3134  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3047:3140  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11258  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11272  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11310  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11287:11333  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7540  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8728:8730   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8710:8731   */\n      mstore\n        /* \"#utility.yul\":8767:8769   */\n      0x2c\n        /* \"#utility.yul\":8747:8765   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8740:8770   */\n      mstore\n        /* \"#utility.yul\":8806:8840   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":8786:8804   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8779:8841   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8857:8875   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8850:8892   */\n      mstore\n        /* \"#utility.yul\":8909:8928   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":8526:8934   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7648  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7666:7673  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7665  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7674  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7703:7708  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7699  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7744  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_170\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7712:7744  isApprovedForAll(owner, spender) */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7772:7779  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7760:7767  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7759  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7684:7780  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10453:11058  function _transfer(... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10607:10611  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10595:10602  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10594  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9141:9143   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9123:9144   */\n      mstore\n        /* \"#utility.yul\":9180:9182   */\n      0x25\n        /* \"#utility.yul\":9160:9178   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9153:9183   */\n      mstore\n        /* \"#utility.yul\":9219:9253   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":9199:9217   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9192:9254   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":9270:9288   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9263:9298   */\n      mstore\n        /* \"#utility.yul\":9315:9334   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_91\n        /* \"#utility.yul\":8939:9340   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10671:10687  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9547:9549   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9529:9550   */\n      mstore\n        /* \"#utility.yul\":9586:9588   */\n      0x24\n        /* \"#utility.yul\":9566:9584   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9559:9589   */\n      mstore\n        /* \"#utility.yul\":9625:9659   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":9605:9623   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9598:9660   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9676:9694   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9669:9703   */\n      mstore\n        /* \"#utility.yul\":9720:9739   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_91\n        /* \"#utility.yul\":9345:9745   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10857:10858  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10861:10868  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10848  _approve */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10889  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_184\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_185\n      jump\t// in\n    tag_184:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10919  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_186\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_187\n      jump\t// in\n    tag_186:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10945  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10959  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11625:11633  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11621  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10347:10349   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10329:10350   */\n      mstore\n        /* \"#utility.yul\":10386:10388   */\n      0x19\n        /* \"#utility.yul\":10366:10384   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10359:10389   */\n      mstore\n        /* \"#utility.yul\":10425:10452   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":10405:10423   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10398:10453   */\n      mstore\n        /* \"#utility.yul\":10470:10488   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_91\n        /* \"#utility.yul\":10145:10494   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11691  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11708  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11719  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6550:6857  function _safeTransfer(... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6711:6715  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6717:6719  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6721:6728  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6710  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6770:6774  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6776:6778  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6780:6787  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6789:6794  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6769  _checkOnERC721Received */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6739:6850  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_201\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:606  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":610:611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:611  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_204\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_207\n      dup2\n      tag_208\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_209\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_210\n      jump\t// in\n    tag_209:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_205)\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_214:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_185\n      jump\t// in\n    tag_217:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_218\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_220\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_187\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_210\n      jump\t// in\n    tag_224:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_215)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12485:12489  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12505:12518  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12576  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_232\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12591:12595  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12597:12604  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12606:12611  _data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_233\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_235\n      swap2\n      dup2\n      add\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      0x01\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_237\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_242\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_241)\n    tag_242:\n      0x60\n      swap2\n      pop\n    tag_241:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12785  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12792  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12796:12797  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12797  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12821:12881  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_201\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12993:12999  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12987:13000  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12978:12984  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12974:12976  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12970:12985  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12963:13001  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_237:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12662:12713  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12655:12713  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_171)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n    tag_230:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13092:13096  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_249:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_257:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_259:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_152\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_249\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_250:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_263:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_263)\n    tag_265:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_142\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_251:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_268\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_250\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_27:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_152\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_251\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_30:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_272:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_252:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_275:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_36:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_277:\n        /* \"#utility.yul\":2082:2111   */\n      tag_278\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_252\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2173:2501   */\n    tag_40:\n        /* \"#utility.yul\":2250:2256   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup1\n        /* \"#utility.yul\":2266:2272   */\n      0x00\n        /* \"#utility.yul\":2319:2321   */\n      0x60\n        /* \"#utility.yul\":2307:2316   */\n      dup5\n        /* \"#utility.yul\":2298:2305   */\n      dup7\n        /* \"#utility.yul\":2294:2317   */\n      sub\n        /* \"#utility.yul\":2290:2322   */\n      slt\n        /* \"#utility.yul\":2287:2339   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":2335:2336   */\n      0x00\n        /* \"#utility.yul\":2332:2333   */\n      dup1\n        /* \"#utility.yul\":2325:2337   */\n      revert\n        /* \"#utility.yul\":2287:2339   */\n    tag_280:\n        /* \"#utility.yul\":2358:2387   */\n      tag_281\n        /* \"#utility.yul\":2377:2386   */\n      dup5\n        /* \"#utility.yul\":2358:2387   */\n      tag_252\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2348:2387   */\n      swap3\n      pop\n        /* \"#utility.yul\":2406:2444   */\n      tag_282\n        /* \"#utility.yul\":2440:2442   */\n      0x20\n        /* \"#utility.yul\":2429:2438   */\n      dup6\n        /* \"#utility.yul\":2425:2443   */\n      add\n        /* \"#utility.yul\":2406:2444   */\n      tag_252\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2396:2444   */\n      swap2\n      pop\n        /* \"#utility.yul\":2491:2493   */\n      0x40\n        /* \"#utility.yul\":2480:2489   */\n      dup5\n        /* \"#utility.yul\":2476:2494   */\n      add\n        /* \"#utility.yul\":2463:2495   */\n      calldataload\n        /* \"#utility.yul\":2453:2495   */\n      swap1\n      pop\n        /* \"#utility.yul\":2173:2501   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2506:2692   */\n    tag_51:\n        /* \"#utility.yul\":2565:2571   */\n      0x00\n        /* \"#utility.yul\":2618:2620   */\n      0x20\n        /* \"#utility.yul\":2606:2615   */\n      dup3\n        /* \"#utility.yul\":2597:2604   */\n      dup5\n        /* \"#utility.yul\":2593:2616   */\n      sub\n        /* \"#utility.yul\":2589:2621   */\n      slt\n        /* \"#utility.yul\":2586:2638   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      dup1\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2586:2638   */\n    tag_284:\n        /* \"#utility.yul\":2657:2686   */\n      tag_152\n        /* \"#utility.yul\":2676:2685   */\n      dup3\n        /* \"#utility.yul\":2657:2686   */\n      tag_252\n      jump\t// in\n        /* \"#utility.yul\":2879:3226   */\n    tag_60:\n        /* \"#utility.yul\":2944:2950   */\n      0x00\n        /* \"#utility.yul\":2952:2958   */\n      dup1\n        /* \"#utility.yul\":3005:3007   */\n      0x40\n        /* \"#utility.yul\":2993:3002   */\n      dup4\n        /* \"#utility.yul\":2984:2991   */\n      dup6\n        /* \"#utility.yul\":2980:3003   */\n      sub\n        /* \"#utility.yul\":2976:3008   */\n      slt\n        /* \"#utility.yul\":2973:3025   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3018:3019   */\n      dup1\n        /* \"#utility.yul\":3011:3023   */\n      revert\n        /* \"#utility.yul\":2973:3025   */\n    tag_288:\n        /* \"#utility.yul\":3044:3073   */\n      tag_289\n        /* \"#utility.yul\":3063:3072   */\n      dup4\n        /* \"#utility.yul\":3044:3073   */\n      tag_252\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3034:3073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3123:3125   */\n      0x20\n        /* \"#utility.yul\":3112:3121   */\n      dup4\n        /* \"#utility.yul\":3108:3126   */\n      add\n        /* \"#utility.yul\":3095:3127   */\n      calldataload\n        /* \"#utility.yul\":3170:3175   */\n      dup1\n        /* \"#utility.yul\":3163:3176   */\n      iszero\n        /* \"#utility.yul\":3156:3177   */\n      iszero\n        /* \"#utility.yul\":3149:3154   */\n      dup2\n        /* \"#utility.yul\":3146:3178   */\n      eq\n        /* \"#utility.yul\":3136:3196   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":3192:3193   */\n      0x00\n        /* \"#utility.yul\":3189:3190   */\n      dup1\n        /* \"#utility.yul\":3182:3194   */\n      revert\n        /* \"#utility.yul\":3136:3196   */\n    tag_290:\n        /* \"#utility.yul\":3215:3220   */\n      dup1\n        /* \"#utility.yul\":3205:3220   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2879:3226   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3358   */\n    tag_213:\n        /* \"#utility.yul\":3292:3302   */\n      0x4e487b71\n        /* \"#utility.yul\":3287:3290   */\n      0xe0\n        /* \"#utility.yul\":3283:3303   */\n      shl\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3273:3304   */\n      mstore\n        /* \"#utility.yul\":3323:3327   */\n      0x41\n        /* \"#utility.yul\":3320:3321   */\n      0x04\n        /* \"#utility.yul\":3313:3328   */\n      mstore\n        /* \"#utility.yul\":3347:3351   */\n      0x24\n        /* \"#utility.yul\":3344:3345   */\n      0x00\n        /* \"#utility.yul\":3337:3352   */\n      revert\n        /* \"#utility.yul\":3363:4501   */\n    tag_64:\n        /* \"#utility.yul\":3458:3464   */\n      0x00\n        /* \"#utility.yul\":3466:3472   */\n      dup1\n        /* \"#utility.yul\":3474:3480   */\n      0x00\n        /* \"#utility.yul\":3482:3488   */\n      dup1\n        /* \"#utility.yul\":3535:3538   */\n      0x80\n        /* \"#utility.yul\":3523:3532   */\n      dup6\n        /* \"#utility.yul\":3514:3521   */\n      dup8\n        /* \"#utility.yul\":3510:3533   */\n      sub\n        /* \"#utility.yul\":3506:3539   */\n      slt\n        /* \"#utility.yul\":3503:3556   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3503:3556   */\n    tag_293:\n        /* \"#utility.yul\":3575:3604   */\n      tag_294\n        /* \"#utility.yul\":3594:3603   */\n      dup6\n        /* \"#utility.yul\":3575:3604   */\n      tag_252\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3565:3604   */\n      swap4\n      pop\n        /* \"#utility.yul\":3623:3661   */\n      tag_295\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3646:3655   */\n      dup7\n        /* \"#utility.yul\":3642:3660   */\n      add\n        /* \"#utility.yul\":3623:3661   */\n      tag_252\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3613:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3708:3710   */\n      0x40\n        /* \"#utility.yul\":3697:3706   */\n      dup6\n        /* \"#utility.yul\":3693:3711   */\n      add\n        /* \"#utility.yul\":3680:3712   */\n      calldataload\n        /* \"#utility.yul\":3670:3712   */\n      swap2\n      pop\n        /* \"#utility.yul\":3763:3765   */\n      0x60\n        /* \"#utility.yul\":3752:3761   */\n      dup6\n        /* \"#utility.yul\":3748:3766   */\n      add\n        /* \"#utility.yul\":3735:3767   */\n      calldataload\n        /* \"#utility.yul\":3786:3804   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3827:3829   */\n      dup1\n        /* \"#utility.yul\":3819:3825   */\n      dup3\n        /* \"#utility.yul\":3816:3830   */\n      gt\n        /* \"#utility.yul\":3813:3847   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3840:3841   */\n      dup1\n        /* \"#utility.yul\":3833:3845   */\n      revert\n        /* \"#utility.yul\":3813:3847   */\n    tag_296:\n        /* \"#utility.yul\":3881:3887   */\n      dup2\n        /* \"#utility.yul\":3870:3879   */\n      dup8\n        /* \"#utility.yul\":3866:3888   */\n      add\n        /* \"#utility.yul\":3856:3888   */\n      swap2\n      pop\n        /* \"#utility.yul\":3926:3933   */\n      dup8\n        /* \"#utility.yul\":3919:3923   */\n      0x1f\n        /* \"#utility.yul\":3915:3917   */\n      dup4\n        /* \"#utility.yul\":3911:3924   */\n      add\n        /* \"#utility.yul\":3907:3934   */\n      slt\n        /* \"#utility.yul\":3897:3952   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3945:3946   */\n      dup1\n        /* \"#utility.yul\":3938:3950   */\n      revert\n        /* \"#utility.yul\":3897:3952   */\n    tag_297:\n        /* \"#utility.yul\":3984:3986   */\n      dup2\n        /* \"#utility.yul\":3971:3987   */\n      calldataload\n        /* \"#utility.yul\":4006:4008   */\n      dup2\n        /* \"#utility.yul\":4002:4004   */\n      dup2\n        /* \"#utility.yul\":3999:4009   */\n      gt\n        /* \"#utility.yul\":3996:4032   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4012:4030   */\n      tag_299\n      tag_213\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4087:4089   */\n      0x40\n        /* \"#utility.yul\":4081:4090   */\n      mload\n        /* \"#utility.yul\":4055:4057   */\n      0x1f\n        /* \"#utility.yul\":4141:4154   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4137:4159   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4161:4163   */\n      0x3f\n        /* \"#utility.yul\":4133:4164   */\n      add\n        /* \"#utility.yul\":4129:4169   */\n      and\n        /* \"#utility.yul\":4117:4170   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4185:4203   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4205:4227   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4182:4228   */\n      or\n        /* \"#utility.yul\":4179:4251   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4231:4249   */\n      tag_301\n      tag_213\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4271:4281   */\n      dup2\n        /* \"#utility.yul\":4267:4269   */\n      0x40\n        /* \"#utility.yul\":4260:4282   */\n      mstore\n        /* \"#utility.yul\":4306:4308   */\n      dup3\n        /* \"#utility.yul\":4298:4304   */\n      dup2\n        /* \"#utility.yul\":4291:4309   */\n      mstore\n        /* \"#utility.yul\":4346:4353   */\n      dup11\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4336:4338   */\n      dup5\n        /* \"#utility.yul\":4332:4334   */\n      dup8\n        /* \"#utility.yul\":4328:4339   */\n      add\n        /* \"#utility.yul\":4324:4344   */\n      add\n        /* \"#utility.yul\":4321:4354   */\n      gt\n        /* \"#utility.yul\":4318:4371   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4367:4368   */\n      0x00\n        /* \"#utility.yul\":4364:4365   */\n      dup1\n        /* \"#utility.yul\":4357:4369   */\n      revert\n        /* \"#utility.yul\":4318:4371   */\n    tag_302:\n        /* \"#utility.yul\":4423:4425   */\n      dup3\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4414:4416   */\n      dup7\n        /* \"#utility.yul\":4410:4421   */\n      add\n        /* \"#utility.yul\":4405:4407   */\n      0x20\n        /* \"#utility.yul\":4397:4403   */\n      dup4\n        /* \"#utility.yul\":4393:4408   */\n      add\n        /* \"#utility.yul\":4380:4426   */\n      calldatacopy\n        /* \"#utility.yul\":4468:4469   */\n      0x00\n        /* \"#utility.yul\":4463:4465   */\n      0x20\n        /* \"#utility.yul\":4458:4460   */\n      dup5\n        /* \"#utility.yul\":4450:4456   */\n      dup4\n        /* \"#utility.yul\":4446:4461   */\n      add\n        /* \"#utility.yul\":4442:4466   */\n      add\n        /* \"#utility.yul\":4435:4470   */\n      mstore\n        /* \"#utility.yul\":4489:4495   */\n      dup1\n        /* \"#utility.yul\":4479:4495   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3363:4501   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4766   */\n    tag_72:\n        /* \"#utility.yul\":4574:4580   */\n      0x00\n        /* \"#utility.yul\":4582:4588   */\n      dup1\n        /* \"#utility.yul\":4635:4637   */\n      0x40\n        /* \"#utility.yul\":4623:4632   */\n      dup4\n        /* \"#utility.yul\":4614:4621   */\n      dup6\n        /* \"#utility.yul\":4610:4633   */\n      sub\n        /* \"#utility.yul\":4606:4638   */\n      slt\n        /* \"#utility.yul\":4603:4655   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4651:4652   */\n      0x00\n        /* \"#utility.yul\":4648:4649   */\n      dup1\n        /* \"#utility.yul\":4641:4653   */\n      revert\n        /* \"#utility.yul\":4603:4655   */\n    tag_304:\n        /* \"#utility.yul\":4674:4703   */\n      tag_305\n        /* \"#utility.yul\":4693:4702   */\n      dup4\n        /* \"#utility.yul\":4674:4703   */\n      tag_252\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4664:4703   */\n      swap2\n      pop\n        /* \"#utility.yul\":4722:4760   */\n      tag_306\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4745:4754   */\n      dup5\n        /* \"#utility.yul\":4741:4759   */\n      add\n        /* \"#utility.yul\":4722:4760   */\n      tag_252\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4712:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4506:4766   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4771:5151   */\n    tag_82:\n        /* \"#utility.yul\":4850:4851   */\n      0x01\n        /* \"#utility.yul\":4846:4858   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4893:4905   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4914:4975   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4968:4972   */\n      0x7f\n        /* \"#utility.yul\":4960:4966   */\n      dup3\n        /* \"#utility.yul\":4956:4973   */\n      and\n        /* \"#utility.yul\":4946:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":4914:4975   */\n    tag_308:\n        /* \"#utility.yul\":5021:5023   */\n      0x20\n        /* \"#utility.yul\":5013:5019   */\n      dup3\n        /* \"#utility.yul\":5010:5024   */\n      lt\n        /* \"#utility.yul\":4990:5008   */\n      dup2\n        /* \"#utility.yul\":4987:5025   */\n      sub\n        /* \"#utility.yul\":4984:5145   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5067:5077   */\n      0x4e487b71\n        /* \"#utility.yul\":5062:5065   */\n      0xe0\n        /* \"#utility.yul\":5058:5078   */\n      shl\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5048:5079   */\n      mstore\n        /* \"#utility.yul\":5102:5106   */\n      0x22\n        /* \"#utility.yul\":5099:5100   */\n      0x04\n        /* \"#utility.yul\":5092:5107   */\n      mstore\n        /* \"#utility.yul\":5130:5134   */\n      0x24\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5120:5135   */\n      revert\n        /* \"#utility.yul\":4984:5145   */\n    tag_309:\n      pop\n        /* \"#utility.yul\":4771:5151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6396:6809   */\n    tag_114:\n        /* \"#utility.yul\":6598:6600   */\n      0x20\n        /* \"#utility.yul\":6580:6601   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6637:6639   */\n      0x31\n        /* \"#utility.yul\":6617:6635   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6610:6640   */\n      mstore\n        /* \"#utility.yul\":6676:6710   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":6671:6673   */\n      0x40\n        /* \"#utility.yul\":6656:6674   */\n      dup3\n      add\n        /* \"#utility.yul\":6649:6711   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6742:6744   */\n      0x60\n        /* \"#utility.yul\":6727:6745   */\n      dup3\n      add\n        /* \"#utility.yul\":6720:6767   */\n      mstore\n        /* \"#utility.yul\":6799:6802   */\n      0x80\n        /* \"#utility.yul\":6784:6803   */\n      add\n      swap1\n        /* \"#utility.yul\":6396:6809   */\n      jump\t// out\n        /* \"#utility.yul\":8051:8521   */\n    tag_156:\n        /* \"#utility.yul\":8230:8233   */\n      0x00\n        /* \"#utility.yul\":8268:8274   */\n      dup4\n        /* \"#utility.yul\":8262:8275   */\n      mload\n        /* \"#utility.yul\":8284:8337   */\n      tag_318\n        /* \"#utility.yul\":8330:8336   */\n      dup2\n        /* \"#utility.yul\":8325:8328   */\n      dup5\n        /* \"#utility.yul\":8318:8322   */\n      0x20\n        /* \"#utility.yul\":8310:8316   */\n      dup9\n        /* \"#utility.yul\":8306:8323   */\n      add\n        /* \"#utility.yul\":8284:8337   */\n      tag_250\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8400:8413   */\n      dup4\n      mload\n        /* \"#utility.yul\":8359:8375   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8422:8479   */\n      tag_319\n        /* \"#utility.yul\":8400:8413   */\n      dup2\n        /* \"#utility.yul\":8359:8375   */\n      dup4\n        /* \"#utility.yul\":8456:8460   */\n      0x20\n        /* \"#utility.yul\":8444:8461   */\n      dup9\n      add\n        /* \"#utility.yul\":8422:8479   */\n      tag_250\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":8495:8515   */\n      add\n      swap5\n        /* \"#utility.yul\":8051:8521   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9750:9877   */\n    tag_253:\n        /* \"#utility.yul\":9811:9821   */\n      0x4e487b71\n        /* \"#utility.yul\":9806:9809   */\n      0xe0\n        /* \"#utility.yul\":9802:9822   */\n      shl\n        /* \"#utility.yul\":9799:9800   */\n      0x00\n        /* \"#utility.yul\":9792:9823   */\n      mstore\n        /* \"#utility.yul\":9842:9846   */\n      0x11\n        /* \"#utility.yul\":9839:9840   */\n      0x04\n        /* \"#utility.yul\":9832:9847   */\n      mstore\n        /* \"#utility.yul\":9866:9870   */\n      0x24\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9871   */\n      revert\n        /* \"#utility.yul\":9882:10007   */\n    tag_185:\n        /* \"#utility.yul\":9922:9926   */\n      0x00\n        /* \"#utility.yul\":9950:9951   */\n      dup3\n        /* \"#utility.yul\":9947:9948   */\n      dup3\n        /* \"#utility.yul\":9944:9952   */\n      lt\n        /* \"#utility.yul\":9941:9975   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":9955:9973   */\n      tag_326\n      tag_253\n      jump\t// in\n    tag_326:\n      pop\n        /* \"#utility.yul\":9992:10001   */\n      sub\n      swap1\n        /* \"#utility.yul\":9882:10007   */\n      jump\t// out\n        /* \"#utility.yul\":10012:10140   */\n    tag_187:\n        /* \"#utility.yul\":10052:10055   */\n      0x00\n        /* \"#utility.yul\":10083:10084   */\n      dup3\n        /* \"#utility.yul\":10079:10085   */\n      not\n        /* \"#utility.yul\":10076:10077   */\n      dup3\n        /* \"#utility.yul\":10073:10086   */\n      gt\n        /* \"#utility.yul\":10070:10109   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":10089:10107   */\n      tag_329\n      tag_253\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":10125:10134   */\n      add\n      swap1\n        /* \"#utility.yul\":10012:10140   */\n      jump\t// out\n        /* \"#utility.yul\":10499:10913   */\n    tag_201:\n        /* \"#utility.yul\":10701:10703   */\n      0x20\n        /* \"#utility.yul\":10683:10704   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10740:10742   */\n      0x32\n        /* \"#utility.yul\":10720:10738   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10713:10743   */\n      mstore\n        /* \"#utility.yul\":10779:10813   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":10774:10776   */\n      0x40\n        /* \"#utility.yul\":10759:10777   */\n      dup3\n      add\n        /* \"#utility.yul\":10752:10814   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":10845:10847   */\n      0x60\n        /* \"#utility.yul\":10830:10848   */\n      dup3\n      add\n        /* \"#utility.yul\":10823:10871   */\n      mstore\n        /* \"#utility.yul\":10903:10906   */\n      0x80\n        /* \"#utility.yul\":10888:10907   */\n      add\n      swap1\n        /* \"#utility.yul\":10499:10913   */\n      jump\t// out\n        /* \"#utility.yul\":10918:11053   */\n    tag_208:\n        /* \"#utility.yul\":10957:10960   */\n      0x00\n        /* \"#utility.yul\":10978:10995   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10975:11018   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":10998:11016   */\n      tag_334\n      tag_253\n      jump\t// in\n    tag_334:\n      pop\n        /* \"#utility.yul\":11045:11046   */\n      0x01\n        /* \"#utility.yul\":11034:11047   */\n      add\n      swap1\n        /* \"#utility.yul\":10918:11053   */\n      jump\t// out\n        /* \"#utility.yul\":11058:11185   */\n    tag_254:\n        /* \"#utility.yul\":11119:11129   */\n      0x4e487b71\n        /* \"#utility.yul\":11114:11117   */\n      0xe0\n        /* \"#utility.yul\":11110:11130   */\n      shl\n        /* \"#utility.yul\":11107:11108   */\n      0x00\n        /* \"#utility.yul\":11100:11131   */\n      mstore\n        /* \"#utility.yul\":11150:11154   */\n      0x12\n        /* \"#utility.yul\":11147:11148   */\n      0x04\n        /* \"#utility.yul\":11140:11155   */\n      mstore\n        /* \"#utility.yul\":11174:11178   */\n      0x24\n        /* \"#utility.yul\":11171:11172   */\n      0x00\n        /* \"#utility.yul\":11164:11179   */\n      revert\n        /* \"#utility.yul\":11190:11310   */\n    tag_210:\n        /* \"#utility.yul\":11230:11231   */\n      0x00\n        /* \"#utility.yul\":11256:11257   */\n      dup3\n        /* \"#utility.yul\":11246:11281   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":11261:11279   */\n      tag_338\n      tag_254\n      jump\t// in\n    tag_338:\n      pop\n        /* \"#utility.yul\":11295:11304   */\n      div\n      swap1\n        /* \"#utility.yul\":11190:11310   */\n      jump\t// out\n        /* \"#utility.yul\":11315:11427   */\n    tag_219:\n        /* \"#utility.yul\":11347:11348   */\n      0x00\n        /* \"#utility.yul\":11373:11374   */\n      dup3\n        /* \"#utility.yul\":11363:11398   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":11378:11396   */\n      tag_341\n      tag_254\n      jump\t// in\n    tag_341:\n      pop\n        /* \"#utility.yul\":11412:11421   */\n      mod\n      swap1\n        /* \"#utility.yul\":11315:11427   */\n      jump\t// out\n        /* \"#utility.yul\":11432:11559   */\n    tag_223:\n        /* \"#utility.yul\":11493:11503   */\n      0x4e487b71\n        /* \"#utility.yul\":11488:11491   */\n      0xe0\n        /* \"#utility.yul\":11484:11504   */\n      shl\n        /* \"#utility.yul\":11481:11482   */\n      0x00\n        /* \"#utility.yul\":11474:11505   */\n      mstore\n        /* \"#utility.yul\":11524:11528   */\n      0x32\n        /* \"#utility.yul\":11521:11522   */\n      0x04\n        /* \"#utility.yul\":11514:11529   */\n      mstore\n        /* \"#utility.yul\":11548:11552   */\n      0x24\n        /* \"#utility.yul\":11545:11546   */\n      0x00\n        /* \"#utility.yul\":11538:11553   */\n      revert\n        /* \"#utility.yul\":11564:12053   */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11833:11848   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11815:11849   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11885:11900   */\n      dup5\n      and\n        /* \"#utility.yul\":11880:11882   */\n      0x20\n        /* \"#utility.yul\":11865:11883   */\n      dup3\n      add\n        /* \"#utility.yul\":11858:11901   */\n      mstore\n        /* \"#utility.yul\":11932:11934   */\n      0x40\n        /* \"#utility.yul\":11917:11935   */\n      dup2\n      add\n        /* \"#utility.yul\":11910:11944   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11980:11983   */\n      0x80\n        /* \"#utility.yul\":11975:11977   */\n      0x60\n        /* \"#utility.yul\":11960:11978   */\n      dup3\n      add\n        /* \"#utility.yul\":11953:11984   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11758:11762   */\n      0x00\n      swap1\n        /* \"#utility.yul\":12001:12047   */\n      tag_344\n      swap1\n        /* \"#utility.yul\":12027:12046   */\n      dup4\n      add\n        /* \"#utility.yul\":12019:12025   */\n      dup5\n        /* \"#utility.yul\":12001:12047   */\n      tag_251\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":11993:12047   */\n      swap7\n        /* \"#utility.yul\":11564:12053   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12058:12307   */\n    tag_236:\n        /* \"#utility.yul\":12127:12133   */\n      0x00\n        /* \"#utility.yul\":12180:12182   */\n      0x20\n        /* \"#utility.yul\":12168:12177   */\n      dup3\n        /* \"#utility.yul\":12159:12166   */\n      dup5\n        /* \"#utility.yul\":12155:12178   */\n      sub\n        /* \"#utility.yul\":12151:12183   */\n      slt\n        /* \"#utility.yul\":12148:12200   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":12196:12197   */\n      0x00\n        /* \"#utility.yul\":12193:12194   */\n      dup1\n        /* \"#utility.yul\":12186:12198   */\n      revert\n        /* \"#utility.yul\":12148:12200   */\n    tag_346:\n        /* \"#utility.yul\":12228:12237   */\n      dup2\n        /* \"#utility.yul\":12222:12238   */\n      mload\n        /* \"#utility.yul\":12247:12277   */\n      tag_152\n        /* \"#utility.yul\":12271:12276   */\n      dup2\n        /* \"#utility.yul\":12247:12277   */\n      tag_249\n      jump\t// in\n\n    auxdata: 0xa264697066735822122066984c0afe4c4c30a50a4814d97db5ea4958df3ed4413eb05499c767a2bf87a864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:15"
															},
															"nodeType": "YulIf",
															"src": "220:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:15"
															},
															"nodeType": "YulIf",
															"src": "353:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:15"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:15"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:15"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:15"
															},
															"nodeType": "YulIf",
															"src": "536:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:15"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:15"
															},
															"nodeType": "YulIf",
															"src": "698:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:15"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:15"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:15"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:15"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:15"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:15",
																"statements": []
															},
															"src": "779:133:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:15"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:15"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:15"
															},
															"nodeType": "YulIf",
															"src": "921:80:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:15",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:15",
														"type": ""
													}
												],
												"src": "146:885:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:15"
															},
															"nodeType": "YulIf",
															"src": "1164:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:15"
															},
															"nodeType": "YulIf",
															"src": "1301:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:15"
															},
															"nodeType": "YulIf",
															"src": "1474:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:15",
														"type": ""
													}
												],
												"src": "1036:562:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:15"
															},
															"nodeType": "YulIf",
															"src": "1746:61:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:15"
															},
															"nodeType": "YulIf",
															"src": "1816:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:15",
														"type": ""
													}
												],
												"src": "1603:380:15"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620014de380380620014de8339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61124d80620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bb565b61014f610172366004610e47565b6104ec565b610124610185366004610de8565b610507565b61019d610198366004610e83565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e9e565b610614565b61014f6101d4366004610ef0565b610623565b6101046101e7366004610de8565b61065b565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b815260040161038190611039565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b61061f338383610a44565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b815260040161038190611039565b61065584848484610b12565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b45565b60405160200161072c92919061108a565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b0316148061087c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a05750836001600160a01b03166108958461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b03161461091f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109815760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098c600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b59084906110cf565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e39084906110e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1d8484846108a8565b610b2984848484610c46565b6106555760405162461bcd60e51b8152600401610381906110fe565b606081600003610b6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b965780610b8081611150565b9150610b8f9050600a8361117f565b9150610b70565b60008167ffffffffffffffff811115610bb157610bb1610eda565b6040519080825280601f01601f191660200182016040528015610bdb576020820181803683370190505b5090505b84156108a057610bf06001836110cf565b9150610bfd600a86611193565b610c089060306110e6565b60f81b818381518110610c1d57610c1d6111a7565b60200101906001600160f81b031916908160001a905350610c3f600a8661117f565b9450610bdf565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8a9033908990889088906004016111bd565b6020604051808303816000875af1925050508015610cc5575060408051601f3d908101601f19168201909252610cc2918101906111fa565b60015b610d22573d808015610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b508051600003610d1a5760405162461bcd60e51b8152600401610381906110fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073c81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106555750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073c82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b60208210810361103357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109c818460208801610d7d565b8351908301906110b0818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b600082198211156110f9576110f96110b9565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611162576111626110b9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118e5761118e611169565b500490565b6000826111a2576111a2611169565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f090830184610da9565b9695505050505050565b60006020828403121561120c57600080fd5b815161073c81610d4756fea264697066735822122066984c0afe4c4c30a50a4814d97db5ea4958df3ed4413eb05499c767a2bf87a864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14DE CODESIZE SUB DUP1 PUSH3 0x14DE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x281 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x27B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124D DUP1 PUSH3 0x291 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x61F CALLER DUP4 DUP4 PUSH2 0xA44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D CALLER DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x655 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB12 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH2 0x71B DUP5 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x778 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8A0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x895 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BB DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98C PUSH1 0x0 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B5 SWAP1 DUP5 SWAP1 PUSH2 0x10CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E3 SWAP1 DUP5 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1D DUP5 DUP5 DUP5 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xB29 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB6C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB96 JUMPI DUP1 PUSH2 0xB80 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x117F JUMP JUMPDEST SWAP2 POP PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A0 JUMPI PUSH2 0xBF0 PUSH1 0x1 DUP4 PUSH2 0x10CF JUMP JUMPDEST SWAP2 POP PUSH2 0xBFD PUSH1 0xA DUP7 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xC08 SWAP1 PUSH1 0x30 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3F PUSH1 0xA DUP7 PUSH2 0x117F JUMP JUMPDEST SWAP5 POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD22 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x655 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE39 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH2 0xE73 PUSH1 0x20 DUP6 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBA DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0F DUP6 PUSH2 0xE01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF67 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8F PUSH2 0xEDA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 PUSH1 0x20 DUP5 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1013 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1033 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x109C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B0 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E1 PUSH2 0x10B9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F9 PUSH2 0x10B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x10B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x1169 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A2 JUMPI PUSH2 0x11A2 PUSH2 0x1169 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F0 SWAP1 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x984C0AFE4C4C30 0xA5 EXP BASEFEE EQ 0xD9 PUSH30 0xB5EA4958DF3ED4413EB05499C767A2BF87A864736F6C634300080D003300 ",
							"sourceMap": "628:13658:4:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:4;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:13658;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:13658:4;;;-1:-1:-1;628:13658:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:15;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:15;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:15;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:15:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:15;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;628:13658:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1440": {
									"entryPoint": null,
									"id": 1440,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1324": {
									"entryPoint": 1859,
									"id": 1324,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_792": {
									"entryPoint": null,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1429": {
									"entryPoint": null,
									"id": 1429,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1418": {
									"entryPoint": 3142,
									"id": 1418,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1014": {
									"entryPoint": null,
									"id": 1014,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_1055": {
									"entryPoint": 1969,
									"id": 1055,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1909": {
									"entryPoint": null,
									"id": 1909,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_996": {
									"entryPoint": 2834,
									"id": 996,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1356": {
									"entryPoint": 2628,
									"id": 1356,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1300": {
									"entryPoint": 2216,
									"id": 1300,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_835": {
									"entryPoint": 934,
									"id": 835,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_693": {
									"entryPoint": 1406,
									"id": 693,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_856": {
									"entryPoint": 780,
									"id": 856,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_891": {
									"entryPoint": null,
									"id": 891,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1620": {
									"entryPoint": null,
									"id": 1620,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_731": {
									"entryPoint": 634,
									"id": 731,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_721": {
									"entryPoint": 1287,
									"id": 721,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_937": {
									"entryPoint": 1260,
									"id": 937,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_967": {
									"entryPoint": 1571,
									"id": 967,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_873": {
									"entryPoint": 1556,
									"id": 873,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2145": {
									"entryPoint": null,
									"id": 2145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_669": {
									"entryPoint": 552,
									"id": 669,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_741": {
									"entryPoint": 1541,
									"id": 741,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2004": {
									"entryPoint": 2885,
									"id": 2004,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_783": {
									"entryPoint": 1627,
									"id": 783,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_918": {
									"entryPoint": 1211,
									"id": 918,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12309:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:15"
															},
															"nodeType": "YulIf",
															"src": "68:71:15"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:15",
														"type": ""
													}
												],
												"src": "14:131:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:15"
															},
															"nodeType": "YulIf",
															"src": "229:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:15",
														"type": ""
													}
												],
												"src": "150:245:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:15",
														"type": ""
													}
												],
												"src": "400:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:15",
																"statements": []
															},
															"src": "674:113:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:15"
															},
															"nodeType": "YulIf",
															"src": "796:48:15"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:15",
														"type": ""
													}
												],
												"src": "592:258:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:15",
														"type": ""
													}
												],
												"src": "855:258:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:15",
														"type": ""
													}
												],
												"src": "1118:220:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:15"
															},
															"nodeType": "YulIf",
															"src": "1423:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:15",
														"type": ""
													}
												],
												"src": "1343:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:15",
														"type": ""
													}
												],
												"src": "1528:203:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:15"
															},
															"nodeType": "YulIf",
															"src": "1833:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:15",
														"type": ""
													}
												],
												"src": "1736:173:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:15"
															},
															"nodeType": "YulIf",
															"src": "2011:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:15",
														"type": ""
													}
												],
												"src": "1914:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:224:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2323:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2332:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2335:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2325:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2325:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2325:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2298:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2307:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:32:15"
															},
															"nodeType": "YulIf",
															"src": "2287:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2348:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2377:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2358:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2396:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2406:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2453:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2491:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2463:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2453:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2227:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2238:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2250:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2258:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2266:6:15",
														"type": ""
													}
												],
												"src": "2173:328:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2576:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2622:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2597:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2593:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2593:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:32:15"
															},
															"nodeType": "YulIf",
															"src": "2586:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2647:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2676:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2657:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2647:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2542:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2553:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2565:6:15",
														"type": ""
													}
												],
												"src": "2506:186:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2798:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2808:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2820:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2831:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2816:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2808:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2850:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2861:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2843:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2843:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2767:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2778:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2789:4:15",
														"type": ""
													}
												],
												"src": "2697:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2963:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3018:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3021:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3011:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3011:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2984:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:32:15"
															},
															"nodeType": "YulIf",
															"src": "2973:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3034:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3044:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3082:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3095:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3086:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3180:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3189:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3192:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3182:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3149:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3170:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3163:6:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3163:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3156:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3156:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3146:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:40:15"
															},
															"nodeType": "YulIf",
															"src": "3136:60:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3205:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3215:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2921:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2932:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2944:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2952:6:15",
														"type": ""
													}
												],
												"src": "2879:347:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3287:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3283:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3231:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:1008:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3514:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:33:15"
															},
															"nodeType": "YulIf",
															"src": "3503:53:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3565:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3575:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3613:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3623:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3670:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3680:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3721:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3752:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3763:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3748:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3735:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3725:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3776:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3786:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3780:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3831:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3833:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3833:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3833:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3827:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3816:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:14:15"
															},
															"nodeType": "YulIf",
															"src": "3813:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3856:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3881:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3860:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3936:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3915:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3919:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3911:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3911:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3907:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3900:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:35:15"
															},
															"nodeType": "YulIf",
															"src": "3897:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3961:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3984:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3971:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:16:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3965:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4012:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4002:2:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4006:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3999:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:10:15"
															},
															"nodeType": "YulIf",
															"src": "3996:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4041:17:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:7:15"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4045:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4081:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4071:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4099:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4121:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4145:2:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4149:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4141:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4141:13:15"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4156:2:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4137:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4137:22:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4161:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4133:31:15"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4166:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:40:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4117:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:53:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4103:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4229:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4231:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4231:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4231:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4188:10:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4200:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4185:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4208:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4220:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4205:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4205:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4182:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:46:15"
															},
															"nodeType": "YulIf",
															"src": "4179:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4271:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4298:6:15"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4306:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:18:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:18:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4355:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4364:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4367:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4357:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4332:2:15"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4336:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4328:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4328:11:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:20:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4346:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4321:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:33:15"
															},
															"nodeType": "YulIf",
															"src": "4318:53:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4393:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4393:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4414:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:11:15"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4423:2:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4380:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:46:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:15"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4458:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4446:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4446:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4463:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:24:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4479:16:15",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4489:6:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3435:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3446:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3458:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3466:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3474:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3482:6:15",
														"type": ""
													}
												],
												"src": "3363:1138:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4593:173:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4639:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4648:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4651:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4641:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4641:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4641:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4614:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4623:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4635:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:32:15"
															},
															"nodeType": "YulIf",
															"src": "4603:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4674:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4712:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4722:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4562:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4574:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4582:6:15",
														"type": ""
													}
												],
												"src": "4506:260:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4826:325:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4836:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4853:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4846:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4867:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4897:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4871:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4944:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4946:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4960:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4968:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4956:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4946:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4924:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4917:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:26:15"
															},
															"nodeType": "YulIf",
															"src": "4914:61:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5034:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5062:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5058:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5058:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5048:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5048:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5048:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5099:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5102:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5092:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5127:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5130:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5120:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5120:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5120:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4990:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5013:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5021:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5010:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4987:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:38:15"
															},
															"nodeType": "YulIf",
															"src": "4984:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4806:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4815:6:15",
														"type": ""
													}
												],
												"src": "4771:380:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5330:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5347:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5358:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5340:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5381:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5392:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5377:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5397:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5370:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5370:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5436:34:15",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5491:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5502:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5487:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5487:18:15"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5507:14:15",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5480:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5480:42:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5531:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5543:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5539:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5307:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5321:4:15",
														"type": ""
													}
												],
												"src": "5156:408:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5743:223:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5771:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5753:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5805:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5790:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5790:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5844:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5829:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5829:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5849:34:15",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5822:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5822:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5904:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5915:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:18:15"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5920:3:15",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5893:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5893:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5933:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5945:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5956:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5941:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5933:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5720:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5734:4:15",
														"type": ""
													}
												],
												"src": "5569:397:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:246:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6162:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6212:2:15",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6185:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6246:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6231:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6231:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6251:34:15",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6224:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6317:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6302:18:15"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6322:26:15",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6295:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6295:54:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6358:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6370:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6381:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6366:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6366:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6358:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6122:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6136:4:15",
														"type": ""
													}
												],
												"src": "5971:420:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6570:239:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6587:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6598:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6580:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6580:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6580:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6632:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6617:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6617:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6637:2:15",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6610:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6610:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6676:34:15",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6649:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6742:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6727:18:15"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6747:19:15",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6720:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6720:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6720:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6776:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6788:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6799:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6784:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6776:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6547:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6561:4:15",
														"type": ""
													}
												],
												"src": "6396:413:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6988:231:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7005:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7016:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6998:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6998:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7039:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7050:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7035:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7055:2:15",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7028:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7028:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7078:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7089:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7074:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7074:18:15"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7094:34:15",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7067:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7067:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7067:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7149:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7145:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7145:18:15"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7165:11:15",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7138:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7138:39:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7138:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7186:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7198:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7209:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7194:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7186:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6965:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6979:4:15",
														"type": ""
													}
												],
												"src": "6814:405:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7398:232:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7415:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7426:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7408:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7408:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7408:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7449:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7460:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7445:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7445:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7465:2:15",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7438:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7438:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7488:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7499:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7484:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7484:18:15"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7504:34:15",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7477:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7477:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7570:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7555:18:15"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7575:12:15",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:40:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7548:40:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7597:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7609:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7620:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7597:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7375:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7389:4:15",
														"type": ""
													}
												],
												"src": "7224:406:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7809:237:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7826:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7819:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7819:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7819:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7860:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7871:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7856:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7856:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:2:15",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7849:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7899:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7910:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7895:18:15"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7915:34:15",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7888:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7888:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7888:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7970:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7981:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7966:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7966:18:15"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7986:17:15",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7959:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7959:45:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7959:45:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8013:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8025:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8036:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8021:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8021:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8013:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7786:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7800:4:15",
														"type": ""
													}
												],
												"src": "7635:411:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8238:283:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8248:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8268:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8262:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8252:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8318:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8306:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8306:17:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8325:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8330:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8284:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8284:53:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8284:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8346:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8363:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8368:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8359:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8359:16:15"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "8350:5:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8384:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8406:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8400:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8400:13:15"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "8388:8:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8448:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8456:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8444:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8444:17:15"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8463:5:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8470:8:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8422:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8422:57:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8422:57:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8488:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8499:5:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8506:8:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8495:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8495:20:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8488:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8206:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8211:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8219:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8230:3:15",
														"type": ""
													}
												],
												"src": "8051:470:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8700:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8717:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8728:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8710:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8710:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8710:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8751:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8762:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8747:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8747:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8767:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8740:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8740:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8740:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8790:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8801:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8786:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8786:18:15"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8806:34:15",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8779:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8779:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:18:15"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8877:14:15",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8850:42:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8901:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8913:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8924:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8909:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8909:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8901:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8677:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8691:4:15",
														"type": ""
													}
												],
												"src": "8526:408:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9113:227:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9130:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9141:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9123:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9123:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9164:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9175:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9160:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9180:2:15",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9153:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9214:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9199:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9219:34:15",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9192:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9274:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9285:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9270:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:18:15"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9290:7:15",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9263:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9263:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9263:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9307:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9319:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9330:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9315:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9315:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9307:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9090:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9104:4:15",
														"type": ""
													}
												],
												"src": "8939:401:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9519:226:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9536:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9547:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9529:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9529:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9570:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9581:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9566:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9586:2:15",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9559:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9559:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9559:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9609:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9620:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9605:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9605:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9625:34:15",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9598:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9598:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9680:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9691:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9676:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9676:18:15"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9696:6:15",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9669:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9669:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9669:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9712:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9724:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9735:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9720:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9712:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9496:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9510:4:15",
														"type": ""
													}
												],
												"src": "9345:400:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9782:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9799:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9806:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9811:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9802:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9802:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9792:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9792:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9792:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9842:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9832:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9750:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9931:76:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9953:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9955:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9955:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9955:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9947:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9950:1:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9944:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9944:8:15"
															},
															"nodeType": "YulIf",
															"src": "9941:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9984:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9996:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9999:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9992:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9992:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9984:4:15"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9913:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9916:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9922:4:15",
														"type": ""
													}
												],
												"src": "9882:125:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10060:80:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10087:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10089:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10089:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10089:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10076:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10083:1:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10079:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10079:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10073:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10073:13:15"
															},
															"nodeType": "YulIf",
															"src": "10070:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10118:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10129:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10132:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10125:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10125:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10118:3:15"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10043:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10046:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10052:3:15",
														"type": ""
													}
												],
												"src": "10012:128:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10319:175:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10336:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10347:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10329:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10329:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10370:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10381:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10366:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10366:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10386:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10359:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10359:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10359:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10409:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10420:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10405:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10405:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10425:27:15",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10398:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10398:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10398:55:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10462:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10474:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10485:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10470:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10470:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10462:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10296:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10310:4:15",
														"type": ""
													}
												],
												"src": "10145:349:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10673:240:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10690:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10701:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10683:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10683:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10724:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10735:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10720:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10720:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10740:2:15",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10713:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10713:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10763:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10774:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10759:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10759:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10779:34:15",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10752:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10752:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10752:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10834:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10845:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10830:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10830:18:15"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10850:20:15",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10823:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10823:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10823:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10880:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10892:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10903:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10888:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10880:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10650:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10664:4:15",
														"type": ""
													}
												],
												"src": "10499:414:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10965:88:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10996:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10998:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10998:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10998:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10981:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10992:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10988:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10988:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10978:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10978:17:15"
															},
															"nodeType": "YulIf",
															"src": "10975:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11027:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11038:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11045:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11034:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11034:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11027:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10947:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10957:3:15",
														"type": ""
													}
												],
												"src": "10918:135:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11090:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11114:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11119:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11147:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11150:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11171:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11174:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11164:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11164:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11164:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11058:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11236:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11259:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11261:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11261:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11261:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11256:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11249:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:9:15"
															},
															"nodeType": "YulIf",
															"src": "11246:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11290:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11299:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11302:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11295:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11290:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11221:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11224:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11230:1:15",
														"type": ""
													}
												],
												"src": "11190:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11353:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11376:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11378:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11378:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11378:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11373:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11366:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11366:9:15"
															},
															"nodeType": "YulIf",
															"src": "11363:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11407:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11416:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11419:1:15"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11412:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11412:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11407:1:15"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11338:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11341:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11347:1:15",
														"type": ""
													}
												],
												"src": "11315:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11464:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11481:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11488:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11493:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11484:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11484:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11474:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11474:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11474:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11521:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11524:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11514:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11514:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11514:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11545:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11548:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11538:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11538:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11538:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11432:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11767:286:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11777:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11795:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11800:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11791:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11791:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11804:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11787:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11781:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11822:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11837:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11845:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11815:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11815:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11815:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11880:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11865:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11865:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11889:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11897:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11885:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11885:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11858:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11858:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11858:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11921:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11932:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11917:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11917:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11937:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11910:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11910:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11910:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11964:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11975:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11960:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11960:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11980:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11953:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11953:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11953:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11993:54:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12019:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12031:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12042:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12027:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12027:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "12001:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12001:46:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11993:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11712:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11723:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11731:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11739:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11747:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11758:4:15",
														"type": ""
													}
												],
												"src": "11564:489:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12138:169:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12184:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12193:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12196:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12186:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12186:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12186:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12159:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12168:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12155:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12155:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12180:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12151:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:32:15"
															},
															"nodeType": "YulIf",
															"src": "12148:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12209:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12228:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12222:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12222:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12213:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12271:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "12247:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12247:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12247:30:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12286:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12296:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12286:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12104:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12115:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12127:6:15",
														"type": ""
													}
												],
												"src": "12058:249:15"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bb565b61014f610172366004610e47565b6104ec565b610124610185366004610de8565b610507565b61019d610198366004610e83565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e9e565b610614565b61014f6101d4366004610ef0565b610623565b6101046101e7366004610de8565b61065b565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b815260040161038190611039565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b61061f338383610a44565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b815260040161038190611039565b61065584848484610b12565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b45565b60405160200161072c92919061108a565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b0316148061087c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a05750836001600160a01b03166108958461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b03161461091f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109815760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098c600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b59084906110cf565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e39084906110e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1d8484846108a8565b610b2984848484610c46565b6106555760405162461bcd60e51b8152600401610381906110fe565b606081600003610b6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b965780610b8081611150565b9150610b8f9050600a8361117f565b9150610b70565b60008167ffffffffffffffff811115610bb157610bb1610eda565b6040519080825280601f01601f191660200182016040528015610bdb576020820181803683370190505b5090505b84156108a057610bf06001836110cf565b9150610bfd600a86611193565b610c089060306110e6565b60f81b818381518110610c1d57610c1d6111a7565b60200101906001600160f81b031916908160001a905350610c3f600a8661117f565b9450610bdf565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8a9033908990889088906004016111bd565b6020604051808303816000875af1925050508015610cc5575060408051601f3d908101601f19168201909252610cc2918101906111fa565b60015b610d22573d808015610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b508051600003610d1a5760405162461bcd60e51b8152600401610381906110fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073c81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106555750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073c82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b60208210810361103357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109c818460208801610d7d565b8351908301906110b0818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b600082198211156110f9576110f96110b9565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611162576111626110b9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118e5761118e611169565b500490565b6000826111a2576111a2611169565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f090830184610da9565b9695505050505050565b60006020828403121561120c57600080fd5b815161073c81610d4756fea264697066735822122066984c0afe4c4c30a50a4814d97db5ea4958df3ed4413eb05499c767a2bf87a864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x61F CALLER DUP4 DUP4 PUSH2 0xA44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D CALLER DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x655 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB12 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH2 0x71B DUP5 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x778 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8A0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x895 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BB DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98C PUSH1 0x0 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B5 SWAP1 DUP5 SWAP1 PUSH2 0x10CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E3 SWAP1 DUP5 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1D DUP5 DUP5 DUP5 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xB29 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB6C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB96 JUMPI DUP1 PUSH2 0xB80 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x117F JUMP JUMPDEST SWAP2 POP PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A0 JUMPI PUSH2 0xBF0 PUSH1 0x1 DUP4 PUSH2 0x10CF JUMP JUMPDEST SWAP2 POP PUSH2 0xBFD PUSH1 0xA DUP7 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xC08 SWAP1 PUSH1 0x30 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3F PUSH1 0xA DUP7 PUSH2 0x117F JUMP JUMPDEST SWAP5 POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD22 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x655 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE39 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH2 0xE73 PUSH1 0x20 DUP6 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBA DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0F DUP6 PUSH2 0xE01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF67 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8F PUSH2 0xEDA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 PUSH1 0x20 DUP5 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1013 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1033 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x109C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B0 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E1 PUSH2 0x10B9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F9 PUSH2 0x10B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x10B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x1169 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A2 JUMPI PUSH2 0x11A2 PUSH2 0x1169 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F0 SWAP1 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x984C0AFE4C4C30 0xA5 EXP BASEFEE EQ 0xD9 PUSH30 0xB5EA4958DF3ED4413EB05499C767A2BF87A864736F6C634300080D003300 ",
							"sourceMap": "628:13658:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:15;;558:22;540:41;;528:2;513:18;1570:300:4;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:15;;;1674:51;;1662:2;1647:18;4000:217:4;1528:203:15;3538:401:4;;;;;;:::i;:::-;;:::i;:::-;;4727:330;;;;;;:::i;:::-;;:::i;5123:179::-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:15;;;2831:2;2816:18;1929:205:4;2697:177:15;2650:102:4;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;2818:329::-;;;;;;:::i;:::-;;:::i;4503:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:4;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:4;;-1:-1:-1;;;1707:40:4;;:104;;-1:-1:-1;;;;;;;1763:48:4;;-1:-1:-1;;;1763:48:4;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:11;;;1827:36:4;1688:175;1570:300;-1:-1:-1;;1570:300:4:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:4;4095:73;;;;-1:-1:-1;;;4095:73:4;;5358:2:15;4095:73:4;;;5340:21:15;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:15;;;5480:42;5539:19;;4095:73:4;;;;;;;;;-1:-1:-1;4186:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:4;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:4;:2;-1:-1:-1;;;;;3675:11:4;;3667:57;;;;-1:-1:-1;;;3667:57:4;;5771:2:15;3667:57:4;;;5753:21:15;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:15;;;5893:31;5941:19;;3667:57:4;5569:397:15;3667:57:4;719:10:9;-1:-1:-1;;;;;3756:21:4;;;;:62;;-1:-1:-1;3781:37:4;3798:5;719:10:9;4503:162:4;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:4;;6173:2:15;3735:165:4;;;6155:21:15;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3735:165:4;5971:420:15;3735:165:4;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:9;4949:7:4;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:4;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;5123:179::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:4;;2324:73;;;;-1:-1:-1;;;2324:73:4;;7016:2:15;2324:73:4;;;6998:21:15;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:15;;;7138:39;7194:19;;2324:73:4;6814:405:15;1929:205:4;2001:7;-1:-1:-1;;;;;2028:19:4;;2020:74;;;;-1:-1:-1;;;2020:74:4;;7426:2:15;2020:74:4;;;7408:21:15;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:15;;;7548:40;7605:19;;2020:74:4;7224:406:15;2020:74:4;-1:-1:-1;;;;;;2111:16:4;;;;;:9;:16;;;;;;;1929:205::o;2650:102::-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:9;4411:8:4;4421;4378:18;:52::i;:::-;4284:153;;:::o;5368:320::-;5537:41;719:10:9;5570:7:4;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:4;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2818:329::-;7225:4;7248:16;;;:7;:16;;;;;;2891:13;;-1:-1:-1;;;;;7248:16:4;2916:76;;;;-1:-1:-1;;;2916:76:4;;7837:2:15;2916:76:4;;;7819:21:15;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:15;;;7959:45;8021:19;;2916:76:4;7635:411:15;2916:76:4;3003:21;3027:10;3465:9;;;;;;;;;-1:-1:-1;3465:9:4;;;3389:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:4:o;11169:171::-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:4;-1:-1:-1;;;;;11243:29:4;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:4;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:4;7552:73;;;;-1:-1:-1;;;7552:73:4;;8728:2:15;7552:73:4;;;8710:21:15;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:15;;;8850:42;8909:19;;7552:73:4;8526:408:15;7552:73:4;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:4;:7;-1:-1:-1;;;;;7692:16:4;;:52;;;-1:-1:-1;;;;;;4623:25:4;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7712:32;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:4;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:4;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:4:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:4;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:4;;10572:81;;;;-1:-1:-1;;;10572:81:4;;9141:2:15;10572:81:4;;;9123:21:15;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:15;;;9263:35;9315:19;;10572:81:4;8939:401:15;10572:81:4;-1:-1:-1;;;;;10671:16:4;;10663:65;;;;-1:-1:-1;;;10663:65:4;;9547:2:15;10663:65:4;;;9529:21:15;9586:2;9566:18;;;9559:30;9625:34;9605:18;;;9598:62;-1:-1:-1;;;9676:18:15;;;9669:34;9720:19;;10663:65:4;9345:400:15;10663:65:4;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:4;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:4;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:4;-1:-1:-1;;;;;10938:21:4;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;11475:307::-;11625:8;-1:-1:-1;;;;;11616:17:4;:5;-1:-1:-1;;;;;11616:17:4;;11608:55;;;;-1:-1:-1;;;11608:55:4;;10347:2:15;11608:55:4;;;10329:21:15;10386:2;10366:18;;;10359:30;10425:27;10405:18;;;10398:55;10470:18;;11608:55:4;10145:349:15;11608:55:4;-1:-1:-1;;;;;11673:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:4;;;;;;;;;;11734:41;;540::15;;;11734::4;;513:18:15;11734:41:4;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:4;;;;;;;:::i;328:703:10:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:10;;;;;;;;;;;;-1:-1:-1;;;627:10:10;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:10;;-1:-1:-1;773:2:10;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:10;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:10;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:10;;;;;;;;-1:-1:-1;972:11:10;981:2;972:11;;:::i;:::-;;;844:150;;12335:778:4;12485:4;-1:-1:-1;;;;;12505:13:4;;1465:19:8;:23;12501:606:4;;12540:72;;-1:-1:-1;;;12540:72:4;;-1:-1:-1;;;;;12540:36:4;;;;;:72;;719:10:9;;12591:4:4;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:4;;;;;;;;-1:-1:-1;;12540:72:4;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:6;:13;12796:1;12779:18;12775:266;;12821:60;;-1:-1:-1;;;12821:60:4;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:4;-1:-1:-1;;;12662:51:4;;-1:-1:-1;12655:58:4;;12501:606;-1:-1:-1;13092:4:4;12335:778;;;;;;:::o;14:131:15:-;-1:-1:-1;;;;;;88:32:15;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:15;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:15;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:15:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:15;;1343:180;-1:-1:-1;1343:180:15:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:15;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:15:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:15;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:15;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:15:o;9750:127::-;9811:10;9806:3;9802:20;9799:1;9792:31;9842:4;9839:1;9832:15;9866:4;9863:1;9856:15;9882:125;9922:4;9950:1;9947;9944:8;9941:34;;;9955:18;;:::i;:::-;-1:-1:-1;9992:9:15;;9882:125::o;10012:128::-;10052:3;10083:1;10079:6;10076:1;10073:13;10070:39;;;10089:18;;:::i;:::-;-1:-1:-1;10125:9:15;;10012:128::o;10499:414::-;10701:2;10683:21;;;10740:2;10720:18;;;10713:30;10779:34;10774:2;10759:18;;10752:62;-1:-1:-1;;;10845:2:15;10830:18;;10823:48;10903:3;10888:19;;10499:414::o;10918:135::-;10957:3;10978:17;;;10975:43;;10998:18;;:::i;:::-;-1:-1:-1;11045:1:15;11034:13;;10918:135::o;11058:127::-;11119:10;11114:3;11110:20;11107:1;11100:31;11150:4;11147:1;11140:15;11174:4;11171:1;11164:15;11190:120;11230:1;11256;11246:35;;11261:18;;:::i;:::-;-1:-1:-1;11295:9:15;;11190:120::o;11315:112::-;11347:1;11373;11363:35;;11378:18;;:::i;:::-;-1:-1:-1;11412:9:15;;11315:112::o;11432:127::-;11493:10;11488:3;11484:20;11481:1;11474:31;11524:4;11521:1;11514:15;11548:4;11545:1;11538:15;11564:489;-1:-1:-1;;;;;11833:15:15;;;11815:34;;11885:15;;11880:2;11865:18;;11858:43;11932:2;11917:18;;11910:34;;;11980:3;11975:2;11960:18;;11953:31;;;11758:4;;12001:46;;12027:19;;12019:6;12001:46;:::i;:::-;11993:54;11564:489;-1:-1:-1;;;;;;11564:489:15:o;12058:249::-;12127:6;12180:2;12168:9;12159:7;12155:23;12151:32;12148:52;;;12196:1;12193;12186:12;12148:52;12228:9;12222:16;12247:30;12271:5;12247:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "937000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4737",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2579",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 15,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 15
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066984c0afe4c4c30a50a4814d97db5ea4958df3ed4413eb05499c767a2bf87a864736f6c634300080d0033",
									".code": [
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 2833,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2697,
											"end": 2874,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2555,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5360,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5361,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5370,
											"end": 5400,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5436,
											"end": 5470,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5409,
											"end": 5471,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5753,
											"end": 5774,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5849,
											"end": 5883,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5822,
											"end": 5884,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5893,
											"end": 5924,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5569,
											"end": 5966,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6185,
											"end": 6215,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6224,
											"end": 6286,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6322,
											"end": 6348,
											"name": "PUSH",
											"source": 15,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6295,
											"end": 6349,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6366,
											"end": 6385,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 6366,
											"end": 6385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5971,
											"end": 6391,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5038,
											"end": 5040,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7016,
											"end": 7018,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6998,
											"end": 7019,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7055,
											"end": 7057,
											"name": "PUSH",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7028,
											"end": 7058,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7094,
											"end": 7128,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7067,
											"end": 7129,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 7177,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 6814,
											"end": 7219,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7428,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7465,
											"end": 7467,
											"name": "PUSH",
											"source": 15,
											"value": "2A"
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7504,
											"end": 7538,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7477,
											"end": 7539,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7548,
											"end": 7588,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7605,
											"end": 7624,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 7605,
											"end": 7624,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 7224,
											"end": 7630,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2706,
											"end": 2719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2738,
											"end": 2745,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4419,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 5680,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7840,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "PUSH",
											"source": 15,
											"value": "2F"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7849,
											"end": 7879,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7915,
											"end": 7949,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7888,
											"end": 7950,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7959,
											"end": 8004,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8021,
											"end": 8040,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8021,
											"end": 8040,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 7635,
											"end": 8046,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3481,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3075,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3079,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3047,
											"end": 3140,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11258,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11296,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8728,
											"end": 8730,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8710,
											"end": 8731,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8767,
											"end": 8769,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8740,
											"end": 8770,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8806,
											"end": 8840,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 8786,
											"end": 8804,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8786,
											"end": 8804,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8804,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8779,
											"end": 8841,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8850,
											"end": 8892,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8909,
											"end": 8928,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8909,
											"end": 8928,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8526,
											"end": 8934,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7651,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7703,
											"end": 7708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7699,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7760,
											"end": 7767,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7684,
											"end": 7780,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10607,
											"end": 10611,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 10595,
											"end": 10602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9141,
											"end": 9143,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9153,
											"end": 9183,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9219,
											"end": 9253,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9192,
											"end": 9254,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9263,
											"end": 9298,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8939,
											"end": 9340,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9547,
											"end": 9549,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9529,
											"end": 9550,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9586,
											"end": 9588,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9559,
											"end": 9589,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9625,
											"end": 9659,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9598,
											"end": 9660,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9669,
											"end": 9703,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9720,
											"end": 9739,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 9720,
											"end": 9739,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 9345,
											"end": 9745,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10857,
											"end": 10858,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 10868,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10840,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10919,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11625,
											"end": 11633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11621,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10347,
											"end": 10349,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10329,
											"end": 10350,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10386,
											"end": 10388,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10359,
											"end": 10389,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10425,
											"end": 10452,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10398,
											"end": 10453,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10470,
											"end": 10488,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 10470,
											"end": 10488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 10145,
											"end": 10494,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6780,
											"end": 6787,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12779,
											"end": 12785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12779,
											"end": 12792,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12993,
											"end": 12999,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12987,
											"end": 13000,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12978,
											"end": 12984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12963,
											"end": 13001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13092,
											"end": 13096,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2317,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2290,
											"end": 2322,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2325,
											"end": 2337,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2348,
											"end": 2387,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2348,
											"end": 2387,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2396,
											"end": 2444,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2396,
											"end": 2444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2495,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2506,
											"end": 2692,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 2506,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2593,
											"end": 2616,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2976,
											"end": 3008,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3095,
											"end": 3127,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3163,
											"end": 3176,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3292,
											"end": 3302,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 3283,
											"end": 3303,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3328,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3752,
											"end": 3761,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3748,
											"end": 3766,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3767,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 3830,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 3924,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3907,
											"end": 3934,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3971,
											"end": 3987,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 4133,
											"end": 4164,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4129,
											"end": 4169,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4182,
											"end": 4228,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4271,
											"end": 4281,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4306,
											"end": 4308,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4291,
											"end": 4309,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4357,
											"end": 4369,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4421,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4405,
											"end": 4407,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4380,
											"end": 4426,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4435,
											"end": 4470,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4614,
											"end": 4621,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4610,
											"end": 4633,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 4638,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4956,
											"end": 4973,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5010,
											"end": 5024,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4987,
											"end": 5025,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5079,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5130,
											"end": 5134,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5135,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6396,
											"end": 6809,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 6396,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6598,
											"end": 6600,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6610,
											"end": 6640,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 6671,
											"end": 6673,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6649,
											"end": 6711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6742,
											"end": 6744,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6720,
											"end": 6767,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6799,
											"end": 6802,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6784,
											"end": 6803,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6784,
											"end": 6803,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6396,
											"end": 6809,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8230,
											"end": 8233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8274,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8262,
											"end": 8275,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 8330,
											"end": 8336,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8325,
											"end": 8328,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8318,
											"end": 8322,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8306,
											"end": 8323,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8456,
											"end": 8460,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8444,
											"end": 8461,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8461,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8495,
											"end": 8515,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8495,
											"end": 8515,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9750,
											"end": 9877,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 9750,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9811,
											"end": 9821,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9806,
											"end": 9809,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9799,
											"end": 9800,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9823,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9842,
											"end": 9846,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9832,
											"end": 9847,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9871,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9882,
											"end": 10007,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 9882,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9922,
											"end": 9926,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9951,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9944,
											"end": 9952,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9882,
											"end": 10007,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10012,
											"end": 10140,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 10012,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10084,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 10077,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10073,
											"end": 10086,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10070,
											"end": 10109,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10070,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 10070,
											"end": 10109,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10125,
											"end": 10134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10125,
											"end": 10134,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10012,
											"end": 10140,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10499,
											"end": 10913,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 10499,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10701,
											"end": 10703,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10704,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10683,
											"end": 10704,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10683,
											"end": 10704,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10740,
											"end": 10742,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10713,
											"end": 10743,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10779,
											"end": 10813,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 10774,
											"end": 10776,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10759,
											"end": 10777,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10759,
											"end": 10777,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10752,
											"end": 10814,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10845,
											"end": 10847,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10830,
											"end": 10848,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10830,
											"end": 10848,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10823,
											"end": 10871,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10903,
											"end": 10906,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10888,
											"end": 10907,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10888,
											"end": 10907,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10499,
											"end": 10913,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10918,
											"end": 11053,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 10918,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10957,
											"end": 10960,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10975,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 10975,
											"end": 11018,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11045,
											"end": 11046,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11034,
											"end": 11047,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11034,
											"end": 11047,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10918,
											"end": 11053,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11058,
											"end": 11185,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 11058,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11119,
											"end": 11129,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 11114,
											"end": 11117,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 11110,
											"end": 11130,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11100,
											"end": 11131,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 11147,
											"end": 11148,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11140,
											"end": 11155,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11178,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11171,
											"end": 11172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11179,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11190,
											"end": 11310,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 11190,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11230,
											"end": 11231,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11256,
											"end": 11257,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11246,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 11246,
											"end": 11281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11295,
											"end": 11304,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 11295,
											"end": 11304,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11190,
											"end": 11310,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11315,
											"end": 11427,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 11315,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11347,
											"end": 11348,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11373,
											"end": 11374,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11363,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11363,
											"end": 11398,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "MOD",
											"source": 15
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11315,
											"end": 11427,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11432,
											"end": 11559,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 11432,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11493,
											"end": 11503,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 11488,
											"end": 11491,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 11484,
											"end": 11504,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 11481,
											"end": 11482,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11505,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11524,
											"end": 11528,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 11521,
											"end": 11522,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11514,
											"end": 11529,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11548,
											"end": 11552,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11545,
											"end": 11546,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11538,
											"end": 11553,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11815,
											"end": 11849,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11815,
											"end": 11849,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11885,
											"end": 11900,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11885,
											"end": 11900,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11880,
											"end": 11882,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11858,
											"end": 11901,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11932,
											"end": 11934,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11980,
											"end": 11983,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 11975,
											"end": 11977,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11953,
											"end": 11984,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11953,
											"end": 11984,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11953,
											"end": 11984,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12027,
											"end": 12046,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12027,
											"end": 12046,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12019,
											"end": 12025,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11993,
											"end": 12047,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12058,
											"end": 12307,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 12058,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12127,
											"end": 12133,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12182,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12159,
											"end": 12166,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12151,
											"end": 12183,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12196,
											"end": 12197,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12186,
											"end": 12198,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12228,
											"end": 12237,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12222,
											"end": 12238,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 12271,
											"end": 12276,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 601,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 603,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 607,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 611,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 615,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 621,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093b6855a0cdb659a00fcfb006f357d80d93600bb5f6a81ef38dd14809e754da964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093b6855a0cdb659a00fcfb006f357d80d93600bb5f6a81ef38dd14809e754da964736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xB6 DUP6 GAS 0xC 0xDB PUSH6 0x9A00FCFB006F CALLDATALOAD PUSH30 0x80D93600BB5F6A81EF38DD14809E754DA964736F6C634300080D00330000 ",
							"sourceMap": "194:8061:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093b6855a0cdb659a00fcfb006f357d80d93600bb5f6a81ef38dd14809e754da964736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xB6 DUP6 GAS 0xC 0xDB PUSH6 0x9A00FCFB006F CALLDATALOAD PUSH30 0x80D93600BB5F6A81EF38DD14809E754DA964736F6C634300080D00330000 ",
							"sourceMap": "194:8061:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093b6855a0cdb659a00fcfb006f357d80d93600bb5f6a81ef38dd14809e754da964736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220be8e796df3678a252927d61fa1ac9c2d4a06755791bc1015400802f5a32140a464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be8e796df3678a252927d61fa1ac9c2d4a06755791bc1015400802f5a32140a464736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE DUP15 PUSH26 0x6DF3678A252927D61FA1AC9C2D4A06755791BC1015400802F5A3 0x21 BLOCKHASH LOG4 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "146:1885:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be8e796df3678a252927d61fa1ac9c2d4a06755791bc1015400802f5a32140a464736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE DUP15 PUSH26 0x6DF3678A252927D61FA1AC9C2D4A06755791BC1015400802F5A3 0x21 BLOCKHASH LOG4 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "146:1885:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be8e796df3678a252927d61fa1ac9c2d4a06755791bc1015400802f5a32140a464736f6c634300080d0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f5f869de8c0a490a7e0398b79732258c6c9ea88f1020e83ffaa45ba650fe3ea864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5f869de8c0a490a7e0398b79732258c6c9ea88f1020e83ffaa45ba650fe3ea864736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xF8 PUSH10 0xDE8C0A490A7E0398B797 ORIGIN 0x25 DUP13 PUSH13 0x9EA88F1020E83FFAA45BA650FE RETURNDATACOPY 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6300:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5f869de8c0a490a7e0398b79732258c6c9ea88f1020e83ffaa45ba650fe3ea864736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xF8 PUSH10 0xDE8C0A490A7E0398B797 ORIGIN 0x25 DUP13 PUSH13 0x9EA88F1020E83FFAA45BA650FE RETURNDATACOPY 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6300:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5f869de8c0a490a7e0398b79732258c6c9ea88f1020e83ffaa45ba650fe3ea864736f6c634300080d0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CLstaking.sol": {
				"CyberlionStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_collectionID",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "_tokenIDs",
									"type": "uint256[]"
								}
							],
							"name": "batchStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_collectionID",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "_tokenIDs",
									"type": "uint256[]"
								}
							],
							"name": "batchUnstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_collectionID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "claimableReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "collectionInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "collectionAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardPerDay",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalAmountStaked",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_collectionID",
									"type": "uint256"
								}
							],
							"name": "getTotalStakedItemsCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_collectionID",
									"type": "uint256"
								}
							],
							"name": "getUserStakedTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintTest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setAdminRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_collectionAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerDay",
									"type": "uint256"
								}
							],
							"name": "setCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_collectionID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_collectionID",
									"type": "uint256"
								}
							],
							"name": "totalClaimableReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_collectionID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_collectionID",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_collectionAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerDay",
									"type": "uint256"
								}
							],
							"name": "updateCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CLstaking.sol\":584:7270  contract CyberlionStaking is Ownable, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"CLstaking.sol\":670:688  keccak256(\"ADMIN\") */\n  0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n    /* \"CLstaking.sol\":642:688  bytes32 public ADMIN_ROLE = keccak256(\"ADMIN\") */\n  0x02\n  sstore\n    /* \"CLstaking.sol\":1313:1496  constructor(address _rewardsToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"CLstaking.sol\":1358:1377  rewardsTokenAddress */\n  0x03\n    /* \"CLstaking.sol\":1358:1393  rewardsTokenAddress = _rewardsToken */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"CLstaking.sol\":1403:1445  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_12\n  0x00\n    /* \"CLstaking.sol\":1434:1444  msg.sender */\n  caller\n    /* \"CLstaking.sol\":1403:1413  _setupRole */\n  tag_13\n    /* \"CLstaking.sol\":1403:1445  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_12:\n    /* \"CLstaking.sol\":1466:1476  ADMIN_ROLE */\n  sload(0x02)\n    /* \"CLstaking.sol\":1455:1489  _setupRole(ADMIN_ROLE, msg.sender) */\n  tag_14\n  swap1\n    /* \"CLstaking.sol\":1478:1488  msg.sender */\n  caller\n    /* \"CLstaking.sol\":1455:1465  _setupRole */\n  tag_13\n    /* \"CLstaking.sol\":1455:1489  _setupRole(ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_14:\n    /* \"CLstaking.sol\":1313:1496  constructor(address _rewardsToken) {... */\n  pop\n    /* \"CLstaking.sol\":584:7270  contract CyberlionStaking is Ownable, AccessControl {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6640:6750  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6718:6743  _grantRole(role, account) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6729:6733  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6735:6742  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6718:6728  _grantRole */\n  tag_20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6718:6743  _grantRole(role, account) */\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6640:6750  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n  tag_19\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n  dup7\n  and\n  dup1\n  dup7\n  mstore\n  swap3\n  mstore\n  dup1\n  dup5\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  swap1\n  mload\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  dup6\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_29:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_30:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_27:\n    /* \"CLstaking.sol\":584:7270  contract CyberlionStaking is Ownable, AccessControl {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CLstaking.sol\":584:7270  contract CyberlionStaking is Ownable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x91d14854\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xeeafbddc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf93b03bc\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x91d14854\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9e2c8a5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7b71e5db\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x842dd90a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x302f7fea\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3b552dbd\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4adc7cfd\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x66675aa9\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x8afd4e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fb4d2e5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1bbda52b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2edb531c\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CLstaking.sol\":2796:3003  function batchUnstake(uint256 _collectionID, uint256[] memory _tokenIDs) external {... */\n    tag_3:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1790:1804   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1783:1805   */\n      iszero\n        /* \"#utility.yul\":1765:1806   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1753:1755   */\n      0x20\n        /* \"#utility.yul\":1738:1756   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CLstaking.sol\":1268:1306  CollectionInfo[] public collectionInfo */\n    tag_5:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2222:2254   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":2204:2255   */\n      dup5\n      mstore\n        /* \"#utility.yul\":2286:2288   */\n      0x20\n        /* \"#utility.yul\":2271:2289   */\n      dup5\n      add\n        /* \"#utility.yul\":2264:2298   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2314:2332   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2307:2341   */\n      mstore\n        /* \"#utility.yul\":2192:2194   */\n      0x60\n        /* \"#utility.yul\":2177:2195   */\n      add\n        /* \"CLstaking.sol\":1268:1306  CollectionInfo[] public collectionInfo */\n      tag_40\n        /* \"#utility.yul\":2002:2347   */\n      jump\n        /* \"CLstaking.sol\":2587:2790  function batchStake(uint256 _collectionID, uint256[] memory _tokenIDs) external {... */\n    tag_6:\n      tag_32\n      tag_49\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_7:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":2683:2708   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2671:2673   */\n      0x20\n        /* \"#utility.yul\":2656:2674   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      tag_40\n        /* \"#utility.yul\":2537:2714   */\n      jump\n        /* \"CLstaking.sol\":5695:5964  function setCollection(address _collectionAddress, uint256 _rewardPerDay) public onlyRole(ADMIN_ROLE) {... */\n    tag_8:\n      tag_32\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_32\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"CLstaking.sol\":4791:5426  function claimableReward(address _userAddress, uint256 _collectionID, uint256 _tokenID) public view returns(uint256) {... */\n    tag_10:\n      tag_51\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_11:\n      tag_32\n      tag_72\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"CLstaking.sol\":4241:4785  function totalClaimableReward(address _userAddress, uint256 _collectionID) public view returns(uint256) {... */\n    tag_12:\n      tag_51\n      tag_75\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"CLstaking.sol\":1502:1620  function setAdminRole(address admin) public onlyRole(DEFAULT_ADMIN_ROLE){... */\n    tag_13:\n      tag_32\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"CLstaking.sol\":3132:3245  function mintTest() public onlyRole(ADMIN_ROLE) {... */\n    tag_14:\n      tag_32\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_32\n      tag_85\n      jump\t// in\n        /* \"CLstaking.sol\":642:688  bytes32 public ADMIN_ROLE = keccak256(\"ADMIN\") */\n    tag_16:\n      tag_51\n      sload(0x02)\n      dup2\n      jump\n        /* \"CLstaking.sol\":1626:1740  function stake(uint256 _collectionID, uint256 _tokenID) external {... */\n    tag_17:\n      tag_32\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"CLstaking.sol\":5970:6319  function updateCollection(... */\n    tag_18:\n      tag_32\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"CLstaking.sol\":6608:6824  function getTotalStakedItemsCount(uint256 _collectionID) external view returns (uint256) {... */\n    tag_19:\n      tag_51\n      tag_98\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4841:4892   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4829:4831   */\n      0x20\n        /* \"#utility.yul\":4814:4832   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_40\n        /* \"#utility.yul\":4695:4898   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_21:\n      tag_36\n      tag_106\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"CLstaking.sol\":3009:3126  function unstake(uint256 _collectionID, uint256 _tokenID) external {... */\n    tag_22:\n      tag_32\n      tag_110\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_23:\n      tag_51\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_24:\n      tag_32\n      tag_116\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"CLstaking.sol\":6830:6953  function onERC721Received( address, address, uint256) public pure returns (bytes4) {... */\n    tag_25:\n      tag_118\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      shl(0xe1, 0x0a85bd01)\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n    tag_118:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":5398:5431   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5380:5432   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5368:5370   */\n      0x20\n        /* \"#utility.yul\":5353:5371   */\n      add\n        /* \"CLstaking.sol\":6830:6953  function onERC721Received( address, address, uint256) public pure returns (bytes4) {... */\n      tag_40\n        /* \"#utility.yul\":5236:5438   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_32\n      tag_125\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"CLstaking.sol\":6325:6602  function getUserStakedTokens(address _userAddress, uint256 _collectionID) external view returns(uint256[] memory){... */\n    tag_27:\n      tag_127\n      tag_128\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n        /* \"CLstaking.sol\":2796:3003  function batchUnstake(uint256 _collectionID, uint256[] memory _tokenIDs) external {... */\n    tag_35:\n        /* \"CLstaking.sol\":2893:2902  uint256 i */\n      0x00\n        /* \"CLstaking.sol\":2888:2997  for (uint256 i = 0; i < _tokenIDs.length; ++i) {... */\n    tag_133:\n        /* \"CLstaking.sol\":2912:2921  _tokenIDs */\n      dup2\n        /* \"CLstaking.sol\":2912:2928  _tokenIDs.length */\n      mload\n        /* \"CLstaking.sol\":2908:2909  i */\n      dup2\n        /* \"CLstaking.sol\":2908:2928  i < _tokenIDs.length */\n      lt\n        /* \"CLstaking.sol\":2888:2997  for (uint256 i = 0; i < _tokenIDs.length; ++i) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"CLstaking.sol\":2949:2986  _unstake(_collectionID, _tokenIDs[i]) */\n      tag_136\n        /* \"CLstaking.sol\":2958:2971  _collectionID */\n      dup4\n        /* \"CLstaking.sol\":2973:2982  _tokenIDs */\n      dup4\n        /* \"CLstaking.sol\":2983:2984  i */\n      dup4\n        /* \"CLstaking.sol\":2973:2985  _tokenIDs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_138\n      jumpi\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CLstaking.sol\":2949:2957  _unstake */\n      tag_140\n        /* \"CLstaking.sol\":2949:2986  _unstake(_collectionID, _tokenIDs[i]) */\n      jump\t// in\n    tag_136:\n        /* \"CLstaking.sol\":2930:2933  ++i */\n      tag_141\n      dup2\n      tag_142\n      jump\t// in\n    tag_141:\n      swap1\n      pop\n        /* \"CLstaking.sol\":2888:2997  for (uint256 i = 0; i < _tokenIDs.length; ++i) {... */\n      jump(tag_133)\n    tag_134:\n      pop\n        /* \"CLstaking.sol\":2796:3003  function batchUnstake(uint256 _collectionID, uint256[] memory _tokenIDs) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_145\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CLstaking.sol\":1268:1306  CollectionInfo[] public collectionInfo */\n    tag_45:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap3\n      pop\n      dup4\n      jump\t// out\n        /* \"CLstaking.sol\":2587:2790  function batchStake(uint256 _collectionID, uint256[] memory _tokenIDs) external {... */\n    tag_50:\n        /* \"CLstaking.sol\":2682:2691  uint256 i */\n      0x00\n        /* \"CLstaking.sol\":2677:2784  for (uint256 i = 0; i < _tokenIDs.length; ++i) {... */\n    tag_150:\n        /* \"CLstaking.sol\":2701:2710  _tokenIDs */\n      dup2\n        /* \"CLstaking.sol\":2701:2717  _tokenIDs.length */\n      mload\n        /* \"CLstaking.sol\":2697:2698  i */\n      dup2\n        /* \"CLstaking.sol\":2697:2717  i < _tokenIDs.length */\n      lt\n        /* \"CLstaking.sol\":2677:2784  for (uint256 i = 0; i < _tokenIDs.length; ++i) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"CLstaking.sol\":2738:2773  _stake(_collectionID, _tokenIDs[i]) */\n      tag_153\n        /* \"CLstaking.sol\":2745:2758  _collectionID */\n      dup4\n        /* \"CLstaking.sol\":2760:2769  _tokenIDs */\n      dup4\n        /* \"CLstaking.sol\":2770:2771  i */\n      dup4\n        /* \"CLstaking.sol\":2760:2772  _tokenIDs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_155\n      jumpi\n      tag_155\n      tag_139\n      jump\t// in\n    tag_155:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CLstaking.sol\":2738:2744  _stake */\n      tag_156\n        /* \"CLstaking.sol\":2738:2773  _stake(_collectionID, _tokenIDs[i]) */\n      jump\t// in\n    tag_153:\n        /* \"CLstaking.sol\":2719:2722  ++i */\n      tag_157\n      dup2\n      tag_142\n      jump\t// in\n    tag_157:\n      swap1\n      pop\n        /* \"CLstaking.sol\":2677:2784  for (uint256 i = 0; i < _tokenIDs.length; ++i) {... */\n      jump(tag_150)\n        /* \"CLstaking.sol\":5695:5964  function setCollection(address _collectionAddress, uint256 _rewardPerDay) public onlyRole(ADMIN_ROLE) {... */\n    tag_60:\n        /* \"CLstaking.sol\":5785:5795  ADMIN_ROLE */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_160:\n      pop\n        /* \"CLstaking.sol\":5841:5947  CollectionInfo({collectionAddress: _collectionAddress, rewardPerDay: _rewardPerDay, totalAmountStaked: 0}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap3\n      dup4\n      mstore\n      0x00\n      swap2\n      dup2\n      add\n      dup3\n      dup2\n      mstore\n        /* \"CLstaking.sol\":5808:5822  collectionInfo */\n      0x07\n        /* \"CLstaking.sol\":5808:5957  collectionInfo.push(... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap4\n      mstore\n      swap1\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      0x03\n      swap1\n      swap4\n      mul\n      swap3\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap6\n      and\n      or\n      swap1\n      swap4\n      sstore\n      swap1\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689\n      dup3\n      add\n      sstore\n      swap1\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a\n      swap1\n      swap2\n      add\n      sstore\n        /* \"CLstaking.sol\":5695:5964  function setCollection(address _collectionAddress, uint256 _rewardPerDay) public onlyRole(ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4894:4898  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4900:4907  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4893  _grantRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      jump\t// in\n        /* \"CLstaking.sol\":4791:5426  function claimableReward(address _userAddress, uint256 _collectionID, uint256 _tokenID) public view returns(uint256) {... */\n    tag_68:\n        /* \"CLstaking.sol\":4899:4906  uint256 */\n      0x00\n        /* \"CLstaking.sol\":4918:4951  CollectionInfo storage collection */\n      dup1\n        /* \"CLstaking.sol\":4954:4968  collectionInfo */\n      0x07\n        /* \"CLstaking.sol\":4969:4982  _collectionID */\n      dup5\n        /* \"CLstaking.sol\":4954:4983  collectionInfo[_collectionID] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_172\n      tag_139\n      jump\t// in\n    tag_172:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      0x03\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n        /* \"CLstaking.sol\":5073:5101  collection.collectionAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CLstaking.sol\":5050:5102  contractTokenIdToOwner[collection.collectionAddress] */\n      dup5\n      mstore\n        /* \"CLstaking.sol\":5050:5072  contractTokenIdToOwner */\n      0x05\n        /* \"CLstaking.sol\":5050:5102  contractTokenIdToOwner[collection.collectionAddress] */\n      dup4\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"CLstaking.sol\":5050:5112  contractTokenIdToOwner[collection.collectionAddress][_tokenID] */\n      dup9\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap3\n      keccak256\n      sload\n        /* \"CLstaking.sol\":4954:4983  collectionInfo[_collectionID] */\n      swap2\n      swap3\n      pop\n        /* \"CLstaking.sol\":5050:5112  contractTokenIdToOwner[collection.collectionAddress][_tokenID] */\n      swap1\n      dup2\n      and\n        /* \"CLstaking.sol\":5050:5128  contractTokenIdToOwner[collection.collectionAddress][_tokenID] != _userAddress */\n      swap1\n      dup7\n      and\n      eq\n        /* \"CLstaking.sol\":5047:5148  if(contractTokenIdToOwner[collection.collectionAddress][_tokenID] != _userAddress)... */\n      tag_174\n      jumpi\n        /* \"CLstaking.sol\":5147:5148  0 */\n      0x00\n        /* \"CLstaking.sol\":5140:5148  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_170)\n        /* \"CLstaking.sol\":5047:5148  if(contractTokenIdToOwner[collection.collectionAddress][_tokenID] != _userAddress)... */\n    tag_174:\n        /* \"CLstaking.sol\":5210:5238  collection.collectionAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CLstaking.sol\":5159:5174  uint timeStaked */\n      0x00\n        /* \"CLstaking.sol\":5177:5239  contractTokenIdToStakedTimestamp[collection.collectionAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"CLstaking.sol\":5177:5209  contractTokenIdToStakedTimestamp */\n      0x06\n        /* \"CLstaking.sol\":5177:5239  contractTokenIdToStakedTimestamp[collection.collectionAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CLstaking.sol\":5177:5249  contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"CLstaking.sol\":5210:5238  collection.collectionAddress */\n      0x01\n        /* \"CLstaking.sol\":5365:5388  collection.rewardPerDay */\n      dup4\n      add\n      sload\n        /* \"CLstaking.sol\":5177:5249  contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID] */\n      swap1\n      swap2\n        /* \"CLstaking.sol\":5159:5174  uint timeStaked */\n      swap1\n        /* \"CLstaking.sol\":5283:5389  (block.timestamp - timeStaked)... */\n      tag_175\n      swap1\n        /* \"CLstaking.sol\":5283:5347  (block.timestamp - timeStaked)... */\n      tag_176\n        /* \"CLstaking.sol\":853:861  24*60*60 */\n      0x015180\n        /* \"CLstaking.sol\":5284:5312  block.timestamp - timeStaked */\n      tag_177\n        /* \"CLstaking.sol\":5177:5249  contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID] */\n      dup7\n        /* \"CLstaking.sol\":5284:5299  block.timestamp */\n      timestamp\n        /* \"CLstaking.sol\":5284:5312  block.timestamp - timeStaked */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"CLstaking.sol\":5283:5330  (block.timestamp - timeStaked)... */\n      swap1\n      tag_179\n        /* \"CLstaking.sol\":5283:5347  (block.timestamp - timeStaked)... */\n      jump\t// in\n    tag_176:\n        /* \"CLstaking.sol\":5283:5364  (block.timestamp - timeStaked)... */\n      swap1\n      tag_180\n        /* \"CLstaking.sol\":5283:5389  (block.timestamp - timeStaked)... */\n      jump\t// in\n    tag_175:\n        /* \"CLstaking.sol\":5259:5389  uint256 payableAmount = (block.timestamp - timeStaked)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"CLstaking.sol\":4791:5426  function claimableReward(address _userAddress, uint256 _collectionID, uint256 _tokenID) public view returns(uint256) {... */\n    tag_170:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6816:6818   */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6798:6819   */\n      mstore\n        /* \"#utility.yul\":6855:6857   */\n      0x2f\n        /* \"#utility.yul\":6835:6853   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6828:6858   */\n      mstore\n        /* \"#utility.yul\":6894:6928   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":6874:6892   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6867:6929   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":6945:6963   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6938:6983   */\n      mstore\n        /* \"#utility.yul\":7000:7019   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5980:5984  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5986:5993  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5979  _revokeRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CLstaking.sol\":4241:4785  function totalClaimableReward(address _userAddress, uint256 _collectionID) public view returns(uint256) {... */\n    tag_76:\n        /* \"CLstaking.sol\":4336:4343  uint256 */\n      0x00\n        /* \"CLstaking.sol\":4355:4376  uint256 payableAmount */\n      dup1\n        /* \"CLstaking.sol\":4379:4380  0 */\n      0x00\n        /* \"CLstaking.sol\":4355:4380  uint256 payableAmount = 0 */\n      swap1\n      pop\n        /* \"CLstaking.sol\":4390:4415  address collectionAddress */\n      0x00\n        /* \"CLstaking.sol\":4418:4432  collectionInfo */\n      0x07\n        /* \"CLstaking.sol\":4433:4446  _collectionID */\n      dup5\n        /* \"CLstaking.sol\":4418:4447  collectionInfo[_collectionID] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_191\n      tag_139\n      jump\t// in\n    tag_191:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"CLstaking.sol\":4418:4465  collectionInfo[_collectionID].collectionAddress */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"CLstaking.sol\":4475:4749  for (uint256 i; i < addressToStakedTokens[collectionAddress][_userAddress].length; i++) {... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CLstaking.sol\":4495:4535  addressToStakedTokens[collectionAddress] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CLstaking.sol\":4495:4516  addressToStakedTokens */\n      0x04\n        /* \"CLstaking.sol\":4495:4535  addressToStakedTokens[collectionAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CLstaking.sol\":4495:4549  addressToStakedTokens[collectionAddress][_userAddress] */\n      swap4\n      dup11\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"CLstaking.sol\":4495:4556  addressToStakedTokens[collectionAddress][_userAddress].length */\n      sload\n        /* \"CLstaking.sol\":4491:4556  i < addressToStakedTokens[collectionAddress][_userAddress].length */\n      dup2\n      lt\n        /* \"CLstaking.sol\":4475:4749  for (uint256 i; i < addressToStakedTokens[collectionAddress][_userAddress].length; i++) {... */\n      iszero\n      tag_194\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CLstaking.sol\":4596:4636  addressToStakedTokens[collectionAddress] */\n      dup1\n      dup4\n      and\n        /* \"CLstaking.sol\":4577:4593  uint256 _tokenId */\n      0x00\n        /* \"CLstaking.sol\":4596:4636  addressToStakedTokens[collectionAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"CLstaking.sol\":4596:4617  addressToStakedTokens */\n      0x04\n        /* \"CLstaking.sol\":4596:4636  addressToStakedTokens[collectionAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CLstaking.sol\":4596:4650  addressToStakedTokens[collectionAddress][_userAddress] */\n      swap4\n      dup11\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"CLstaking.sol\":4596:4653  addressToStakedTokens[collectionAddress][_userAddress][i] */\n      dup1\n      sload\n        /* \"CLstaking.sol\":4651:4652  i */\n      dup4\n      swap1\n        /* \"CLstaking.sol\":4596:4653  addressToStakedTokens[collectionAddress][_userAddress][i] */\n      dup2\n      lt\n      tag_197\n      jumpi\n      tag_197\n      tag_139\n      jump\t// in\n    tag_197:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"CLstaking.sol\":4577:4653  uint256 _tokenId = addressToStakedTokens[collectionAddress][_userAddress][i] */\n      swap1\n      pop\n        /* \"CLstaking.sol\":4684:4738  claimableReward(_userAddress, _collectionID, _tokenId) */\n      tag_199\n        /* \"CLstaking.sol\":4700:4712  _userAddress */\n      dup8\n        /* \"CLstaking.sol\":4714:4727  _collectionID */\n      dup8\n        /* \"CLstaking.sol\":4729:4737  _tokenId */\n      dup4\n        /* \"CLstaking.sol\":4684:4699  claimableReward */\n      tag_68\n        /* \"CLstaking.sol\":4684:4738  claimableReward(_userAddress, _collectionID, _tokenId) */\n      jump\t// in\n    tag_199:\n        /* \"CLstaking.sol\":4667:4738  payableAmount += claimableReward(_userAddress, _collectionID, _tokenId) */\n      tag_200\n      swap1\n      dup6\n      tag_201\n      jump\t// in\n    tag_200:\n      swap4\n      pop\n        /* \"CLstaking.sol\":4563:4749  {... */\n      pop\n        /* \"CLstaking.sol\":4558:4561  i++ */\n      dup1\n      dup1\n      tag_202\n      swap1\n      tag_142\n      jump\t// in\n    tag_202:\n      swap2\n      pop\n      pop\n        /* \"CLstaking.sol\":4475:4749  for (uint256 i; i < addressToStakedTokens[collectionAddress][_userAddress].length; i++) {... */\n      jump(tag_193)\n    tag_194:\n      pop\n        /* \"CLstaking.sol\":4765:4778  payableAmount */\n      swap1\n      swap5\n        /* \"CLstaking.sol\":4241:4785  function totalClaimableReward(address _userAddress, uint256 _collectionID) public view returns(uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CLstaking.sol\":1502:1620  function setAdminRole(address admin) public onlyRole(DEFAULT_ADMIN_ROLE){... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_204\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_204:\n        /* \"CLstaking.sol\":1584:1613  _setupRole(ADMIN_ROLE, admin) */\n      tag_187\n        /* \"CLstaking.sol\":1595:1605  ADMIN_ROLE */\n      sload(0x02)\n        /* \"CLstaking.sol\":1607:1612  admin */\n      dup4\n        /* \"CLstaking.sol\":1584:1594  _setupRole */\n      tag_207\n        /* \"CLstaking.sol\":1584:1613  _setupRole(ADMIN_ROLE, admin) */\n      jump\t// in\n        /* \"CLstaking.sol\":3132:3245  function mintTest() public onlyRole(ADMIN_ROLE) {... */\n    tag_83:\n        /* \"CLstaking.sol\":3168:3178  ADMIN_ROLE */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_209:\n        /* \"CLstaking.sol\":3199:3218  rewardsTokenAddress */\n      sload(0x03)\n        /* \"CLstaking.sol\":3190:3238  Mintable(rewardsTokenAddress).mint(msg.sender,1) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n        /* \"CLstaking.sol\":3225:3235  msg.sender */\n      caller\n        /* \"CLstaking.sol\":3190:3238  Mintable(rewardsTokenAddress).mint(msg.sender,1) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7345:7396   */\n      mstore\n        /* \"CLstaking.sol\":3199:3218  rewardsTokenAddress */\n      0x01\n        /* \"#utility.yul\":7412:7430   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7405:7439   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CLstaking.sol\":3199:3218  rewardsTokenAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"CLstaking.sol\":3190:3224  Mintable(rewardsTokenAddress).mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":7318:7336   */\n      0x44\n      add\n        /* \"CLstaking.sol\":3190:3238  Mintable(rewardsTokenAddress).mint(msg.sender,1) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n        /* \"CLstaking.sol\":3132:3245  function mintTest() public onlyRole(ADMIN_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7652:7654   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7634:7655   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7671:7689   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7664:7694   */\n      mstore\n        /* \"#utility.yul\":7730:7764   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7710:7728   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7703:7765   */\n      mstore\n        /* \"#utility.yul\":7782:7800   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_185\n        /* \"#utility.yul\":7450:7806   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"CLstaking.sol\":1626:1740  function stake(uint256 _collectionID, uint256 _tokenID) external {... */\n    tag_92:\n        /* \"CLstaking.sol\":1701:1733  _stake( _collectionID, _tokenID) */\n      tag_187\n        /* \"CLstaking.sol\":1709:1722  _collectionID */\n      dup3\n        /* \"CLstaking.sol\":1724:1732  _tokenID */\n      dup3\n        /* \"CLstaking.sol\":1701:1707  _stake */\n      tag_156\n        /* \"CLstaking.sol\":1701:1733  _stake( _collectionID, _tokenID) */\n      jump\t// in\n        /* \"CLstaking.sol\":5970:6319  function updateCollection(... */\n    tag_96:\n        /* \"CLstaking.sol\":6116:6126  ADMIN_ROLE */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_228\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_228:\n        /* \"CLstaking.sol\":6139:6172  CollectionInfo storage collection */\n      0x00\n        /* \"CLstaking.sol\":6175:6189  collectionInfo */\n      0x07\n        /* \"CLstaking.sol\":6190:6203  _collectionID */\n      dup6\n        /* \"CLstaking.sol\":6175:6204  collectionInfo[_collectionID] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_139\n      jump\t// in\n    tag_231:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"CLstaking.sol\":6214:6263  collection.collectionAddress = _collectionAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      dup5\n      sstore\n      pop\n      pop\n      0x01\n        /* \"CLstaking.sol\":6273:6296  collection.rewardPerDay */\n      swap1\n      swap2\n      add\n        /* \"CLstaking.sol\":6273:6312  collection.rewardPerDay = _rewardPerDay */\n      sstore\n      pop\n        /* \"CLstaking.sol\":5970:6319  function updateCollection(... */\n      jump\t// out\n        /* \"CLstaking.sol\":6608:6824  function getTotalStakedItemsCount(uint256 _collectionID) external view returns (uint256) {... */\n    tag_99:\n        /* \"CLstaking.sol\":6688:6695  uint256 */\n      0x00\n        /* \"CLstaking.sol\":6707:6740  CollectionInfo storage collection */\n      dup1\n        /* \"CLstaking.sol\":6743:6757  collectionInfo */\n      0x07\n        /* \"CLstaking.sol\":6758:6771  _collectionID */\n      dup4\n        /* \"CLstaking.sol\":6743:6772  collectionInfo[_collectionID] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_235\n      jumpi\n      tag_235\n      tag_139\n      jump\t// in\n    tag_235:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"CLstaking.sol\":6789:6817  collection.totalAmountStaked */\n      0x02\n        /* \"CLstaking.sol\":6743:6772  collectionInfo[_collectionID] */\n      0x03\n      swap1\n      swap3\n      mul\n      add\n        /* \"CLstaking.sol\":6789:6817  collection.totalAmountStaked */\n      add\n      sload\n      swap4\n        /* \"CLstaking.sol\":6608:6824  function getTotalStakedItemsCount(uint256 _collectionID) external view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"CLstaking.sol\":3009:3126  function unstake(uint256 _collectionID, uint256 _tokenID) external {... */\n    tag_111:\n        /* \"CLstaking.sol\":3086:3119  _unstake(_collectionID, _tokenID) */\n      tag_187\n        /* \"CLstaking.sol\":3095:3108  _collectionID */\n      dup3\n        /* \"CLstaking.sol\":3110:3118  _tokenID */\n      dup3\n        /* \"CLstaking.sol\":3086:3094  _unstake */\n      tag_140\n        /* \"CLstaking.sol\":3086:3119  _unstake(_collectionID, _tokenID) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_243\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5275:5279  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5281:5288  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5274  _revokeRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7652:7654   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7634:7655   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7671:7689   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7664:7694   */\n      mstore\n        /* \"#utility.yul\":7730:7764   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7710:7728   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7703:7765   */\n      mstore\n        /* \"#utility.yul\":7782:7800   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_185\n        /* \"#utility.yul\":7450:7806   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8013:8015   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7995:8016   */\n      mstore\n        /* \"#utility.yul\":8052:8054   */\n      0x26\n        /* \"#utility.yul\":8032:8050   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8025:8055   */\n      mstore\n        /* \"#utility.yul\":8091:8125   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8071:8089   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8064:8126   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8142:8160   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8135:8171   */\n      mstore\n        /* \"#utility.yul\":8188:8207   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_185\n        /* \"#utility.yul\":7811:8213   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CLstaking.sol\":6325:6602  function getUserStakedTokens(address _userAddress, uint256 _collectionID) external view returns(uint256[] memory){... */\n    tag_129:\n        /* \"CLstaking.sol\":6421:6437  uint256[] memory */\n      0x60\n        /* \"CLstaking.sol\":6448:6481  CollectionInfo storage collection */\n      0x00\n        /* \"CLstaking.sol\":6484:6498  collectionInfo */\n      0x07\n        /* \"CLstaking.sol\":6499:6512  _collectionID */\n      dup4\n        /* \"CLstaking.sol\":6484:6513  collectionInfo[_collectionID] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_259\n      tag_139\n      jump\t// in\n    tag_259:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      0x03\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n        /* \"CLstaking.sol\":6552:6580  collection.collectionAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CLstaking.sol\":6530:6581  addressToStakedTokens[collection.collectionAddress] */\n      dup5\n      mstore\n        /* \"CLstaking.sol\":6530:6551  addressToStakedTokens */\n      0x04\n        /* \"CLstaking.sol\":6530:6581  addressToStakedTokens[collection.collectionAddress] */\n      dup4\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"CLstaking.sol\":6530:6595  addressToStakedTokens[collection.collectionAddress][_userAddress] */\n      swap2\n      dup10\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"CLstaking.sol\":6523:6595  return addressToStakedTokens[collection.collectionAddress][_userAddress] */\n      dup1\n      sload\n      dup5\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap6\n      mstore\n      dup1\n      dup6\n      mstore\n        /* \"CLstaking.sol\":6484:6513  collectionInfo[_collectionID] */\n      swap2\n      swap5\n      pop\n        /* \"CLstaking.sol\":6530:6595  addressToStakedTokens[collection.collectionAddress][_userAddress] */\n      swap2\n        /* \"CLstaking.sol\":6523:6595  return addressToStakedTokens[collection.collectionAddress][_userAddress] */\n      dup4\n      add\n        /* \"CLstaking.sol\":6530:6595  addressToStakedTokens[collection.collectionAddress][_userAddress] */\n      dup3\n        /* \"CLstaking.sol\":6523:6595  return addressToStakedTokens[collection.collectionAddress][_userAddress] */\n      dup3\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_262:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_262\n      jumpi\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"CLstaking.sol\":6325:6602  function getUserStakedTokens(address _userAddress, uint256 _collectionID) external view returns(uint256[] memory){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CLstaking.sol\":3251:4235  function _unstake(... */\n    tag_140:\n        /* \"CLstaking.sol\":3351:3384  CollectionInfo storage collection */\n      0x00\n        /* \"CLstaking.sol\":3387:3401  collectionInfo */\n      0x07\n        /* \"CLstaking.sol\":3402:3415  _collectionID */\n      dup4\n        /* \"CLstaking.sol\":3387:3416  collectionInfo[_collectionID] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_265\n      jumpi\n      tag_265\n      tag_139\n      jump\t// in\n    tag_265:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      0x03\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n        /* \"CLstaking.sol\":3458:3486  collection.collectionAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CLstaking.sol\":3435:3487  contractTokenIdToOwner[collection.collectionAddress] */\n      dup5\n      mstore\n        /* \"CLstaking.sol\":3435:3457  contractTokenIdToOwner */\n      0x05\n        /* \"CLstaking.sol\":3435:3487  contractTokenIdToOwner[collection.collectionAddress] */\n      dup4\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"CLstaking.sol\":3435:3497  contractTokenIdToOwner[collection.collectionAddress][_tokenID] */\n      dup8\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap3\n      keccak256\n      sload\n        /* \"CLstaking.sol\":3387:3416  collectionInfo[_collectionID] */\n      swap2\n      swap3\n      pop\n        /* \"CLstaking.sol\":3435:3497  contractTokenIdToOwner[collection.collectionAddress][_tokenID] */\n      and\n        /* \"CLstaking.sol\":3501:3511  msg.sender */\n      caller\n        /* \"CLstaking.sol\":3435:3511  contractTokenIdToOwner[collection.collectionAddress][_tokenID] == msg.sender */\n      eq\n        /* \"CLstaking.sol\":3427:3582  require(contractTokenIdToOwner[collection.collectionAddress][_tokenID] == msg.sender,... */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8420:8422   */\n      0x20\n        /* \"CLstaking.sol\":3427:3582  require(contractTokenIdToOwner[collection.collectionAddress][_tokenID] == msg.sender,... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8402:8423   */\n      mstore\n        /* \"#utility.yul\":8459:8461   */\n      0x2d\n        /* \"#utility.yul\":8439:8457   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8432:8462   */\n      mstore\n        /* \"#utility.yul\":8498:8532   */\n      0x746f6b656e206973206e6f74207374616b6564206f722073656e64657220646f\n        /* \"#utility.yul\":8478:8496   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8471:8533   */\n      mstore\n      shl(0x9a, 0x195cc81b9bdd081bdddb881a5d)\n        /* \"#utility.yul\":8549:8567   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8542:8585   */\n      mstore\n        /* \"#utility.yul\":8602:8621   */\n      0x84\n      add\n        /* \"CLstaking.sol\":3427:3582  require(contractTokenIdToOwner[collection.collectionAddress][_tokenID] == msg.sender,... */\n      tag_185\n        /* \"#utility.yul\":8218:8627   */\n      jump\n        /* \"CLstaking.sol\":3427:3582  require(contractTokenIdToOwner[collection.collectionAddress][_tokenID] == msg.sender,... */\n    tag_267:\n        /* \"CLstaking.sol\":3593:3642  _claimReward(msg.sender, _collectionID, _tokenID) */\n      tag_270\n        /* \"CLstaking.sol\":3606:3616  msg.sender */\n      caller\n        /* \"CLstaking.sol\":3618:3631  _collectionID */\n      dup5\n        /* \"CLstaking.sol\":3633:3641  _tokenID */\n      dup5\n        /* \"CLstaking.sol\":3593:3605  _claimReward */\n      tag_271\n        /* \"CLstaking.sol\":3593:3642  _claimReward(msg.sender, _collectionID, _tokenID) */\n      jump\t// in\n    tag_270:\n        /* \"CLstaking.sol\":3751:3779  collection.collectionAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CLstaking.sol\":3729:3780  addressToStakedTokens[collection.collectionAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CLstaking.sol\":3729:3750  addressToStakedTokens */\n      0x04\n        /* \"CLstaking.sol\":3729:3780  addressToStakedTokens[collection.collectionAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CLstaking.sol\":3781:3791  msg.sender */\n      caller\n        /* \"CLstaking.sol\":3729:3792  addressToStakedTokens[collection.collectionAddress][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"CLstaking.sol\":3714:3803  _removeElement(addressToStakedTokens[collection.collectionAddress][msg.sender], _tokenID) */\n      tag_272\n      swap1\n        /* \"CLstaking.sol\":3794:3802  _tokenID */\n      dup4\n        /* \"CLstaking.sol\":3714:3728  _removeElement */\n      tag_273\n        /* \"CLstaking.sol\":3714:3803  _removeElement(addressToStakedTokens[collection.collectionAddress][msg.sender], _tokenID) */\n      jump\t// in\n    tag_272:\n        /* \"CLstaking.sol\":3895:3923  collection.collectionAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CLstaking.sol\":3872:3924  contractTokenIdToOwner[collection.collectionAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CLstaking.sol\":3872:3894  contractTokenIdToOwner */\n      0x05\n        /* \"CLstaking.sol\":3872:3924  contractTokenIdToOwner[collection.collectionAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CLstaking.sol\":3872:3934  contractTokenIdToOwner[collection.collectionAddress][_tokenID] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"CLstaking.sol\":3865:3934  delete contractTokenIdToOwner[collection.collectionAddress][_tokenID] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"CLstaking.sol\":4038:4066  collection.collectionAddress */\n      dup5\n      sload\n      swap1\n      swap4\n      and\n        /* \"CLstaking.sol\":4005:4067  contractTokenIdToStakedTimestamp[collection.collectionAddress] */\n      dup3\n      mstore\n        /* \"CLstaking.sol\":4005:4037  contractTokenIdToStakedTimestamp */\n      0x06\n        /* \"CLstaking.sol\":4005:4067  contractTokenIdToStakedTimestamp[collection.collectionAddress] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"CLstaking.sol\":4005:4077  contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID] */\n      dup6\n      dup4\n      mstore\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"CLstaking.sol\":3998:4077  delete contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID] */\n      dup2\n      swap1\n      sstore\n        /* \"CLstaking.sol\":4088:4116  collection.totalAmountStaked */\n      0x02\n      dup3\n      add\n        /* \"CLstaking.sol\":4088:4121  collection.totalAmountStaked -= 1 */\n      dup1\n      sload\n        /* \"CLstaking.sol\":3895:3923  collection.collectionAddress */\n      0x01\n      swap3\n        /* \"CLstaking.sol\":3872:3924  contractTokenIdToOwner[collection.collectionAddress] */\n      swap1\n        /* \"CLstaking.sol\":4088:4121  collection.totalAmountStaked -= 1 */\n      tag_274\n      swap1\n        /* \"CLstaking.sol\":3895:3923  collection.collectionAddress */\n      dup5\n      swap1\n        /* \"CLstaking.sol\":4088:4121  collection.totalAmountStaked -= 1 */\n      tag_178\n      jump\t// in\n    tag_274:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"CLstaking.sol\":4140:4168  collection.collectionAddress */\n      dup1\n      sload\n        /* \"CLstaking.sol\":4132:4219  IERC721(collection.collectionAddress).transferFrom(address(this), msg.sender, _tokenID) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"CLstaking.sol\":4191:4195  this */\n      address\n        /* \"CLstaking.sol\":4132:4219  IERC721(collection.collectionAddress).transferFrom(address(this), msg.sender, _tokenID) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8872:8906   */\n      mstore\n        /* \"CLstaking.sol\":4198:4208  msg.sender */\n      caller\n        /* \"#utility.yul\":8922:8940   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8915:8958   */\n      mstore\n        /* \"#utility.yul\":8974:8992   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8967:9001   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CLstaking.sol\":4140:4168  collection.collectionAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"CLstaking.sol\":4132:4182  IERC721(collection.collectionAddress).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"CLstaking.sol\":4132:4219  IERC721(collection.collectionAddress).transferFrom(address(this), msg.sender, _tokenID) */\n    tag_275:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_277:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_279\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_279:\n      pop\n      pop\n      pop\n      pop\n        /* \"CLstaking.sol\":3341:4235  {... */\n      pop\n        /* \"CLstaking.sol\":3251:4235  function _unstake(... */\n      pop\n      pop\n      jump\t// out\n        /* \"CLstaking.sol\":1746:2581  function _stake(... */\n    tag_156:\n        /* \"CLstaking.sol\":1844:1877  CollectionInfo storage collection */\n      0x00\n        /* \"CLstaking.sol\":1880:1894  collectionInfo */\n      0x07\n        /* \"CLstaking.sol\":1895:1908  _collectionID */\n      dup4\n        /* \"CLstaking.sol\":1880:1909  collectionInfo[_collectionID] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_283\n      jumpi\n      tag_283\n      tag_139\n      jump\t// in\n    tag_283:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      0x03\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n        /* \"CLstaking.sol\":2011:2039  collection.collectionAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CLstaking.sol\":1988:2040  contractTokenIdToOwner[collection.collectionAddress] */\n      dup5\n      mstore\n        /* \"CLstaking.sol\":1988:2010  contractTokenIdToOwner */\n      0x05\n        /* \"CLstaking.sol\":1988:2040  contractTokenIdToOwner[collection.collectionAddress] */\n      dup4\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"CLstaking.sol\":1988:2050  contractTokenIdToOwner[collection.collectionAddress][_tokenID] */\n      dup8\n      dup7\n      mstore\n      dup5\n      mstore\n      dup1\n      dup6\n      keccak256\n        /* \"CLstaking.sol\":1988:2063  contractTokenIdToOwner[collection.collectionAddress][_tokenID] = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"CLstaking.sol\":2053:2063  msg.sender */\n      caller\n        /* \"CLstaking.sol\":1988:2063  contractTokenIdToOwner[collection.collectionAddress][_tokenID] = msg.sender */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"CLstaking.sol\":2145:2173  collection.collectionAddress */\n      dup4\n      sload\n      dup4\n      and\n        /* \"CLstaking.sol\":2112:2174  contractTokenIdToStakedTimestamp[collection.collectionAddress] */\n      dup7\n      mstore\n        /* \"CLstaking.sol\":2112:2144  contractTokenIdToStakedTimestamp */\n      0x06\n        /* \"CLstaking.sol\":2112:2174  contractTokenIdToStakedTimestamp[collection.collectionAddress] */\n      dup6\n      mstore\n      dup2\n      dup7\n      keccak256\n        /* \"CLstaking.sol\":2112:2184  contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID] */\n      dup9\n      dup8\n      mstore\n      dup6\n      mstore\n      dup2\n      dup7\n      keccak256\n        /* \"CLstaking.sol\":2187:2202  block.timestamp */\n      timestamp\n        /* \"CLstaking.sol\":2112:2202  contractTokenIdToStakedTimestamp[collection.collectionAddress][_tokenID] = block.timestamp */\n      swap1\n      sstore\n        /* \"CLstaking.sol\":2317:2345  collection.collectionAddress */\n      dup4\n      sload\n      swap1\n      swap3\n      and\n        /* \"CLstaking.sol\":2295:2346  addressToStakedTokens[collection.collectionAddress] */\n      dup6\n      mstore\n        /* \"CLstaking.sol\":2295:2316  addressToStakedTokens */\n      0x04\n        /* \"CLstaking.sol\":2295:2346  addressToStakedTokens[collection.collectionAddress] */\n      dup5\n      mstore\n      dup1\n      dup6\n      keccak256\n        /* \"CLstaking.sol\":2295:2358  addressToStakedTokens[collection.collectionAddress][msg.sender] */\n      swap2\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup4\n      keccak256\n        /* \"CLstaking.sol\":2295:2373  addressToStakedTokens[collection.collectionAddress][msg.sender].push(_tokenID) */\n      dup1\n      sload\n        /* \"CLstaking.sol\":2011:2039  collection.collectionAddress */\n      0x01\n        /* \"CLstaking.sol\":2295:2373  addressToStakedTokens[collection.collectionAddress][msg.sender].push(_tokenID) */\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      swap2\n      dup6\n      mstore\n      swap3\n      dup5\n      keccak256\n      swap1\n      swap3\n      add\n      dup6\n      swap1\n      sstore\n        /* \"CLstaking.sol\":2384:2412  collection.totalAmountStaked */\n      0x02\n      dup2\n      add\n        /* \"CLstaking.sol\":2384:2417  collection.totalAmountStaked += 1 */\n      dup1\n      sload\n        /* \"CLstaking.sol\":1880:1909  collectionInfo[_collectionID] */\n      swap2\n      swap5\n      pop\n        /* \"CLstaking.sol\":2011:2039  collection.collectionAddress */\n      swap2\n      swap3\n        /* \"CLstaking.sol\":1880:1909  collectionInfo[_collectionID] */\n      swap1\n        /* \"CLstaking.sol\":2384:2417  collection.totalAmountStaked += 1 */\n      tag_286\n      swap1\n        /* \"CLstaking.sol\":2011:2039  collection.collectionAddress */\n      dup5\n      swap1\n        /* \"CLstaking.sol\":2384:2417  collection.totalAmountStaked += 1 */\n      tag_201\n      jump\t// in\n    tag_286:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"CLstaking.sol\":2495:2523  collection.collectionAddress */\n      dup1\n      sload\n        /* \"CLstaking.sol\":2487:2574  IERC721(collection.collectionAddress).transferFrom(msg.sender, address(this), _tokenID) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"CLstaking.sol\":2538:2548  msg.sender */\n      caller\n        /* \"CLstaking.sol\":2487:2574  IERC721(collection.collectionAddress).transferFrom(msg.sender, address(this), _tokenID) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8872:8906   */\n      mstore\n        /* \"CLstaking.sol\":2558:2562  this */\n      address\n        /* \"#utility.yul\":8922:8940   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8915:8958   */\n      mstore\n        /* \"#utility.yul\":8974:8992   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8967:9001   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CLstaking.sol\":2495:2523  collection.collectionAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"CLstaking.sol\":2487:2537  IERC721(collection.collectionAddress).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"CLstaking.sol\":2487:2574  IERC721(collection.collectionAddress).transferFrom(msg.sender, address(this), _tokenID) */\n      tag_275\n        /* \"#utility.yul\":8632:9007   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_294\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      tag_296\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7335:7339  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7341:7348  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7334  hasRole */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n      dup7\n      and\n      dup1\n      dup7\n      mstore\n      swap3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_301\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_304\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      tag_307\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7693:7697  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7699:7706  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7692  hasRole */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7681:7830  if (hasRole(role, account)) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7755:7760  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7729  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7752  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7760  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7755:7760  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6640:6750  function _setupRole(bytes32 role, address account) internal virtual {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6718:6743  _grantRole(role, account) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6729:6733  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6735:6742  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6718:6728  _grantRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6718:6743  _grantRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"CLstaking.sol\":5432:5689  function _claimReward(address _userAddress, uint256 _collectionID,uint256 _tokenID) internal {... */\n    tag_271:\n        /* \"CLstaking.sol\":5535:5556  uint256 payableAmount */\n      0x00\n        /* \"CLstaking.sol\":5559:5612  claimableReward(_userAddress, _collectionID,_tokenID) */\n      tag_314\n        /* \"CLstaking.sol\":5575:5587  _userAddress */\n      dup5\n        /* \"CLstaking.sol\":5589:5602  _collectionID */\n      dup5\n        /* \"CLstaking.sol\":5603:5611  _tokenID */\n      dup5\n        /* \"CLstaking.sol\":5559:5574  claimableReward */\n      tag_68\n        /* \"CLstaking.sol\":5559:5612  claimableReward(_userAddress, _collectionID,_tokenID) */\n      jump\t// in\n    tag_314:\n        /* \"CLstaking.sol\":5631:5650  rewardsTokenAddress */\n      sload(0x03)\n        /* \"CLstaking.sol\":5622:5682  Mintable(rewardsTokenAddress).mint(msg.sender,payableAmount) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n        /* \"CLstaking.sol\":5657:5667  msg.sender */\n      caller\n        /* \"CLstaking.sol\":5622:5682  Mintable(rewardsTokenAddress).mint(msg.sender,payableAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7345:7396   */\n      mstore\n        /* \"#utility.yul\":7412:7430   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7405:7439   */\n      dup4\n      swap1\n      mstore\n        /* \"CLstaking.sol\":5535:5612  uint256 payableAmount = claimableReward(_userAddress, _collectionID,_tokenID) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CLstaking.sol\":5631:5650  rewardsTokenAddress */\n      and\n      swap1\n        /* \"CLstaking.sol\":5622:5656  Mintable(rewardsTokenAddress).mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":7318:7336   */\n      0x44\n      add\n        /* \"CLstaking.sol\":5622:5682  Mintable(rewardsTokenAddress).mint(msg.sender,payableAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_319\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n        /* \"CLstaking.sol\":5525:5689  {... */\n      pop\n        /* \"CLstaking.sol\":5432:5689  function _claimReward(address _userAddress, uint256 _collectionID,uint256 _tokenID) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CLstaking.sol\":6959:7267  function _removeElement(uint256[] storage _array, uint256 _element) internal {... */\n    tag_273:\n        /* \"CLstaking.sol\":7052:7061  uint256 i */\n      0x00\n        /* \"CLstaking.sol\":7047:7261  for (uint256 i; i < _array.length; i++) {... */\n    tag_321:\n        /* \"CLstaking.sol\":7067:7080  _array.length */\n      dup3\n      sload\n        /* \"CLstaking.sol\":7063:7080  i < _array.length */\n      dup2\n      lt\n        /* \"CLstaking.sol\":7047:7261  for (uint256 i; i < _array.length; i++) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"CLstaking.sol\":7118:7126  _element */\n      dup2\n        /* \"CLstaking.sol\":7105:7111  _array */\n      dup4\n        /* \"CLstaking.sol\":7112:7113  i */\n      dup3\n        /* \"CLstaking.sol\":7105:7114  _array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_325\n      tag_139\n      jump\t// in\n    tag_325:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"CLstaking.sol\":7105:7126  _array[i] == _element */\n      sub\n        /* \"CLstaking.sol\":7101:7251  if (_array[i] == _element) {... */\n      tag_327\n      jumpi\n        /* \"CLstaking.sol\":7165:7178  _array.length */\n      dup3\n      sload\n        /* \"CLstaking.sol\":7158:7164  _array */\n      dup4\n      swap1\n        /* \"CLstaking.sol\":7165:7182  _array.length - 1 */\n      tag_328\n      swap1\n        /* \"CLstaking.sol\":7181:7182  1 */\n      0x01\n      swap1\n        /* \"CLstaking.sol\":7165:7182  _array.length - 1 */\n      tag_178\n      jump\t// in\n    tag_328:\n        /* \"CLstaking.sol\":7158:7183  _array[_array.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_330\n      jumpi\n      tag_330\n      tag_139\n      jump\t// in\n    tag_330:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"CLstaking.sol\":7146:7152  _array */\n      dup4\n        /* \"CLstaking.sol\":7153:7154  i */\n      dup3\n        /* \"CLstaking.sol\":7146:7155  _array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_333\n      jumpi\n      tag_333\n      tag_139\n      jump\t// in\n    tag_333:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"CLstaking.sol\":7146:7183  _array[i] = _array[_array.length - 1] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CLstaking.sol\":7201:7207  _array */\n      dup3\n        /* \"CLstaking.sol\":7201:7213  _array.pop() */\n      dup1\n      sload\n      dup1\n      tag_336\n      jumpi\n      tag_336\n      tag_337\n      jump\t// in\n    tag_336:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"CLstaking.sol\":2888:2997  for (uint256 i = 0; i < _tokenIDs.length; ++i) {... */\n      pop\n        /* \"CLstaking.sol\":2796:3003  function batchUnstake(uint256 _collectionID, uint256[] memory _tokenIDs) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CLstaking.sol\":7101:7251  if (_array[i] == _element) {... */\n    tag_327:\n        /* \"CLstaking.sol\":7082:7085  i++ */\n      dup1\n      tag_339\n      dup2\n      tag_142\n      jump\t// in\n    tag_339:\n      swap2\n      pop\n      pop\n        /* \"CLstaking.sol\":7047:7261  for (uint256 i; i < _array.length; i++) {... */\n      jump(tag_321)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_341\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      tag_343\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n      0x14\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_344\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      tag_345\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n      tag_344\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_346\n      swap3\n      swap2\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n      dup3\n      mstore\n      tag_185\n      swap2\n      0x04\n      add\n      tag_349\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1663:1676  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_351\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1724:1730  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1721  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_304\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_352\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1733:1734  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_201\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_354\n      jumpi\n      tag_354\n      tag_355\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_356\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_356:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1751  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1753  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_358\n      jumpi\n      tag_358\n      tag_139\n      jump\t// in\n    tag_358:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1776  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1777:1778  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_360\n      jumpi\n      tag_360\n      tag_139\n      jump\t// in\n    tag_360:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1809  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_364\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1822  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1813  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_304\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_365\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1825:1826  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_201\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1832:1833  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1829  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1833  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_362\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1884  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1887:1890  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_367\n      jumpi\n      tag_367\n      tag_139\n      jump\t// in\n    tag_367:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1860  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1861:1862  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_369\n      jumpi\n      tag_369\n      tag_139\n      jump\t// in\n    tag_369:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1915:1916  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1835:1838  --i */\n      tag_370\n      dup2\n      tag_371\n      jump\t// in\n    tag_370:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_361)\n    tag_362:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1954  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11603:11605   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11585:11606   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11622:11640   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11615:11645   */\n      mstore\n        /* \"#utility.yul\":11681:11715   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":11661:11679   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11654:11716   */\n      mstore\n        /* \"#utility.yul\":11733:11751   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_185\n        /* \"#utility.yul\":11401:11757   */\n      jump\n        /* \"#utility.yul\":14:141   */\n    tag_355:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:1329   */\n    tag_34:\n        /* \"#utility.yul\":239:245   */\n      0x00\n        /* \"#utility.yul\":247:253   */\n      dup1\n        /* \"#utility.yul\":300:302   */\n      0x40\n        /* \"#utility.yul\":288:297   */\n      dup4\n        /* \"#utility.yul\":279:286   */\n      dup6\n        /* \"#utility.yul\":275:298   */\n      sub\n        /* \"#utility.yul\":271:303   */\n      slt\n        /* \"#utility.yul\":268:320   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":316:317   */\n      0x00\n        /* \"#utility.yul\":313:314   */\n      dup1\n        /* \"#utility.yul\":306:318   */\n      revert\n        /* \"#utility.yul\":268:320   */\n    tag_381:\n        /* \"#utility.yul\":352:361   */\n      dup3\n        /* \"#utility.yul\":339:362   */\n      calldataload\n        /* \"#utility.yul\":329:362   */\n      swap2\n      pop\n        /* \"#utility.yul\":381:383   */\n      0x20\n        /* \"#utility.yul\":434:436   */\n      dup1\n        /* \"#utility.yul\":423:432   */\n      dup5\n        /* \"#utility.yul\":419:437   */\n      add\n        /* \"#utility.yul\":406:438   */\n      calldataload\n        /* \"#utility.yul\":457:475   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":498:500   */\n      dup1\n        /* \"#utility.yul\":490:496   */\n      dup3\n        /* \"#utility.yul\":487:501   */\n      gt\n        /* \"#utility.yul\":484:518   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":514:515   */\n      0x00\n        /* \"#utility.yul\":511:512   */\n      dup1\n        /* \"#utility.yul\":504:516   */\n      revert\n        /* \"#utility.yul\":484:518   */\n    tag_382:\n        /* \"#utility.yul\":552:558   */\n      dup2\n        /* \"#utility.yul\":541:550   */\n      dup7\n        /* \"#utility.yul\":537:559   */\n      add\n        /* \"#utility.yul\":527:559   */\n      swap2\n      pop\n        /* \"#utility.yul\":597:604   */\n      dup7\n        /* \"#utility.yul\":590:594   */\n      0x1f\n        /* \"#utility.yul\":586:588   */\n      dup4\n        /* \"#utility.yul\":582:595   */\n      add\n        /* \"#utility.yul\":578:605   */\n      slt\n        /* \"#utility.yul\":568:623   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":619:620   */\n      0x00\n        /* \"#utility.yul\":616:617   */\n      dup1\n        /* \"#utility.yul\":609:621   */\n      revert\n        /* \"#utility.yul\":568:623   */\n    tag_383:\n        /* \"#utility.yul\":655:657   */\n      dup2\n        /* \"#utility.yul\":642:658   */\n      calldataload\n        /* \"#utility.yul\":677:679   */\n      dup2\n        /* \"#utility.yul\":673:675   */\n      dup2\n        /* \"#utility.yul\":670:680   */\n      gt\n        /* \"#utility.yul\":667:703   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":683:701   */\n      tag_385\n      tag_355\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":729:731   */\n      dup1\n        /* \"#utility.yul\":726:727   */\n      0x05\n        /* \"#utility.yul\":722:732   */\n      shl\n        /* \"#utility.yul\":761:763   */\n      0x40\n        /* \"#utility.yul\":755:764   */\n      mload\n        /* \"#utility.yul\":824:826   */\n      0x1f\n        /* \"#utility.yul\":820:827   */\n      not\n        /* \"#utility.yul\":815:817   */\n      0x3f\n        /* \"#utility.yul\":811:813   */\n      dup4\n        /* \"#utility.yul\":807:818   */\n      add\n        /* \"#utility.yul\":803:828   */\n      and\n        /* \"#utility.yul\":795:801   */\n      dup2\n        /* \"#utility.yul\":791:829   */\n      add\n        /* \"#utility.yul\":879:885   */\n      dup2\n        /* \"#utility.yul\":867:877   */\n      dup2\n        /* \"#utility.yul\":864:886   */\n      lt\n        /* \"#utility.yul\":859:861   */\n      dup6\n        /* \"#utility.yul\":847:857   */\n      dup3\n        /* \"#utility.yul\":844:862   */\n      gt\n        /* \"#utility.yul\":841:887   */\n      or\n        /* \"#utility.yul\":838:910   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":890:908   */\n      tag_387\n      tag_355\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":926:928   */\n      0x40\n        /* \"#utility.yul\":919:941   */\n      mstore\n        /* \"#utility.yul\":976:994   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":1010:1025   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":1052:1063   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":1048:1068   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":1080:1099   */\n      dup10\n      dup4\n      gt\n        /* \"#utility.yul\":1077:1116   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1109:1110   */\n      dup1\n        /* \"#utility.yul\":1102:1114   */\n      revert\n        /* \"#utility.yul\":1077:1116   */\n    tag_388:\n        /* \"#utility.yul\":1136:1147   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":1156:1298   */\n    tag_389:\n        /* \"#utility.yul\":1172:1178   */\n      dup3\n        /* \"#utility.yul\":1167:1170   */\n      dup6\n        /* \"#utility.yul\":1164:1179   */\n      lt\n        /* \"#utility.yul\":1156:1298   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":1238:1255   */\n      dup5\n      calldataload\n        /* \"#utility.yul\":1226:1256   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1189:1201   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":1276:1288   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":1156:1298   */\n      jump(tag_389)\n    tag_391:\n        /* \"#utility.yul\":1317:1323   */\n      dup1\n        /* \"#utility.yul\":1307:1323   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":146:1329   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1334:1620   */\n    tag_38:\n        /* \"#utility.yul\":1392:1398   */\n      0x00\n        /* \"#utility.yul\":1445:1447   */\n      0x20\n        /* \"#utility.yul\":1433:1442   */\n      dup3\n        /* \"#utility.yul\":1424:1431   */\n      dup5\n        /* \"#utility.yul\":1420:1443   */\n      sub\n        /* \"#utility.yul\":1416:1448   */\n      slt\n        /* \"#utility.yul\":1413:1465   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1413:1465   */\n    tag_393:\n        /* \"#utility.yul\":1487:1510   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1539:1571   */\n      dup2\n      and\n        /* \"#utility.yul\":1529:1572   */\n      dup2\n      eq\n        /* \"#utility.yul\":1519:1590   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1586:1587   */\n      0x00\n        /* \"#utility.yul\":1583:1584   */\n      dup1\n        /* \"#utility.yul\":1576:1588   */\n      revert\n        /* \"#utility.yul\":1817:1997   */\n    tag_44:\n        /* \"#utility.yul\":1876:1882   */\n      0x00\n        /* \"#utility.yul\":1929:1931   */\n      0x20\n        /* \"#utility.yul\":1917:1926   */\n      dup3\n        /* \"#utility.yul\":1908:1915   */\n      dup5\n        /* \"#utility.yul\":1904:1927   */\n      sub\n        /* \"#utility.yul\":1900:1932   */\n      slt\n        /* \"#utility.yul\":1897:1949   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":1945:1946   */\n      0x00\n        /* \"#utility.yul\":1942:1943   */\n      dup1\n        /* \"#utility.yul\":1935:1947   */\n      revert\n        /* \"#utility.yul\":1897:1949   */\n    tag_397:\n      pop\n        /* \"#utility.yul\":1968:1991   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1817:1997   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2719:2892   */\n    tag_375:\n        /* \"#utility.yul\":2787:2807   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2836:2867   */\n      dup2\n      and\n        /* \"#utility.yul\":2826:2868   */\n      dup2\n      eq\n        /* \"#utility.yul\":2816:2886   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2879:2880   */\n      dup1\n        /* \"#utility.yul\":2872:2884   */\n      revert\n        /* \"#utility.yul\":2816:2886   */\n    tag_403:\n        /* \"#utility.yul\":2719:2892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2897:3151   */\n    tag_59:\n        /* \"#utility.yul\":2965:2971   */\n      0x00\n        /* \"#utility.yul\":2973:2979   */\n      dup1\n        /* \"#utility.yul\":3026:3028   */\n      0x40\n        /* \"#utility.yul\":3014:3023   */\n      dup4\n        /* \"#utility.yul\":3005:3012   */\n      dup6\n        /* \"#utility.yul\":3001:3024   */\n      sub\n        /* \"#utility.yul\":2997:3029   */\n      slt\n        /* \"#utility.yul\":2994:3046   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":3042:3043   */\n      0x00\n        /* \"#utility.yul\":3039:3040   */\n      dup1\n        /* \"#utility.yul\":3032:3044   */\n      revert\n        /* \"#utility.yul\":2994:3046   */\n    tag_405:\n        /* \"#utility.yul\":3065:3094   */\n      tag_406\n        /* \"#utility.yul\":3084:3093   */\n      dup4\n        /* \"#utility.yul\":3065:3094   */\n      tag_375\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3055:3094   */\n      swap5\n        /* \"#utility.yul\":3141:3143   */\n      0x20\n        /* \"#utility.yul\":3126:3144   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3113:3145   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2897:3151   */\n      jump\t// out\n        /* \"#utility.yul\":3156:3410   */\n    tag_63:\n        /* \"#utility.yul\":3224:3230   */\n      0x00\n        /* \"#utility.yul\":3232:3238   */\n      dup1\n        /* \"#utility.yul\":3285:3287   */\n      0x40\n        /* \"#utility.yul\":3273:3282   */\n      dup4\n        /* \"#utility.yul\":3264:3271   */\n      dup6\n        /* \"#utility.yul\":3260:3283   */\n      sub\n        /* \"#utility.yul\":3256:3288   */\n      slt\n        /* \"#utility.yul\":3253:3305   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3301:3302   */\n      0x00\n        /* \"#utility.yul\":3298:3299   */\n      dup1\n        /* \"#utility.yul\":3291:3303   */\n      revert\n        /* \"#utility.yul\":3253:3305   */\n    tag_408:\n        /* \"#utility.yul\":3337:3346   */\n      dup3\n        /* \"#utility.yul\":3324:3347   */\n      calldataload\n        /* \"#utility.yul\":3314:3347   */\n      swap2\n      pop\n        /* \"#utility.yul\":3366:3404   */\n      tag_409\n        /* \"#utility.yul\":3400:3402   */\n      0x20\n        /* \"#utility.yul\":3389:3398   */\n      dup5\n        /* \"#utility.yul\":3385:3403   */\n      add\n        /* \"#utility.yul\":3366:3404   */\n      tag_375\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3356:3404   */\n      swap1\n      pop\n        /* \"#utility.yul\":3156:3410   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3415:3737   */\n    tag_67:\n        /* \"#utility.yul\":3492:3498   */\n      0x00\n        /* \"#utility.yul\":3500:3506   */\n      dup1\n        /* \"#utility.yul\":3508:3514   */\n      0x00\n        /* \"#utility.yul\":3561:3563   */\n      0x60\n        /* \"#utility.yul\":3549:3558   */\n      dup5\n        /* \"#utility.yul\":3540:3547   */\n      dup7\n        /* \"#utility.yul\":3536:3559   */\n      sub\n        /* \"#utility.yul\":3532:3564   */\n      slt\n        /* \"#utility.yul\":3529:3581   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":3577:3578   */\n      0x00\n        /* \"#utility.yul\":3574:3575   */\n      dup1\n        /* \"#utility.yul\":3567:3579   */\n      revert\n        /* \"#utility.yul\":3529:3581   */\n    tag_411:\n        /* \"#utility.yul\":3600:3629   */\n      tag_412\n        /* \"#utility.yul\":3619:3628   */\n      dup5\n        /* \"#utility.yul\":3600:3629   */\n      tag_375\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3590:3629   */\n      swap6\n        /* \"#utility.yul\":3676:3678   */\n      0x20\n        /* \"#utility.yul\":3661:3679   */\n      dup6\n      add\n        /* \"#utility.yul\":3648:3680   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":3727:3729   */\n      0x40\n        /* \"#utility.yul\":3712:3730   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":3699:3731   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3415:3737   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3924:4110   */\n    tag_80:\n        /* \"#utility.yul\":3983:3989   */\n      0x00\n        /* \"#utility.yul\":4036:4038   */\n      0x20\n        /* \"#utility.yul\":4024:4033   */\n      dup3\n        /* \"#utility.yul\":4015:4022   */\n      dup5\n        /* \"#utility.yul\":4011:4034   */\n      sub\n        /* \"#utility.yul\":4007:4039   */\n      slt\n        /* \"#utility.yul\":4004:4056   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4052:4053   */\n      0x00\n        /* \"#utility.yul\":4049:4050   */\n      dup1\n        /* \"#utility.yul\":4042:4054   */\n      revert\n        /* \"#utility.yul\":4004:4056   */\n    tag_415:\n        /* \"#utility.yul\":4075:4104   */\n      tag_170\n        /* \"#utility.yul\":4094:4103   */\n      dup3\n        /* \"#utility.yul\":4075:4104   */\n      tag_375\n      jump\t// in\n        /* \"#utility.yul\":4115:4363   */\n    tag_91:\n        /* \"#utility.yul\":4183:4189   */\n      0x00\n        /* \"#utility.yul\":4191:4197   */\n      dup1\n        /* \"#utility.yul\":4244:4246   */\n      0x40\n        /* \"#utility.yul\":4232:4241   */\n      dup4\n        /* \"#utility.yul\":4223:4230   */\n      dup6\n        /* \"#utility.yul\":4219:4242   */\n      sub\n        /* \"#utility.yul\":4215:4247   */\n      slt\n        /* \"#utility.yul\":4212:4264   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":4260:4261   */\n      0x00\n        /* \"#utility.yul\":4257:4258   */\n      dup1\n        /* \"#utility.yul\":4250:4262   */\n      revert\n        /* \"#utility.yul\":4212:4264   */\n    tag_418:\n      pop\n      pop\n        /* \"#utility.yul\":4283:4306   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":4353:4355   */\n      0x20\n        /* \"#utility.yul\":4338:4356   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4325:4357   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4115:4363   */\n      jump\t// out\n        /* \"#utility.yul\":4368:4690   */\n    tag_95:\n        /* \"#utility.yul\":4445:4451   */\n      0x00\n        /* \"#utility.yul\":4453:4459   */\n      dup1\n        /* \"#utility.yul\":4461:4467   */\n      0x00\n        /* \"#utility.yul\":4514:4516   */\n      0x60\n        /* \"#utility.yul\":4502:4511   */\n      dup5\n        /* \"#utility.yul\":4493:4500   */\n      dup7\n        /* \"#utility.yul\":4489:4512   */\n      sub\n        /* \"#utility.yul\":4485:4517   */\n      slt\n        /* \"#utility.yul\":4482:4534   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":4530:4531   */\n      0x00\n        /* \"#utility.yul\":4527:4528   */\n      dup1\n        /* \"#utility.yul\":4520:4532   */\n      revert\n        /* \"#utility.yul\":4482:4534   */\n    tag_420:\n        /* \"#utility.yul\":4566:4575   */\n      dup4\n        /* \"#utility.yul\":4553:4576   */\n      calldataload\n        /* \"#utility.yul\":4543:4576   */\n      swap3\n      pop\n        /* \"#utility.yul\":4595:4633   */\n      tag_421\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4618:4627   */\n      dup6\n        /* \"#utility.yul\":4614:4632   */\n      add\n        /* \"#utility.yul\":4595:4633   */\n      tag_375\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4585:4633   */\n      swap2\n      pop\n        /* \"#utility.yul\":4680:4682   */\n      0x40\n        /* \"#utility.yul\":4669:4678   */\n      dup5\n        /* \"#utility.yul\":4665:4683   */\n      add\n        /* \"#utility.yul\":4652:4684   */\n      calldataload\n        /* \"#utility.yul\":4642:4684   */\n      swap1\n      pop\n        /* \"#utility.yul\":4368:4690   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4903:5231   */\n    tag_120:\n        /* \"#utility.yul\":4980:4986   */\n      0x00\n        /* \"#utility.yul\":4988:4994   */\n      dup1\n        /* \"#utility.yul\":4996:5002   */\n      0x00\n        /* \"#utility.yul\":5049:5051   */\n      0x60\n        /* \"#utility.yul\":5037:5046   */\n      dup5\n        /* \"#utility.yul\":5028:5035   */\n      dup7\n        /* \"#utility.yul\":5024:5047   */\n      sub\n        /* \"#utility.yul\":5020:5052   */\n      slt\n        /* \"#utility.yul\":5017:5069   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5062:5063   */\n      dup1\n        /* \"#utility.yul\":5055:5067   */\n      revert\n        /* \"#utility.yul\":5017:5069   */\n    tag_424:\n        /* \"#utility.yul\":5088:5117   */\n      tag_425\n        /* \"#utility.yul\":5107:5116   */\n      dup5\n        /* \"#utility.yul\":5088:5117   */\n      tag_375\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5078:5117   */\n      swap3\n      pop\n        /* \"#utility.yul\":5136:5174   */\n      tag_421\n        /* \"#utility.yul\":5170:5172   */\n      0x20\n        /* \"#utility.yul\":5159:5168   */\n      dup6\n        /* \"#utility.yul\":5155:5173   */\n      add\n        /* \"#utility.yul\":5136:5174   */\n      tag_375\n      jump\t// in\n        /* \"#utility.yul\":5443:6075   */\n    tag_131:\n        /* \"#utility.yul\":5614:5616   */\n      0x20\n        /* \"#utility.yul\":5666:5687   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5736:5749   */\n      dup3\n      mload\n        /* \"#utility.yul\":5639:5657   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5758:5780   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5585:5589   */\n      0x00\n      swap2\n        /* \"#utility.yul\":5614:5616   */\n      swap1\n        /* \"#utility.yul\":5837:5852   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5811:5813   */\n      0x40\n        /* \"#utility.yul\":5796:5814   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5585:5589   */\n      dup5\n        /* \"#utility.yul\":5880:6049   */\n    tag_429:\n        /* \"#utility.yul\":5894:5900   */\n      dup2\n        /* \"#utility.yul\":5891:5892   */\n      dup2\n        /* \"#utility.yul\":5888:5901   */\n      lt\n        /* \"#utility.yul\":5880:6049   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":5955:5968   */\n      dup4\n      mload\n        /* \"#utility.yul\":5943:5969   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6024:6039   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":5989:6001   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":5916:5917   */\n      0x01\n        /* \"#utility.yul\":5909:5918   */\n      add\n        /* \"#utility.yul\":5880:6049   */\n      jump(tag_429)\n    tag_431:\n      pop\n        /* \"#utility.yul\":6066:6069   */\n      swap1\n      swap7\n        /* \"#utility.yul\":5443:6075   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6080:6207   */\n    tag_139:\n        /* \"#utility.yul\":6141:6151   */\n      0x4e487b71\n        /* \"#utility.yul\":6136:6139   */\n      0xe0\n        /* \"#utility.yul\":6132:6152   */\n      shl\n        /* \"#utility.yul\":6129:6130   */\n      0x00\n        /* \"#utility.yul\":6122:6153   */\n      mstore\n        /* \"#utility.yul\":6172:6176   */\n      0x32\n        /* \"#utility.yul\":6169:6170   */\n      0x04\n        /* \"#utility.yul\":6162:6177   */\n      mstore\n        /* \"#utility.yul\":6196:6200   */\n      0x24\n        /* \"#utility.yul\":6193:6194   */\n      0x00\n        /* \"#utility.yul\":6186:6201   */\n      revert\n        /* \"#utility.yul\":6212:6339   */\n    tag_376:\n        /* \"#utility.yul\":6273:6283   */\n      0x4e487b71\n        /* \"#utility.yul\":6268:6271   */\n      0xe0\n        /* \"#utility.yul\":6264:6284   */\n      shl\n        /* \"#utility.yul\":6261:6262   */\n      0x00\n        /* \"#utility.yul\":6254:6285   */\n      mstore\n        /* \"#utility.yul\":6304:6308   */\n      0x11\n        /* \"#utility.yul\":6301:6302   */\n      0x04\n        /* \"#utility.yul\":6294:6309   */\n      mstore\n        /* \"#utility.yul\":6328:6332   */\n      0x24\n        /* \"#utility.yul\":6325:6326   */\n      0x00\n        /* \"#utility.yul\":6318:6333   */\n      revert\n        /* \"#utility.yul\":6344:6479   */\n    tag_142:\n        /* \"#utility.yul\":6383:6386   */\n      0x00\n        /* \"#utility.yul\":6404:6421   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6401:6444   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":6424:6442   */\n      tag_436\n      tag_376\n      jump\t// in\n    tag_436:\n      pop\n        /* \"#utility.yul\":6471:6472   */\n      0x01\n        /* \"#utility.yul\":6460:6473   */\n      add\n      swap1\n        /* \"#utility.yul\":6344:6479   */\n      jump\t// out\n        /* \"#utility.yul\":6484:6609   */\n    tag_178:\n        /* \"#utility.yul\":6524:6528   */\n      0x00\n        /* \"#utility.yul\":6552:6553   */\n      dup3\n        /* \"#utility.yul\":6549:6550   */\n      dup3\n        /* \"#utility.yul\":6546:6554   */\n      lt\n        /* \"#utility.yul\":6543:6577   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":6557:6575   */\n      tag_439\n      tag_376\n      jump\t// in\n    tag_439:\n      pop\n        /* \"#utility.yul\":6594:6603   */\n      sub\n      swap1\n        /* \"#utility.yul\":6484:6609   */\n      jump\t// out\n        /* \"#utility.yul\":7030:7158   */\n    tag_201:\n        /* \"#utility.yul\":7070:7073   */\n      0x00\n        /* \"#utility.yul\":7101:7102   */\n      dup3\n        /* \"#utility.yul\":7097:7103   */\n      not\n        /* \"#utility.yul\":7094:7095   */\n      dup3\n        /* \"#utility.yul\":7091:7104   */\n      gt\n        /* \"#utility.yul\":7088:7127   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":7107:7125   */\n      tag_443\n      tag_376\n      jump\t// in\n    tag_443:\n      pop\n        /* \"#utility.yul\":7143:7152   */\n      add\n      swap1\n        /* \"#utility.yul\":7030:7158   */\n      jump\t// out\n        /* \"#utility.yul\":9012:9229   */\n    tag_301:\n        /* \"#utility.yul\":9052:9053   */\n      0x00\n        /* \"#utility.yul\":9078:9079   */\n      dup3\n        /* \"#utility.yul\":9068:9200   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":9122:9132   */\n      0x4e487b71\n        /* \"#utility.yul\":9117:9120   */\n      0xe0\n        /* \"#utility.yul\":9113:9133   */\n      shl\n        /* \"#utility.yul\":9110:9111   */\n      0x00\n        /* \"#utility.yul\":9103:9134   */\n      mstore\n        /* \"#utility.yul\":9157:9161   */\n      0x12\n        /* \"#utility.yul\":9154:9155   */\n      0x04\n        /* \"#utility.yul\":9147:9162   */\n      mstore\n        /* \"#utility.yul\":9185:9189   */\n      0x24\n        /* \"#utility.yul\":9182:9183   */\n      0x00\n        /* \"#utility.yul\":9175:9190   */\n      revert\n        /* \"#utility.yul\":9068:9200   */\n    tag_450:\n      pop\n        /* \"#utility.yul\":9214:9223   */\n      div\n      swap1\n        /* \"#utility.yul\":9012:9229   */\n      jump\t// out\n        /* \"#utility.yul\":9234:9402   */\n    tag_304:\n        /* \"#utility.yul\":9274:9281   */\n      0x00\n        /* \"#utility.yul\":9340:9341   */\n      dup2\n        /* \"#utility.yul\":9336:9337   */\n      0x00\n        /* \"#utility.yul\":9332:9338   */\n      not\n        /* \"#utility.yul\":9328:9342   */\n      div\n        /* \"#utility.yul\":9325:9326   */\n      dup4\n        /* \"#utility.yul\":9322:9343   */\n      gt\n        /* \"#utility.yul\":9317:9318   */\n      dup3\n        /* \"#utility.yul\":9310:9319   */\n      iszero\n        /* \"#utility.yul\":9303:9320   */\n      iszero\n        /* \"#utility.yul\":9299:9344   */\n      and\n        /* \"#utility.yul\":9296:9367   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":9347:9365   */\n      tag_453\n      tag_376\n      jump\t// in\n    tag_453:\n      pop\n        /* \"#utility.yul\":9387:9396   */\n      mul\n      swap1\n        /* \"#utility.yul\":9234:9402   */\n      jump\t// out\n        /* \"#utility.yul\":9686:9813   */\n    tag_337:\n        /* \"#utility.yul\":9747:9757   */\n      0x4e487b71\n        /* \"#utility.yul\":9742:9745   */\n      0xe0\n        /* \"#utility.yul\":9738:9758   */\n      shl\n        /* \"#utility.yul\":9735:9736   */\n      0x00\n        /* \"#utility.yul\":9728:9759   */\n      mstore\n        /* \"#utility.yul\":9778:9782   */\n      0x31\n        /* \"#utility.yul\":9775:9776   */\n      0x04\n        /* \"#utility.yul\":9768:9783   */\n      mstore\n        /* \"#utility.yul\":9802:9806   */\n      0x24\n        /* \"#utility.yul\":9799:9800   */\n      0x00\n        /* \"#utility.yul\":9792:9807   */\n      revert\n        /* \"#utility.yul\":9818:10076   */\n    tag_377:\n        /* \"#utility.yul\":9890:9891   */\n      0x00\n        /* \"#utility.yul\":9900:10013   */\n    tag_457:\n        /* \"#utility.yul\":9914:9920   */\n      dup4\n        /* \"#utility.yul\":9911:9912   */\n      dup2\n        /* \"#utility.yul\":9908:9921   */\n      lt\n        /* \"#utility.yul\":9900:10013   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":9990:10001   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9984:10002   */\n      mload\n        /* \"#utility.yul\":9971:9982   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9964:10003   */\n      mstore\n        /* \"#utility.yul\":9936:9938   */\n      0x20\n        /* \"#utility.yul\":9929:9939   */\n      add\n        /* \"#utility.yul\":9900:10013   */\n      jump(tag_457)\n    tag_459:\n        /* \"#utility.yul\":10031:10037   */\n      dup4\n        /* \"#utility.yul\":10028:10029   */\n      dup2\n        /* \"#utility.yul\":10025:10038   */\n      gt\n        /* \"#utility.yul\":10022:10070   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":10066:10067   */\n      0x00\n        /* \"#utility.yul\":10057:10063   */\n      dup5\n        /* \"#utility.yul\":10052:10055   */\n      dup5\n        /* \"#utility.yul\":10048:10064   */\n      add\n        /* \"#utility.yul\":10041:10068   */\n      mstore\n        /* \"#utility.yul\":10022:10070   */\n    tag_460:\n      pop\n        /* \"#utility.yul\":9818:10076   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10081:10867   */\n    tag_347:\n        /* \"#utility.yul\":10492:10517   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":10487:10490   */\n      dup2\n        /* \"#utility.yul\":10480:10518   */\n      mstore\n        /* \"#utility.yul\":10462:10465   */\n      0x00\n        /* \"#utility.yul\":10547:10553   */\n      dup4\n        /* \"#utility.yul\":10541:10554   */\n      mload\n        /* \"#utility.yul\":10563:10625   */\n      tag_462\n        /* \"#utility.yul\":10618:10624   */\n      dup2\n        /* \"#utility.yul\":10613:10615   */\n      0x17\n        /* \"#utility.yul\":10608:10611   */\n      dup6\n        /* \"#utility.yul\":10604:10616   */\n      add\n        /* \"#utility.yul\":10597:10601   */\n      0x20\n        /* \"#utility.yul\":10589:10595   */\n      dup9\n        /* \"#utility.yul\":10585:10602   */\n      add\n        /* \"#utility.yul\":10563:10625   */\n      tag_377\n      jump\t// in\n    tag_462:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":10684:10686   */\n      0x17\n        /* \"#utility.yul\":10644:10660   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":10676:10687   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":10669:10709   */\n      mstore\n        /* \"#utility.yul\":10734:10747   */\n      dup4\n      mload\n        /* \"#utility.yul\":10756:10819   */\n      tag_463\n        /* \"#utility.yul\":10734:10747   */\n      dup2\n        /* \"#utility.yul\":10805:10807   */\n      0x28\n        /* \"#utility.yul\":10797:10808   */\n      dup5\n      add\n        /* \"#utility.yul\":10790:10794   */\n      0x20\n        /* \"#utility.yul\":10778:10795   */\n      dup9\n      add\n        /* \"#utility.yul\":10756:10819   */\n      tag_377\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10839:10856   */\n      add\n        /* \"#utility.yul\":10858:10860   */\n      0x28\n        /* \"#utility.yul\":10835:10861   */\n      add\n      swap5\n        /* \"#utility.yul\":10081:10867   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10872:11255   */\n    tag_349:\n        /* \"#utility.yul\":11021:11023   */\n      0x20\n        /* \"#utility.yul\":11010:11019   */\n      dup2\n        /* \"#utility.yul\":11003:11024   */\n      mstore\n        /* \"#utility.yul\":10984:10988   */\n      0x00\n        /* \"#utility.yul\":11053:11059   */\n      dup3\n        /* \"#utility.yul\":11047:11060   */\n      mload\n        /* \"#utility.yul\":11096:11102   */\n      dup1\n        /* \"#utility.yul\":11091:11093   */\n      0x20\n        /* \"#utility.yul\":11080:11089   */\n      dup5\n        /* \"#utility.yul\":11076:11094   */\n      add\n        /* \"#utility.yul\":11069:11103   */\n      mstore\n        /* \"#utility.yul\":11112:11178   */\n      tag_465\n        /* \"#utility.yul\":11171:11177   */\n      dup2\n        /* \"#utility.yul\":11166:11168   */\n      0x40\n        /* \"#utility.yul\":11155:11164   */\n      dup6\n        /* \"#utility.yul\":11151:11169   */\n      add\n        /* \"#utility.yul\":11146:11148   */\n      0x20\n        /* \"#utility.yul\":11138:11144   */\n      dup8\n        /* \"#utility.yul\":11134:11149   */\n      add\n        /* \"#utility.yul\":11112:11178   */\n      tag_377\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":11239:11241   */\n      0x1f\n        /* \"#utility.yul\":11218:11233   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":11214:11243   */\n      and\n        /* \"#utility.yul\":11199:11244   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":11246:11248   */\n      0x40\n        /* \"#utility.yul\":11195:11249   */\n      add\n      swap3\n        /* \"#utility.yul\":10872:11255   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11260:11396   */\n    tag_371:\n        /* \"#utility.yul\":11299:11302   */\n      0x00\n        /* \"#utility.yul\":11327:11332   */\n      dup2\n        /* \"#utility.yul\":11317:11356   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":11336:11354   */\n      tag_468\n      tag_376\n      jump\t// in\n    tag_468:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":11372:11390   */\n      add\n      swap1\n        /* \"#utility.yul\":11260:11396   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205cb3e017827c62e7f61a541f68e7321199521a388a5fd7a87af6e79a57038eb264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2576": {
									"entryPoint": null,
									"id": 2576,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_416": {
									"entryPoint": null,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 257,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1909": {
									"entryPoint": null,
									"id": 1909,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_227": {
									"entryPoint": 241,
									"id": 227,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_496": {
									"entryPoint": 161,
									"id": 496,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": null,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:15"
															},
															"nodeType": "YulIf",
															"src": "105:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:15"
															},
															"nodeType": "YulIf",
															"src": "204:70:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:15",
														"type": ""
													}
												],
												"src": "14:290:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426002553480156200003557600080fd5b50604051620018a7380380620018a7833981016040819052620000589162000189565b6200006333620000a1565b600380546001600160a01b0319166001600160a01b0383161790556200008b600033620000f1565b6002546200009a9033620000f1565b50620001bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000fd828262000101565b5050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620000fd5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000602082840312156200019c57600080fd5b81516001600160a01b0381168114620001b457600080fd5b9392505050565b6116dc80620001cb6000396000f3fe608060405234801561001057600080fd5b50600436106101725760003560e01c8063715018a6116100de57806391d1485411610097578063d547741f11610071578063d547741f1461033e578063eeafbddc14610351578063f2fde38b14610387578063f93b03bc1461039a57600080fd5b806391d14854146103105780639e2c8a5b14610323578063a217fddf1461033657600080fd5b8063715018a6146102ab57806375b238fc146102b35780637b0472f0146102bc5780637b71e5db146102cf578063842dd90a146102e25780638da5cb5b146102f557600080fd5b80632f2ff15d116101305780632f2ff15d14610244578063302f7fea1461025757806336568abe1461026a5780633b552dbd1461027d5780634adc7cfd1461029057806366675aa9146102a357600080fd5b80628afd4e1461017757806301ffc9a71461018c5780630fb4d2e5146101b45780631bbda52b146101ec578063248a9ca3146101ff5780632edb531c14610231575b600080fd5b61018a610185366004611258565b6103ba565b005b61019f61019a366004611322565b6103fe565b60405190151581526020015b60405180910390f35b6101c76101c236600461134c565b610435565b604080516001600160a01b0390941684526020840192909252908201526060016101ab565b61018a6101fa366004611258565b610472565b61022361020d36600461134c565b6000908152600160208190526040909120015490565b6040519081526020016101ab565b61018a61023f366004611381565b6104b1565b61018a6102523660046113ab565b61057e565b6102236102653660046113d7565b6105a4565b61018a6102783660046113ab565b610662565b61022361028b366004611381565b6106e5565b61018a61029e36600461140a565b6107c5565b61018a6107dc565b61018a61084f565b61022360025481565b61018a6102ca366004611425565b6108b5565b61018a6102dd366004611447565b6108bf565b6102236102f036600461134c565b610919565b6000546040516001600160a01b0390911681526020016101ab565b61019f61031e3660046113ab565b61094a565b61018a610331366004611425565b610975565b610223600081565b61018a61034c3660046113ab565b61097f565b61036e61035f36600461147c565b630a85bd0160e11b9392505050565b6040516001600160e01b031990911681526020016101ab565b61018a61039536600461140a565b6109a5565b6103ad6103a8366004611381565b610a70565b6040516101ab91906114a8565b60005b81518110156103f9576103e9838383815181106103dc576103dc6114ec565b6020026020010151610b0f565b6103f281611518565b90506103bd565b505050565b60006001600160e01b03198216637965db0b60e01b148061042f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6007818154811061044557600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b60005b81518110156103f9576104a183838381518110610494576104946114ec565b6020026020010151610cd0565b6104aa81611518565b9050610475565b6002546104bd81610dc5565b50604080516060810182526001600160a01b03938416815260208101928352600091810182815260078054600181018255935290517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600390930292830180546001600160a01b031916919095161790935590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68982015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a90910155565b6000828152600160208190526040909120015461059a81610dc5565b6103f98383610dcf565b600080600784815481106105ba576105ba6114ec565b60009182526020808320600390920290910180546001600160a01b03908116845260058352604080852088865290935291909220549192509081169086161461060757600091505061065b565b80546001600160a01b0316600090815260066020908152604080832086845290915281205460018301549091906106559061064f620151806106498642611531565b90610e3a565b90610e46565b93505050505b9392505050565b6001600160a01b03811633146106d75760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106e18282610e52565b5050565b60008060009050600060078481548110610701576107016114ec565b600091825260208220600390910201546001600160a01b031691505b6001600160a01b038083166000908152600460209081526040808320938a16835292905220548110156107bb576001600160a01b038083166000908152600460209081526040808320938a168352929052908120805483908110610783576107836114ec565b9060005260206000200154905061079b8787836105a4565b6107a59085611548565b93505080806107b390611518565b91505061071d565b5090949350505050565b60006107d081610dc5565b6106e160025483610eb9565b6002546107e881610dc5565b6003546040516340c10f1960e01b8152336004820152600160248201526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031633146108a95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ce565b6108b36000610ec3565b565b6106e18282610cd0565b6002546108cb81610dc5565b6000600785815481106108e0576108e06114ec565b6000918252602090912060039091020180546001600160a01b0319166001600160a01b0395909516949094178455505060019091015550565b6000806007838154811061092f5761092f6114ec565b60009182526020909120600260039092020101549392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6106e18282610b0f565b6000828152600160208190526040909120015461099b81610dc5565b6103f98383610e52565b6000546001600160a01b031633146109ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ce565b6001600160a01b038116610a645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ce565b610a6d81610ec3565b50565b6060600060078381548110610a8757610a876114ec565b60009182526020808320600390920290910180546001600160a01b039081168452600483526040808520918916855290835292839020805484518185028101850190955280855291945091830182828015610b0157602002820191906000526020600020905b815481526020019060010190808311610aed575b505050505091505092915050565b600060078381548110610b2457610b246114ec565b60009182526020808320600390920290910180546001600160a01b0390811684526005835260408085208786529093529190922054919250163314610bc15760405162461bcd60e51b815260206004820152602d60248201527f746f6b656e206973206e6f74207374616b6564206f722073656e64657220646f60448201526c195cc81b9bdd081bdddb881a5d609a1b60648201526084016106ce565b610bcc338484610f13565b80546001600160a01b031660009081526004602090815260408083203384529091529020610bfa9083610f8b565b80546001600160a01b039081166000908152600560209081526040808320868452825280832080546001600160a01b03191690558454909316825260068152828220858352905290812081905560028201805460019290610c5c908490611531565b909155505080546040516323b872dd60e01b8152306004820152336024820152604481018490526001600160a01b03909116906323b872dd906064015b600060405180830381600087803b158015610cb357600080fd5b505af1158015610cc7573d6000803e3d6000fd5b50505050505050565b600060078381548110610ce557610ce56114ec565b60009182526020808320600390920290910180546001600160a01b039081168452600583526040808520878652845280852080546001600160a01b0319163390811790915583548316865260068552818620888752855281862042905583549092168552600484528085209185529083528320805460018181018355918552928420909201859055600281018054919450919290610d84908490611548565b909155505080546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401610c99565b610a6d8133611042565b610dd9828261094a565b6106e15760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600061065b8284611560565b600061065b8284611582565b610e5c828261094a565b156106e15760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6106e18282610dcf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610f208484846105a4565b6003546040516340c10f1960e01b8152336004820152602481018390529192506001600160a01b0316906340c10f1990604401600060405180830381600087803b158015610f6d57600080fd5b505af1158015610f81573d6000803e3d6000fd5b5050505050505050565b60005b82548110156103f95781838281548110610faa57610faa6114ec565b9060005260206000200154036110305782548390610fca90600190611531565b81548110610fda57610fda6114ec565b9060005260206000200154838281548110610ff757610ff76114ec565b906000526020600020018190555082805480611015576110156115a1565b60019003818190600052602060002001600090559055505050565b8061103a81611518565b915050610f8e565b61104c828261094a565b6106e157611064816001600160a01b031660146110a6565b61106f8360206110a6565b6040516020016110809291906115e7565b60408051601f198184030181529082905262461bcd60e51b82526106ce9160040161165c565b606060006110b5836002611582565b6110c0906002611548565b67ffffffffffffffff8111156110d8576110d8611242565b6040519080825280601f01601f191660200182016040528015611102576020820181803683370190505b509050600360fc1b8160008151811061111d5761111d6114ec565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061114c5761114c6114ec565b60200101906001600160f81b031916908160001a9053506000611170846002611582565b61117b906001611548565b90505b60018111156111f3576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106111af576111af6114ec565b1a60f81b8282815181106111c5576111c56114ec565b60200101906001600160f81b031916908160001a90535060049490941c936111ec8161168f565b905061117e565b50831561065b5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106ce565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561126b57600080fd5b8235915060208084013567ffffffffffffffff8082111561128b57600080fd5b818601915086601f83011261129f57600080fd5b8135818111156112b1576112b1611242565b8060051b604051601f19603f830116810181811085821117156112d6576112d6611242565b6040529182528482019250838101850191898311156112f457600080fd5b938501935b82851015611312578435845293850193928501926112f9565b8096505050505050509250929050565b60006020828403121561133457600080fd5b81356001600160e01b03198116811461065b57600080fd5b60006020828403121561135e57600080fd5b5035919050565b80356001600160a01b038116811461137c57600080fd5b919050565b6000806040838503121561139457600080fd5b61139d83611365565b946020939093013593505050565b600080604083850312156113be57600080fd5b823591506113ce60208401611365565b90509250929050565b6000806000606084860312156113ec57600080fd5b6113f584611365565b95602085013595506040909401359392505050565b60006020828403121561141c57600080fd5b61065b82611365565b6000806040838503121561143857600080fd5b50508035926020909101359150565b60008060006060848603121561145c57600080fd5b8335925061146c60208501611365565b9150604084013590509250925092565b60008060006060848603121561149157600080fd5b61149a84611365565b925061146c60208501611365565b6020808252825182820181905260009190848201906040850190845b818110156114e0578351835292840192918401916001016114c4565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161152a5761152a611502565b5060010190565b60008282101561154357611543611502565b500390565b6000821982111561155b5761155b611502565b500190565b60008261157d57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561159c5761159c611502565b500290565b634e487b7160e01b600052603160045260246000fd5b60005b838110156115d25781810151838201526020016115ba565b838111156115e1576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161161f8160178501602088016115b7565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516116508160288401602088016115b7565b01602801949350505050565b602081526000825180602084015261167b8160408501602087016115b7565b601f01601f19169190910160400192915050565b60008161169e5761169e611502565b50600019019056fea26469706673582212205cb3e017827c62e7f61a541f68e7321199521a388a5fd7a87af6e79a57038eb264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18A7 CODESIZE SUB DUP1 PUSH3 0x18A7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x58 SWAP2 PUSH3 0x189 JUMP JUMPDEST PUSH3 0x63 CALLER PUSH3 0xA1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH3 0x8B PUSH1 0x0 CALLER PUSH3 0xF1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x9A SWAP1 CALLER PUSH3 0xF1 JUMP JUMPDEST POP PUSH3 0x1BB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0xFD DUP3 DUP3 PUSH3 0x101 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0xFD JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16DC DUP1 PUSH3 0x1CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xEEAFBDDC EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xF93B03BC EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x7B71E5DB EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x842DD90A EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x302F7FEA EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x3B552DBD EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x4ADC7CFD EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x66675AA9 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8AFD4E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xFB4D2E5 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x1BBDA52B EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2EDB531C EQ PUSH2 0x231 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x134C JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x18A PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x18A PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x223 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x18A PUSH2 0x84F JUMP JUMPDEST PUSH2 0x223 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x223 PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x134C JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x19F PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH2 0x18A PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH2 0x223 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x36E PUSH2 0x35F CALLDATASIZE PUSH1 0x4 PUSH2 0x147C JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x18A PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x3AD PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI PUSH2 0x3E9 DUP4 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3DC JUMPI PUSH2 0x3DC PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x3F2 DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x42F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI PUSH2 0x4A1 DUP4 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x494 JUMPI PUSH2 0x494 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x4AA DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x475 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x4BD DUP2 PUSH2 0xDC5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP4 MSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x3 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x59A DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x3F9 DUP4 DUP4 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP9 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 DUP2 AND SWAP1 DUP7 AND EQ PUSH2 0x607 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x65B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x655 SWAP1 PUSH2 0x64F PUSH3 0x15180 PUSH2 0x649 DUP7 TIMESTAMP PUSH2 0x1531 JUMP JUMPDEST SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP1 PUSH2 0xE46 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E1 DUP3 DUP3 PUSH2 0xE52 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x701 JUMPI PUSH2 0x701 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x783 JUMPI PUSH2 0x783 PUSH2 0x14EC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH2 0x79B DUP8 DUP8 DUP4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x7A5 SWAP1 DUP6 PUSH2 0x1548 JUMP JUMPDEST SWAP4 POP POP DUP1 DUP1 PUSH2 0x7B3 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x71D JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D0 DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x6E1 PUSH1 0x2 SLOAD DUP4 PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x7E8 DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x848 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x8B3 PUSH1 0x0 PUSH2 0xEC3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6E1 DUP3 DUP3 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x8CB DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x8E0 JUMPI PUSH2 0x8E0 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE POP POP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x92F JUMPI PUSH2 0x92F PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x6E1 DUP3 DUP3 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x99B DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x3F9 DUP4 DUP4 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0xA6D DUP2 PUSH2 0xEC3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA87 JUMPI PUSH2 0xA87 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 DUP10 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP5 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP6 MSTORE DUP1 DUP6 MSTORE SWAP2 SWAP5 POP SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB01 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xAED JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB24 JUMPI PUSH2 0xB24 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP8 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 SLOAD SWAP2 SWAP3 POP AND CALLER EQ PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E206973206E6F74207374616B6564206F722073656E64657220646F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x195CC81B9BDD081BDDDB881A5D PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0xBCC CALLER DUP5 DUP5 PUSH2 0xF13 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0xBFA SWAP1 DUP4 PUSH2 0xF8B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xC5C SWAP1 DUP5 SWAP1 PUSH2 0x1531 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCE5 JUMPI PUSH2 0xCE5 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP8 DUP7 MSTORE DUP5 MSTORE DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 SLOAD DUP4 AND DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP2 DUP7 KECCAK256 DUP9 DUP8 MSTORE DUP6 MSTORE DUP2 DUP7 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP4 SLOAD SWAP1 SWAP3 AND DUP6 MSTORE PUSH1 0x4 DUP5 MSTORE DUP1 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE SWAP3 DUP5 KECCAK256 SWAP1 SWAP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP2 SWAP5 POP SWAP2 SWAP3 SWAP1 PUSH2 0xD84 SWAP1 DUP5 SWAP1 PUSH2 0x1548 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH2 0xC99 JUMP JUMPDEST PUSH2 0xA6D DUP2 CALLER PUSH2 0x1042 JUMP JUMPDEST PUSH2 0xDD9 DUP3 DUP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B DUP3 DUP5 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B DUP3 DUP5 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0xE5C DUP3 DUP3 PUSH2 0x94A JUMP JUMPDEST ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x6E1 DUP3 DUP3 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF20 DUP5 DUP5 DUP5 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI DUP2 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFAA JUMPI PUSH2 0xFAA PUSH2 0x14EC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x1030 JUMPI DUP3 SLOAD DUP4 SWAP1 PUSH2 0xFCA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1531 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xFDA JUMPI PUSH2 0xFDA PUSH2 0x14EC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFF7 JUMPI PUSH2 0xFF7 PUSH2 0x14EC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP1 SLOAD DUP1 PUSH2 0x1015 JUMPI PUSH2 0x1015 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x103A DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x104C DUP3 DUP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x6E1 JUMPI PUSH2 0x1064 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x106F DUP4 PUSH1 0x20 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1080 SWAP3 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6CE SWAP2 PUSH1 0x4 ADD PUSH2 0x165C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x10B5 DUP4 PUSH1 0x2 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x10C0 SWAP1 PUSH1 0x2 PUSH2 0x1548 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D8 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1102 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x114C JUMPI PUSH2 0x114C PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1170 DUP5 PUSH1 0x2 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x117B SWAP1 PUSH1 0x1 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11F3 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x11AF JUMPI PUSH2 0x11AF PUSH2 0x14EC JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x11EC DUP2 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP PUSH2 0x117E JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x126B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x129F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12B1 JUMPI PUSH2 0x12B1 PUSH2 0x1242 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x12D6 JUMPI PUSH2 0x12D6 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1312 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x12F9 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x137C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139D DUP4 PUSH2 0x1365 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13CE PUSH1 0x20 DUP5 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F5 DUP5 PUSH2 0x1365 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65B DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x145C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x146C PUSH1 0x20 DUP6 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x149A DUP5 PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP PUSH2 0x146C PUSH1 0x20 DUP6 ADD PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14E0 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x14C4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x152A JUMPI PUSH2 0x152A PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1543 JUMPI PUSH2 0x1543 PUSH2 0x1502 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x155B JUMPI PUSH2 0x155B PUSH2 0x1502 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x157D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x159C JUMPI PUSH2 0x159C PUSH2 0x1502 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15BA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x161F DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x15B7 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1650 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x15B7 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x167B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x169E JUMPI PUSH2 0x169E PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xB3 0xE0 OR DUP3 PUSH29 0x62E7F61A541F68E7321199521A388A5FD7A87AF6E79A57038EB264736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "584:6686:14:-:0;;;670:18;642:46;;1313:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:2;719:10:9;921:18:2;:32::i;:::-;1358:19:14;:35;;-1:-1:-1;;;;;;1358:35:14;-1:-1:-1;;;;;1358:35:14;;;;;1403:42;-1:-1:-1;1434:10:14;1403;:42::i;:::-;1466:10;;1455:34;;1478:10;1455;:34::i;:::-;1313:183;584:6686;;2270:187:2;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;6640:110:0:-;6718:25;6729:4;6735:7;6718:10;:25::i;:::-;6640:110;;:::o;7244:233::-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7322:149;;7365:12;;;;7397:4;7365:12;;;;;;;;-1:-1:-1;;;;;7365:29:0;;;;;;;;;;:36;;-1:-1:-1;;7365:36:0;;;;;;;7420:40;;719:10:9;;7365:12:0;;7420:40;;7365:12;7420:40;7244:233;;:::o;14:290:15:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:15;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:15:o;:::-;584:6686:14;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_2506": {
									"entryPoint": null,
									"id": 2506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 4162,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 3525,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_claimReward_2978": {
									"entryPoint": 3859,
									"id": 2978,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 3535,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1909": {
									"entryPoint": null,
									"id": 1909,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removeElement_3133": {
									"entryPoint": 3979,
									"id": 3133,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_318": {
									"entryPoint": 3666,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setupRole_227": {
									"entryPoint": 3769,
									"id": 227,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_stake_2669": {
									"entryPoint": 3280,
									"id": 2669,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_496": {
									"entryPoint": 3779,
									"id": 496,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unstake_2838": {
									"entryPoint": 2831,
									"id": 2838,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@batchStake_2698": {
									"entryPoint": 1138,
									"id": 2698,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@batchUnstake_2727": {
									"entryPoint": 954,
									"id": 2727,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimableReward_2951": {
									"entryPoint": 1444,
									"id": 2951,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@collectionInfo_2554": {
									"entryPoint": 1077,
									"id": 2554,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_2379": {
									"entryPoint": 3642,
									"id": 2379,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalStakedItemsCount_3074": {
									"entryPoint": 2329,
									"id": 3074,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserStakedTokens_3056": {
									"entryPoint": 2672,
									"id": 3056,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@grantRole_170": {
									"entryPoint": 1406,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 2378,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintTest_2756": {
									"entryPoint": 2012,
									"id": 2756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_2364": {
									"entryPoint": 3654,
									"id": 2364,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@onERC721Received_3088": {
									"entryPoint": null,
									"id": 3088,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@owner_425": {
									"entryPoint": null,
									"id": 425,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_453": {
									"entryPoint": 2127,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_213": {
									"entryPoint": 1634,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_190": {
									"entryPoint": 2431,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setAdminRole_2590": {
									"entryPoint": 1989,
									"id": 2590,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setCollection_2999": {
									"entryPoint": 1201,
									"id": 2999,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stake_2603": {
									"entryPoint": 2229,
									"id": 2603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2145": {
									"entryPoint": null,
									"id": 2145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_60": {
									"entryPoint": 1022,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_2121": {
									"entryPoint": 4262,
									"id": 2121,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalClaimableReward_2895": {
									"entryPoint": 1765,
									"id": 2895,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_476": {
									"entryPoint": 2469,
									"id": 476,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_2740": {
									"entryPoint": 2421,
									"id": 2740,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateCollection_3031": {
									"entryPoint": 2239,
									"id": 3031,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 5191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_121e532a745289a4d8fbe9c70c44deae0d657d32c56bdcb669a134e31fbbd902__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4674,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11759:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "258:1071:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "300:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:15"
															},
															"nodeType": "YulIf",
															"src": "268:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "329:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "339:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "329:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "371:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "381:2:15",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "375:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "392:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "423:9:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "434:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "419:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "419:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "406:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "406:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "396:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "447:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "457:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "451:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "502:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "511:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "514:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "504:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "504:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "504:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "490:6:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "498:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "487:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:14:15"
															},
															"nodeType": "YulIf",
															"src": "484:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "527:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "552:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:22:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "531:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "607:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "616:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "619:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "609:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "609:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "609:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "586:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "590:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "582:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "582:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "597:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "578:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "578:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "571:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:35:15"
															},
															"nodeType": "YulIf",
															"src": "568:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "632:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "655:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "642:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:16:15"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "636:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "681:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "683:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "683:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "683:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "673:2:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "677:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "670:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "670:10:15"
															},
															"nodeType": "YulIf",
															"src": "667:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "712:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "726:1:15",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "729:2:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "722:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "722:10:15"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "716:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "741:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "761:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "755:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "745:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "773:56:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "795:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "811:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "815:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "807:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "807:11:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "824:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "820:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "820:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "803:25:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "791:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:38:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "777:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "888:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "890:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "890:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "890:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "847:10:15"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "859:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "844:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "844:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "867:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "879:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "864:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "864:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "841:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "841:46:15"
															},
															"nodeType": "YulIf",
															"src": "838:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "926:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "930:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "919:22:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "950:17:15",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "961:6:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "954:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "983:6:15"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "991:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:18:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "976:18:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1003:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1014:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1022:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1010:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:15:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1003:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1034:34:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1056:2:15"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1060:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1052:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1052:11:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1065:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1048:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:20:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1038:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1100:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1102:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1102:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1102:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1083:6:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1091:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1080:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:19:15"
															},
															"nodeType": "YulIf",
															"src": "1077:39:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1125:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1140:2:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1136:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:11:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1129:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1212:86:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1233:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1251:3:15"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1238:12:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1238:17:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1226:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1226:30:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1226:30:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1269:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1280:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1285:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1276:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1269:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1167:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1172:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1164:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1180:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1182:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1193:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1198:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1189:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1182:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1160:3:15",
																"statements": []
															},
															"src": "1156:142:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1307:16:15",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1317:6:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "216:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "227:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "239:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "247:6:15",
														"type": ""
													}
												],
												"src": "146:1183:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1403:217:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1424:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1433:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1420:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1420:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1445:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:32:15"
															},
															"nodeType": "YulIf",
															"src": "1413:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1500:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1487:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1478:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1574:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1583:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1576:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1576:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1576:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1532:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1543:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1554:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1559:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1550:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1550:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1529:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1529:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1522:51:15"
															},
															"nodeType": "YulIf",
															"src": "1519:71:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1599:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1609:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1369:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1380:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1392:6:15",
														"type": ""
													}
												],
												"src": "1334:286:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1720:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1730:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1742:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1738:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1730:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1772:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1797:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1790:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1790:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1783:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1783:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1765:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1765:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1765:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1689:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1700:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1711:4:15",
														"type": ""
													}
												],
												"src": "1625:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1887:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1933:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1942:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1945:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1935:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1935:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1935:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1908:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1917:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1904:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1904:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1929:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1900:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1900:32:15"
															},
															"nodeType": "YulIf",
															"src": "1897:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1958:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1981:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1968:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1853:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1864:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1876:6:15",
														"type": ""
													}
												],
												"src": "1817:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:188:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2181:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2192:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2169:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2211:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2242:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2247:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2238:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2238:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2251:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2234:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2234:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2222:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2222:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2275:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2286:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2271:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2271:18:15"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2291:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2264:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2318:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2329:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2314:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2314:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2334:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2307:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2112:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2123:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2131:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2139:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2150:4:15",
														"type": ""
													}
												],
												"src": "2002:345:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2422:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2468:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2477:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2480:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2470:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2470:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2470:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2443:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2452:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2439:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2439:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2435:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:32:15"
															},
															"nodeType": "YulIf",
															"src": "2432:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2493:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2516:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2503:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2388:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2399:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2411:6:15",
														"type": ""
													}
												],
												"src": "2352:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2638:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2648:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2660:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2671:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2656:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2648:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2690:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2683:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2683:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2607:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2618:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2629:4:15",
														"type": ""
													}
												],
												"src": "2537:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2768:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2778:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2800:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2787:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2787:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2778:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2870:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2879:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2872:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2872:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2872:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2829:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2840:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2855:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2860:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2851:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2851:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2864:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2847:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2847:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2826:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2826:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:50:15"
															},
															"nodeType": "YulIf",
															"src": "2816:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2747:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2758:5:15",
														"type": ""
													}
												],
												"src": "2719:173:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2984:167:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3030:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3039:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3042:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3032:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3032:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3032:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3005:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3014:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2997:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:32:15"
															},
															"nodeType": "YulIf",
															"src": "2994:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3055:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3084:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3065:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3103:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3130:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3141:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3126:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3126:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3113:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3103:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2942:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2953:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2965:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2973:6:15",
														"type": ""
													}
												],
												"src": "2897:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3243:167:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3289:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3298:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3301:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3291:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3291:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3291:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3264:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3273:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:32:15"
															},
															"nodeType": "YulIf",
															"src": "3253:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3314:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3337:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3324:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3356:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3389:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3400:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3385:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3385:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3366:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3356:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3201:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3212:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3224:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3232:6:15",
														"type": ""
													}
												],
												"src": "3156:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3519:218:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3565:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3574:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3577:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3567:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3567:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3567:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3540:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3536:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3536:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3561:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3532:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:32:15"
															},
															"nodeType": "YulIf",
															"src": "3529:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3590:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3619:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3600:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3638:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3665:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3661:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3661:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3648:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3638:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3689:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3716:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3727:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3712:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3712:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3699:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3689:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3469:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3480:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3492:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3500:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3508:6:15",
														"type": ""
													}
												],
												"src": "3415:322:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3843:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3853:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3865:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3876:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3861:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3861:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3853:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3895:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3906:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3888:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3812:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3823:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3834:4:15",
														"type": ""
													}
												],
												"src": "3742:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3994:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4040:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4049:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4052:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4042:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4042:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4042:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4015:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4024:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4011:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4007:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4007:32:15"
															},
															"nodeType": "YulIf",
															"src": "4004:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4094:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4075:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3960:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3971:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3983:6:15",
														"type": ""
													}
												],
												"src": "3924:186:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4202:161:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4248:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4257:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4260:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4250:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4250:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4250:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4223:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4232:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4244:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4215:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:32:15"
															},
															"nodeType": "YulIf",
															"src": "4212:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4273:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4296:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4283:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4315:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4342:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4353:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4338:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4338:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4325:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4315:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4160:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4171:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4183:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4191:6:15",
														"type": ""
													}
												],
												"src": "4115:248:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4472:218:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4518:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4527:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4530:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4520:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4520:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4520:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4493:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4502:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4489:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4514:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4485:32:15"
															},
															"nodeType": "YulIf",
															"src": "4482:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4543:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4553:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4553:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4543:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4585:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4618:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4629:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4614:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4595:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4595:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4642:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4669:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4680:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4665:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4665:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4652:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4422:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4433:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4445:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4453:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4461:6:15",
														"type": ""
													}
												],
												"src": "4368:322:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4796:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4806:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4818:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4829:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4814:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4806:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4863:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4879:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4884:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4875:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4875:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4888:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4871:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4871:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4859:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4859:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4841:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4765:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4776:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4787:4:15",
														"type": ""
													}
												],
												"src": "4695:203:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5007:224:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5053:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5062:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5065:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5055:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5055:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5055:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5028:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5037:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5024:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5049:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:32:15"
															},
															"nodeType": "YulIf",
															"src": "5017:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5078:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5107:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5088:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5088:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5078:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5126:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5159:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5170:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5155:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5155:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5136:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5183:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5193:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5183:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4957:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4968:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4980:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4988:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4996:6:15",
														"type": ""
													}
												],
												"src": "4903:328:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:103:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5345:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5353:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5345:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5387:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5402:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5414:3:15",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5419:10:15",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5410:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5410:20:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:33:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:52:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5304:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5315:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:15",
														"type": ""
													}
												],
												"src": "5236:202:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5594:481:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5604:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5614:2:15",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5608:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5625:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5643:9:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5654:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5639:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5639:18:15"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5629:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5673:9:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5684:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5666:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5666:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5696:17:15",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5707:6:15"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5700:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5722:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5742:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5736:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5736:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5726:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5765:6:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5773:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5758:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5758:22:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5789:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5800:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5796:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5796:18:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5789:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5823:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5841:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5849:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5837:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:15:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5827:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5861:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5870:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5865:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5929:120:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5950:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "5961:6:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5955:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5955:13:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5943:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5943:26:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5943:26:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5982:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5993:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5998:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5989:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5989:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5982:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6014:25:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6028:6:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6036:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6024:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6024:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6014:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5891:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5894:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5888:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5902:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5904:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5913:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5916:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5909:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5909:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5904:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5884:3:15",
																"statements": []
															},
															"src": "5880:169:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:11:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6066:3:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6058:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5563:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5574:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5585:4:15",
														"type": ""
													}
												],
												"src": "5443:632:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6112:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6129:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6136:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6141:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6132:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6132:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6122:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6122:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6122:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6169:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6193:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6196:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6186:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6186:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6186:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6080:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6244:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6261:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6268:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6273:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6264:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6264:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6254:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6254:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6254:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6301:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6304:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6294:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6294:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6328:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6318:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6318:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6318:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6212:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6391:88:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6422:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6424:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6424:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6424:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6407:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6418:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6414:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6414:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6404:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6404:17:15"
															},
															"nodeType": "YulIf",
															"src": "6401:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6453:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6464:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6471:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6460:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6460:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6373:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6383:3:15",
														"type": ""
													}
												],
												"src": "6344:135:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6533:76:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6555:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6557:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6557:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6557:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6549:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6552:1:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6546:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6546:8:15"
															},
															"nodeType": "YulIf",
															"src": "6543:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6586:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6598:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6601:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6594:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6594:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6586:4:15"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6515:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6518:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6524:4:15",
														"type": ""
													}
												],
												"src": "6484:125:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6788:237:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6805:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6816:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6798:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6798:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6839:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6850:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6835:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6835:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6855:2:15",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6828:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6878:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6889:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6874:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6874:18:15"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6894:34:15",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6867:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6867:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6867:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6949:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6960:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6945:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6945:18:15"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6965:17:15",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6938:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6938:45:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6938:45:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6992:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7004:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7015:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7000:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7000:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6992:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6765:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6779:4:15",
														"type": ""
													}
												],
												"src": "6614:411:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7078:80:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7105:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7107:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7107:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7107:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7094:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7101:1:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7097:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7097:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7091:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:13:15"
															},
															"nodeType": "YulIf",
															"src": "7088:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7147:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7150:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7143:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7136:3:15"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7061:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7064:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7070:3:15",
														"type": ""
													}
												],
												"src": "7030:128:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7300:145:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7310:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7322:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7333:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7318:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7310:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7352:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7367:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7383:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7388:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7379:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7379:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7392:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7375:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7375:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7363:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7363:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7345:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7345:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7345:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7416:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7427:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7412:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7412:18:15"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7432:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7405:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7405:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7405:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7261:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7272:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7280:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7291:4:15",
														"type": ""
													}
												],
												"src": "7163:282:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7624:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7641:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7652:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7634:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7634:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7634:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7675:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7686:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7671:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7671:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7691:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7664:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7714:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7725:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7710:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7710:18:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7730:34:15",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7703:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7703:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7774:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7786:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7797:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7782:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7782:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7774:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7601:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7615:4:15",
														"type": ""
													}
												],
												"src": "7450:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7985:228:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8002:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8013:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7995:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8047:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8032:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8032:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8052:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8025:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8025:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8025:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8075:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8086:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8071:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8071:18:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8091:34:15",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8064:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8064:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8146:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8157:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8142:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8142:18:15"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8162:8:15",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8135:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8135:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8135:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8180:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8192:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8203:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8188:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8180:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7962:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7976:4:15",
														"type": ""
													}
												],
												"src": "7811:402:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8392:235:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8409:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8420:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8402:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8402:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8443:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8454:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8439:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8439:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8459:2:15",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8482:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8493:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8478:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8478:18:15"
																	},
																	{
																		"hexValue": "746f6b656e206973206e6f74207374616b6564206f722073656e64657220646f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8498:34:15",
																		"type": "",
																		"value": "token is not staked or sender do"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8471:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8471:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8471:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8553:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8564:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8549:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8549:18:15"
																	},
																	{
																		"hexValue": "6573206e6f74206f776e206974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8569:15:15",
																		"type": "",
																		"value": "es not own it"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8542:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8542:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8594:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8606:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8617:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8602:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8602:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8594:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_121e532a745289a4d8fbe9c70c44deae0d657d32c56bdcb669a134e31fbbd902__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8369:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8383:4:15",
														"type": ""
													}
												],
												"src": "8218:409:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8789:218:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8799:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8822:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8834:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8852:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8857:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8848:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8848:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8861:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8844:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8844:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8838:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8879:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8894:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8902:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8890:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8890:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8872:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8872:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8872:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8926:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8937:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8922:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8922:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8946:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8954:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8942:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8942:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8915:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8915:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8915:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8978:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8989:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8974:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8974:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8994:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8967:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8967:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8967:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8742:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8753:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8761:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8769:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8780:4:15",
														"type": ""
													}
												],
												"src": "8632:375:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9058:171:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9089:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9110:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9117:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9122:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9113:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9113:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9103:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9103:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9103:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9154:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9157:4:15",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9147:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9147:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9147:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9182:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9185:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9175:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9175:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9175:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9078:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9071:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9071:9:15"
															},
															"nodeType": "YulIf",
															"src": "9068:132:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9209:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9218:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9221:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9214:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9209:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9043:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9046:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9052:1:15",
														"type": ""
													}
												],
												"src": "9012:217:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9286:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9345:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9347:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9347:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9347:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9317:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9310:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9310:9:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9303:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9303:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9325:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9336:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9332:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9332:6:15"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9340:1:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9328:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9328:14:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9322:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9322:21:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9299:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9299:45:15"
															},
															"nodeType": "YulIf",
															"src": "9296:71:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9376:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9391:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9394:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9387:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9387:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9376:7:15"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9265:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9268:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9274:7:15",
														"type": ""
													}
												],
												"src": "9234:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9536:145:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9546:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9558:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9569:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9554:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9554:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9546:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9588:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9603:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9619:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9624:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9615:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9615:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9628:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9611:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9611:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9599:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9599:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9581:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9581:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9581:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9652:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9663:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9648:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9648:18:15"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9668:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9641:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9641:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9641:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9497:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9508:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9516:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9527:4:15",
														"type": ""
													}
												],
												"src": "9407:274:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9718:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9735:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9742:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9747:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9738:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9738:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9728:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9728:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9728:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9775:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9778:4:15",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9768:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9768:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9768:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9799:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9802:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9792:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9792:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9792:15:15"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "9686:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9871:205:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9881:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9890:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9885:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9950:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9975:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9980:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9971:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9971:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9994:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9999:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9990:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9990:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9984:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9984:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9964:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9964:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9964:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9911:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9914:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9908:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9908:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9922:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9924:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9933:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9936:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9929:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9929:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9924:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9904:3:15",
																"statements": []
															},
															"src": "9900:113:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10039:31:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10052:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10057:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10048:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10048:16:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10066:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10041:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10041:27:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10041:27:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10028:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10031:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10025:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10025:13:15"
															},
															"nodeType": "YulIf",
															"src": "10022:48:15"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9849:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9854:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9859:6:15",
														"type": ""
													}
												],
												"src": "9818:258:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10470:397:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10487:3:15"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10492:25:15",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10480:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10480:38:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10480:38:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10527:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10547:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10541:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10541:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10531:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10589:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10597:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10585:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10585:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10608:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10613:2:15",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10604:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10604:12:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10618:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10563:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10563:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10563:62:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10634:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10648:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10653:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10644:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10644:16:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10638:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10680:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10684:2:15",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10676:11:15"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10689:19:15",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10669:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10669:40:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10669:40:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10718:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10740:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10734:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10734:13:15"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "10722:8:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10782:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10790:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10778:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10778:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10801:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10805:2:15",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10797:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10797:11:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "10810:8:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10756:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10756:63:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10756:63:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10828:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10843:2:15"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "10847:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10839:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10839:17:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10858:2:15",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10835:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10835:26:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10828:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10438:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10443:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10451:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10462:3:15",
														"type": ""
													}
												],
												"src": "10081:786:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10993:262:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11010:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11021:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11003:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11003:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11003:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11033:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11053:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11047:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11047:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11037:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11080:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11091:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11076:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11076:18:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11096:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11069:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11069:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11069:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11138:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11146:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11134:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11134:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11155:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11166:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11151:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11151:18:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11171:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11112:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11112:66:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11112:66:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11187:62:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11203:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "11222:6:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11230:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11218:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11218:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11239:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11235:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11235:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "11214:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11214:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11199:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11199:45:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11246:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11195:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11195:54:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11187:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10962:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10973:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10984:4:15",
														"type": ""
													}
												],
												"src": "10872:383:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11307:89:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11334:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11336:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11336:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11336:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11327:5:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11320:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11320:13:15"
															},
															"nodeType": "YulIf",
															"src": "11317:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11365:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11376:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11387:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11383:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11383:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11372:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11372:18:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11365:3:15"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11289:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11299:3:15",
														"type": ""
													}
												],
												"src": "11260:136:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11575:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11592:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11603:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11585:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11585:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11585:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11626:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11637:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11622:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11622:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11642:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11615:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11615:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11615:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11665:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11676:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11661:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11661:18:15"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11681:34:15",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11654:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11654:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11654:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11725:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11737:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11748:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11733:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11733:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11725:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11552:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11566:4:15",
														"type": ""
													}
												],
												"src": "11401:356:15"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_121e532a745289a4d8fbe9c70c44deae0d657d32c56bdcb669a134e31fbbd902__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"token is not staked or sender do\")\n        mstore(add(headStart, 96), \"es not own it\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xEEAFBDDC EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xF93B03BC EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x7B71E5DB EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x842DD90A EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x302F7FEA EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x3B552DBD EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x4ADC7CFD EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x66675AA9 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8AFD4E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xFB4D2E5 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x1BBDA52B EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2EDB531C EQ PUSH2 0x231 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x134C JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x18A PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x18A PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x223 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x18A PUSH2 0x84F JUMP JUMPDEST PUSH2 0x223 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x223 PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x134C JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x19F PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH2 0x18A PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH2 0x223 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x36E PUSH2 0x35F CALLDATASIZE PUSH1 0x4 PUSH2 0x147C JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x18A PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x3AD PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI PUSH2 0x3E9 DUP4 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3DC JUMPI PUSH2 0x3DC PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x3F2 DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x42F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI PUSH2 0x4A1 DUP4 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x494 JUMPI PUSH2 0x494 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x4AA DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x475 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x4BD DUP2 PUSH2 0xDC5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP4 MSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x3 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x59A DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x3F9 DUP4 DUP4 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP9 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 DUP2 AND SWAP1 DUP7 AND EQ PUSH2 0x607 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x65B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x655 SWAP1 PUSH2 0x64F PUSH3 0x15180 PUSH2 0x649 DUP7 TIMESTAMP PUSH2 0x1531 JUMP JUMPDEST SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP1 PUSH2 0xE46 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E1 DUP3 DUP3 PUSH2 0xE52 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x701 JUMPI PUSH2 0x701 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x783 JUMPI PUSH2 0x783 PUSH2 0x14EC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH2 0x79B DUP8 DUP8 DUP4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x7A5 SWAP1 DUP6 PUSH2 0x1548 JUMP JUMPDEST SWAP4 POP POP DUP1 DUP1 PUSH2 0x7B3 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x71D JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D0 DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x6E1 PUSH1 0x2 SLOAD DUP4 PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x7E8 DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x848 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x8B3 PUSH1 0x0 PUSH2 0xEC3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6E1 DUP3 DUP3 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x8CB DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x8E0 JUMPI PUSH2 0x8E0 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE POP POP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x92F JUMPI PUSH2 0x92F PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x6E1 DUP3 DUP3 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x99B DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x3F9 DUP4 DUP4 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0xA6D DUP2 PUSH2 0xEC3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA87 JUMPI PUSH2 0xA87 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 DUP10 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP5 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP6 MSTORE DUP1 DUP6 MSTORE SWAP2 SWAP5 POP SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB01 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xAED JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB24 JUMPI PUSH2 0xB24 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP8 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 SLOAD SWAP2 SWAP3 POP AND CALLER EQ PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E206973206E6F74207374616B6564206F722073656E64657220646F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x195CC81B9BDD081BDDDB881A5D PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0xBCC CALLER DUP5 DUP5 PUSH2 0xF13 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0xBFA SWAP1 DUP4 PUSH2 0xF8B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xC5C SWAP1 DUP5 SWAP1 PUSH2 0x1531 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCE5 JUMPI PUSH2 0xCE5 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP8 DUP7 MSTORE DUP5 MSTORE DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 SLOAD DUP4 AND DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP2 DUP7 KECCAK256 DUP9 DUP8 MSTORE DUP6 MSTORE DUP2 DUP7 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP4 SLOAD SWAP1 SWAP3 AND DUP6 MSTORE PUSH1 0x4 DUP5 MSTORE DUP1 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE SWAP3 DUP5 KECCAK256 SWAP1 SWAP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP2 SWAP5 POP SWAP2 SWAP3 SWAP1 PUSH2 0xD84 SWAP1 DUP5 SWAP1 PUSH2 0x1548 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH2 0xC99 JUMP JUMPDEST PUSH2 0xA6D DUP2 CALLER PUSH2 0x1042 JUMP JUMPDEST PUSH2 0xDD9 DUP3 DUP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B DUP3 DUP5 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B DUP3 DUP5 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0xE5C DUP3 DUP3 PUSH2 0x94A JUMP JUMPDEST ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x6E1 DUP3 DUP3 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF20 DUP5 DUP5 DUP5 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI DUP2 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFAA JUMPI PUSH2 0xFAA PUSH2 0x14EC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x1030 JUMPI DUP3 SLOAD DUP4 SWAP1 PUSH2 0xFCA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1531 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xFDA JUMPI PUSH2 0xFDA PUSH2 0x14EC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFF7 JUMPI PUSH2 0xFF7 PUSH2 0x14EC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP1 SLOAD DUP1 PUSH2 0x1015 JUMPI PUSH2 0x1015 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x103A DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x104C DUP3 DUP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x6E1 JUMPI PUSH2 0x1064 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x106F DUP4 PUSH1 0x20 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1080 SWAP3 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6CE SWAP2 PUSH1 0x4 ADD PUSH2 0x165C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x10B5 DUP4 PUSH1 0x2 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x10C0 SWAP1 PUSH1 0x2 PUSH2 0x1548 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D8 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1102 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x114C JUMPI PUSH2 0x114C PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1170 DUP5 PUSH1 0x2 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x117B SWAP1 PUSH1 0x1 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11F3 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x11AF JUMPI PUSH2 0x11AF PUSH2 0x14EC JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x11EC DUP2 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP PUSH2 0x117E JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x126B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x129F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12B1 JUMPI PUSH2 0x12B1 PUSH2 0x1242 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x12D6 JUMPI PUSH2 0x12D6 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1312 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x12F9 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x137C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139D DUP4 PUSH2 0x1365 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13CE PUSH1 0x20 DUP5 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F5 DUP5 PUSH2 0x1365 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65B DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x145C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x146C PUSH1 0x20 DUP6 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x149A DUP5 PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP PUSH2 0x146C PUSH1 0x20 DUP6 ADD PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14E0 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x14C4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x152A JUMPI PUSH2 0x152A PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1543 JUMPI PUSH2 0x1543 PUSH2 0x1502 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x155B JUMPI PUSH2 0x155B PUSH2 0x1502 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x157D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x159C JUMPI PUSH2 0x159C PUSH2 0x1502 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15BA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x161F DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x15B7 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1650 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x15B7 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x167B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x169E JUMPI PUSH2 0x169E PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xB3 0xE0 OR DUP3 PUSH29 0x62E7F61A541F68E7321199521A388A5FD7A87AF6E79A57038EB264736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "584:6686:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:207;;;;;;:::i;:::-;;:::i;:::-;;2606:202:0;;;;;;:::i;:::-;;:::i;:::-;;;1790:14:15;;1783:22;1765:41;;1753:2;1738:18;2606:202:0;;;;;;;;1268:38:14;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2222:32:15;;;2204:51;;2286:2;2271:18;;2264:34;;;;2314:18;;;2307:34;2192:2;2177:18;1268:38:14;2002:345:15;2587:203:14;;;;;;:::i;:::-;;:::i;4391:129:0:-;;;;;;:::i;:::-;4465:7;4491:12;;;:6;:12;;;;;;;;:22;;;4391:129;;;;2683:25:15;;;2671:2;2656:18;4391:129:0;2537:177:15;5695:269:14;;;;;;:::i;:::-;;:::i;4770:145:0:-;;;;;;:::i;:::-;;:::i;4791:635:14:-;;;;;;:::i;:::-;;:::i;5787:214:0:-;;;;;;:::i;:::-;;:::i;4241:544:14:-;;;;;;:::i;:::-;;:::i;1502:118::-;;;;;;:::i;:::-;;:::i;3132:113::-;;;:::i;1668:101:2:-;;;:::i;642:46:14:-;;;;;;1626:114;;;;;;:::i;:::-;;:::i;5970:349::-;;;;;;:::i;:::-;;:::i;6608:216::-;;;;;;:::i;:::-;;:::i;1036:85:2:-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:2;;;4841:51:15;;4829:2;4814:18;1036:85:2;4695:203:15;2895:145:0;;;;;;:::i;:::-;;:::i;3009:117:14:-;;;;;;:::i;:::-;;:::i;2027:49:0:-;;2072:4;2027:49;;5149:147;;;;;;:::i;:::-;;:::i;6830:123:14:-;;;;;;:::i;:::-;-1:-1:-1;;;6830:123:14;;;;;;;;;-1:-1:-1;;;;;;5398:33:15;;;5380:52;;5368:2;5353:18;6830:123:14;5236:202:15;1918:198:2;;;;;;:::i;:::-;;:::i;6325:277:14:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2796:207::-;2893:9;2888:109;2912:9;:16;2908:1;:20;2888:109;;;2949:37;2958:13;2973:9;2983:1;2973:12;;;;;;;;:::i;:::-;;;;;;;2949:8;:37::i;:::-;2930:3;;;:::i;:::-;;;2888:109;;;;2796:207;;:::o;2606:202:0:-;2691:4;-1:-1:-1;;;;;;2714:47:0;;-1:-1:-1;;;2714:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:11;;;2765:36:0;2707:94;2606:202;-1:-1:-1;;2606:202:0:o;1268:38:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1268:38:14;;;;-1:-1:-1;1268:38:14;:::o;2587:203::-;2682:9;2677:107;2701:9;:16;2697:1;:20;2677:107;;;2738:35;2745:13;2760:9;2770:1;2760:12;;;;;;;;:::i;:::-;;;;;;;2738:6;:35::i;:::-;2719:3;;;:::i;:::-;;;2677:107;;5695:269;5785:10;;2505:16:0;2516:4;2505:10;:16::i;:::-;-1:-1:-1;5841:106:14::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;5841:106:14;;::::1;::::0;;::::1;::::0;::::1;::::0;;;-1:-1:-1;5841:106:14;;;;;;5808:14:::1;:149:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;5808:149:14::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;;;5695:269::o;4770:145:0:-;4465:7;4491:12;;;:6;:12;;;;;;;;:22;;2505:16;2516:4;2505:10;:16::i;:::-;4883:25:::1;4894:4;4900:7;4883:10;:25::i;4791:635:14:-:0;4899:7;4918:33;4954:14;4969:13;4954:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5073:28;;-1:-1:-1;;;;;5073:28:14;;;5050:52;;:22;:52;;;;;;:62;;;;;;;;;;;4954:29;;-1:-1:-1;5050:62:14;;;:78;;;;5047:101;;5147:1;5140:8;;;;;5047:101;5210:28;;-1:-1:-1;;;;;5210:28:14;5159:15;5177:62;;;:32;:62;;;;;;;;:72;;;;;;;;;5210:28;5365:23;;;5177:72;;5159:15;5283:106;;:64;853:8;5284:28;5177:72;5284:15;:28;:::i;:::-;5283:47;;:64::i;:::-;:81;;:106::i;:::-;5259:130;-1:-1:-1;;;;4791:635:14;;;;;;:::o;5787:214:0:-;-1:-1:-1;;;;;5882:23:0;;719:10:9;5882:23:0;5874:83;;;;-1:-1:-1;;;5874:83:0;;6816:2:15;5874:83:0;;;6798:21:15;6855:2;6835:18;;;6828:30;6894:34;6874:18;;;6867:62;-1:-1:-1;;;6945:18:15;;;6938:45;7000:19;;5874:83:0;;;;;;;;;5968:26;5980:4;5986:7;5968:11;:26::i;:::-;5787:214;;:::o;4241:544:14:-;4336:7;4355:21;4379:1;4355:25;;4390;4418:14;4433:13;4418:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;:47;-1:-1:-1;;;;;4418:47:14;;-1:-1:-1;4475:274:14;-1:-1:-1;;;;;4495:40:14;;;;;;;:21;:40;;;;;;;;:54;;;;;;;;;:61;4491:65;;4475:274;;;-1:-1:-1;;;;;4596:40:14;;;4577:16;4596:40;;;:21;:40;;;;;;;;:54;;;;;;;;;;;:57;;4651:1;;4596:57;;;;;;:::i;:::-;;;;;;;;;4577:76;;4684:54;4700:12;4714:13;4729:8;4684:15;:54::i;:::-;4667:71;;;;:::i;:::-;;;4563:186;4558:3;;;;;:::i;:::-;;;;4475:274;;;-1:-1:-1;4765:13:14;;4241:544;-1:-1:-1;;;;4241:544:14:o;1502:118::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;1584:29:14::1;1595:10;;1607:5;1584:10;:29::i;3132:113::-:0;3168:10;;2505:16:0;2516:4;2505:10;:16::i;:::-;3199:19:14::1;::::0;3190:48:::1;::::0;-1:-1:-1;;;3190:48:14;;3225:10:::1;3190:48;::::0;::::1;7345:51:15::0;3199:19:14;7412:18:15;;;7405:34;-1:-1:-1;;;;;3199:19:14;;::::1;::::0;3190:34:::1;::::0;7318:18:15;;3190:48:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3132:113:::0;:::o;1668:101:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:9;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;7652:2:15;1240:68:2;;;7634:21:15;;;7671:18;;;7664:30;7730:34;7710:18;;;7703:62;7782:18;;1240:68:2;7450:356:15;1240:68:2;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1626:114:14:-;1701:32;1709:13;1724:8;1701:6;:32::i;5970:349::-;6116:10;;2505:16:0;2516:4;2505:10;:16::i;:::-;6139:33:14::1;6175:14;6190:13;6175:29;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;6214:49:::0;;-1:-1:-1;;;;;;6214:49:14::1;-1:-1:-1::0;;;;;6214:49:14;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;6273:23:14;;::::1;:39:::0;-1:-1:-1;5970:349:14:o;6608:216::-;6688:7;6707:33;6743:14;6758:13;6743:29;;;;;;;;:::i;:::-;;;;;;;;;6789:28;6743:29;;;;;6789:28;;;6608:216;-1:-1:-1;;;6608:216:14:o;2895:145:0:-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;;;;2895:145::o;3009:117:14:-;3086:33;3095:13;3110:8;3086;:33::i;5149:147:0:-;4465:7;4491:12;;;:6;:12;;;;;;;;:22;;2505:16;2516:4;2505:10;:16::i;:::-;5263:26:::1;5275:4;5281:7;5263:11;:26::i;1918:198:2:-:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:9;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;7652:2:15;1240:68:2;;;7634:21:15;;;7671:18;;;7664:30;7730:34;7710:18;;;7703:62;7782:18;;1240:68:2;7450:356:15;1240:68:2;-1:-1:-1;;;;;2006:22:2;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:2;;8013:2:15;1998:73:2::1;::::0;::::1;7995:21:15::0;8052:2;8032:18;;;8025:30;8091:34;8071:18;;;8064:62;-1:-1:-1;;;8142:18:15;;;8135:36;8188:19;;1998:73:2::1;7811:402:15::0;1998:73:2::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6325:277:14:-;6421:16;6448:33;6484:14;6499:13;6484:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6552:28;;-1:-1:-1;;;;;6552:28:14;;;6530:51;;:21;:51;;;;;;:65;;;;;;;;;;;;6523:72;;;;;;;;;;;;;;;;;6484:29;;-1:-1:-1;6530:65:14;6523:72;;6530:65;6523:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6325:277;;;;:::o;3251:984::-;3351:33;3387:14;3402:13;3387:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3458:28;;-1:-1:-1;;;;;3458:28:14;;;3435:52;;:22;:52;;;;;;:62;;;;;;;;;;;3387:29;;-1:-1:-1;3435:62:14;3501:10;3435:76;3427:155;;;;-1:-1:-1;;;3427:155:14;;8420:2:15;3427:155:14;;;8402:21:15;8459:2;8439:18;;;8432:30;8498:34;8478:18;;;8471:62;-1:-1:-1;;;8549:18:15;;;8542:43;8602:19;;3427:155:14;8218:409:15;3427:155:14;3593:49;3606:10;3618:13;3633:8;3593:12;:49::i;:::-;3751:28;;-1:-1:-1;;;;;3751:28:14;3729:51;;;;:21;:51;;;;;;;;3781:10;3729:63;;;;;;;3714:89;;3794:8;3714:14;:89::i;:::-;3895:28;;-1:-1:-1;;;;;3895:28:14;;;3872:52;;;;:22;:52;;;;;;;;:62;;;;;;;;3865:69;;-1:-1:-1;;;;;;3865:69:14;;;4038:28;;;;;4005:62;;:32;:62;;;;;:72;;;;;;;;3998:79;;;4088:28;;;:33;;3895:28;;3872:52;4088:33;;3895:28;;4088:33;:::i;:::-;;;;-1:-1:-1;;4140:28:14;;4132:87;;-1:-1:-1;;;4132:87:14;;4191:4;4132:87;;;8872:34:15;4198:10:14;8922:18:15;;;8915:43;8974:18;;;8967:34;;;-1:-1:-1;;;;;4140:28:14;;;;4132:50;;8807:18:15;;4132:87:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:894;3251:984;;:::o;1746:835::-;1844:33;1880:14;1895:13;1880:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2011:28;;-1:-1:-1;;;;;2011:28:14;;;1988:52;;:22;:52;;;;;;:62;;;;;;;;:75;;-1:-1:-1;;;;;;1988:75:14;2053:10;1988:75;;;;;;2145:28;;;;2112:62;;:32;:62;;;;;:72;;;;;;;;2187:15;2112:90;;2317:28;;;;;2295:51;;:21;:51;;;;;:63;;;;;;;;:78;;2011:28;2295:78;;;;;;;;;;;;;;;;;2384:28;;;:33;;1880:29;;-1:-1:-1;2011:28:14;;1880:29;2384:33;;2011:28;;2384:33;:::i;:::-;;;;-1:-1:-1;;2495:28:14;;2487:87;;-1:-1:-1;;;2487:87:14;;2538:10;2487:87;;;8872:34:15;2558:4:14;8922:18:15;;;8915:43;8974:18;;;8967:34;;;-1:-1:-1;;;;;2495:28:14;;;;2487:50;;8807:18:15;;2487:87:14;8632:375:15;3334:103:0;3400:30;3411:4;719:10:9;3400::0;:30::i;7244:233::-;7327:22;7335:4;7341:7;7327;:22::i;:::-;7322:149;;7365:12;;;;7397:4;7365:12;;;;;;;;-1:-1:-1;;;;;7365:29:0;;;;;;;;;;:36;;-1:-1:-1;;7365:36:0;;;;;;;7420:40;;719:10:9;;7365:12:0;;7420:40;;7365:12;7420:40;7244:233;;:::o;3850:96:13:-;3908:7;3934:5;3938:1;3934;:5;:::i;3465:96::-;3523:7;3549:5;3553:1;3549;:5;:::i;7602:234:0:-;7685:22;7693:4;7699:7;7685;:22::i;:::-;7681:149;;;7755:5;7723:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7723:29:0;;;;;;;;;;:37;;-1:-1:-1;;7723:37:0;;;7779:40;719:10:9;;7723:12:0;;7779:40;;7755:5;7779:40;7602:234;;:::o;6640:110::-;6718:25;6729:4;6735:7;6718:10;:25::i;2270:187:2:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;5432:257:14:-;5535:21;5559:53;5575:12;5589:13;5603:8;5559:15;:53::i;:::-;5631:19;;5622:60;;-1:-1:-1;;;5622:60:14;;5657:10;5622:60;;;7345:51:15;7412:18;;;7405:34;;;5535:77:14;;-1:-1:-1;;;;;;5631:19:14;;5622:34;;7318:18:15;;5622:60:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5525:164;5432:257;;;:::o;6959:308::-;7052:9;7047:214;7067:13;;7063:17;;7047:214;;;7118:8;7105:6;7112:1;7105:9;;;;;;;;:::i;:::-;;;;;;;;;:21;7101:150;;7165:13;;7158:6;;7165:17;;7181:1;;7165:17;:::i;:::-;7158:25;;;;;;;;:::i;:::-;;;;;;;;;7146:6;7153:1;7146:9;;;;;;;;:::i;:::-;;;;;;;;:37;;;;7201:6;:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2888:109;2796:207;;:::o;7101:150::-;7082:3;;;;:::i;:::-;;;;7047:214;;3718:492:0;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;1588:441:10:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:10;;1688:47;;-1:-1:-1;;;1745:6:10;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:10;;;;;;;;;-1:-1:-1;;;1770:6:10;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:10;;;;;;;;-1:-1:-1;1800:9:10;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:10;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:10;;;;;;;;-1:-1:-1;1915:1:10;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:10;;1936:55;;;;-1:-1:-1;;;1936:55:10;;11603:2:15;1936:55:10;;;11585:21:15;;;11622:18;;;11615:30;11681:34;11661:18;;;11654:62;11733:18;;1936:55:10;11401:356:15;14:127;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1183;239:6;247;300:2;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;352:9;339:23;329:33;;381:2;434;423:9;419:18;406:32;457:18;498:2;490:6;487:14;484:34;;;514:1;511;504:12;484:34;552:6;541:9;537:22;527:32;;597:7;590:4;586:2;582:13;578:27;568:55;;619:1;616;609:12;568:55;655:2;642:16;677:2;673;670:10;667:36;;;683:18;;:::i;:::-;729:2;726:1;722:10;761:2;755:9;824:2;820:7;815:2;811;807:11;803:25;795:6;791:38;879:6;867:10;864:22;859:2;847:10;844:18;841:46;838:72;;;890:18;;:::i;:::-;926:2;919:22;976:18;;;1010:15;;;;-1:-1:-1;1052:11:15;;;1048:20;;;1080:19;;;1077:39;;;1112:1;1109;1102:12;1077:39;1136:11;;;;1156:142;1172:6;1167:3;1164:15;1156:142;;;1238:17;;1226:30;;1189:12;;;;1276;;;;1156:142;;;1317:6;1307:16;;;;;;;;146:1183;;;;;:::o;1334:286::-;1392:6;1445:2;1433:9;1424:7;1420:23;1416:32;1413:52;;;1461:1;1458;1451:12;1413:52;1487:23;;-1:-1:-1;;;;;;1539:32:15;;1529:43;;1519:71;;1586:1;1583;1576:12;1817:180;1876:6;1929:2;1917:9;1908:7;1904:23;1900:32;1897:52;;;1945:1;1942;1935:12;1897:52;-1:-1:-1;1968:23:15;;1817:180;-1:-1:-1;1817:180:15:o;2719:173::-;2787:20;;-1:-1:-1;;;;;2836:31:15;;2826:42;;2816:70;;2882:1;2879;2872:12;2816:70;2719:173;;;:::o;2897:254::-;2965:6;2973;3026:2;3014:9;3005:7;3001:23;2997:32;2994:52;;;3042:1;3039;3032:12;2994:52;3065:29;3084:9;3065:29;:::i;:::-;3055:39;3141:2;3126:18;;;;3113:32;;-1:-1:-1;;;2897:254:15:o;3156:::-;3224:6;3232;3285:2;3273:9;3264:7;3260:23;3256:32;3253:52;;;3301:1;3298;3291:12;3253:52;3337:9;3324:23;3314:33;;3366:38;3400:2;3389:9;3385:18;3366:38;:::i;:::-;3356:48;;3156:254;;;;;:::o;3415:322::-;3492:6;3500;3508;3561:2;3549:9;3540:7;3536:23;3532:32;3529:52;;;3577:1;3574;3567:12;3529:52;3600:29;3619:9;3600:29;:::i;:::-;3590:39;3676:2;3661:18;;3648:32;;-1:-1:-1;3727:2:15;3712:18;;;3699:32;;3415:322;-1:-1:-1;;;3415:322:15:o;3924:186::-;3983:6;4036:2;4024:9;4015:7;4011:23;4007:32;4004:52;;;4052:1;4049;4042:12;4004:52;4075:29;4094:9;4075:29;:::i;4115:248::-;4183:6;4191;4244:2;4232:9;4223:7;4219:23;4215:32;4212:52;;;4260:1;4257;4250:12;4212:52;-1:-1:-1;;4283:23:15;;;4353:2;4338:18;;;4325:32;;-1:-1:-1;4115:248:15:o;4368:322::-;4445:6;4453;4461;4514:2;4502:9;4493:7;4489:23;4485:32;4482:52;;;4530:1;4527;4520:12;4482:52;4566:9;4553:23;4543:33;;4595:38;4629:2;4618:9;4614:18;4595:38;:::i;:::-;4585:48;;4680:2;4669:9;4665:18;4652:32;4642:42;;4368:322;;;;;:::o;4903:328::-;4980:6;4988;4996;5049:2;5037:9;5028:7;5024:23;5020:32;5017:52;;;5065:1;5062;5055:12;5017:52;5088:29;5107:9;5088:29;:::i;:::-;5078:39;;5136:38;5170:2;5159:9;5155:18;5136:38;:::i;5443:632::-;5614:2;5666:21;;;5736:13;;5639:18;;;5758:22;;;5585:4;;5614:2;5837:15;;;;5811:2;5796:18;;;5585:4;5880:169;5894:6;5891:1;5888:13;5880:169;;;5955:13;;5943:26;;6024:15;;;;5989:12;;;;5916:1;5909:9;5880:169;;;-1:-1:-1;6066:3:15;;5443:632;-1:-1:-1;;;;;;5443:632:15:o;6080:127::-;6141:10;6136:3;6132:20;6129:1;6122:31;6172:4;6169:1;6162:15;6196:4;6193:1;6186:15;6212:127;6273:10;6268:3;6264:20;6261:1;6254:31;6304:4;6301:1;6294:15;6328:4;6325:1;6318:15;6344:135;6383:3;6404:17;;;6401:43;;6424:18;;:::i;:::-;-1:-1:-1;6471:1:15;6460:13;;6344:135::o;6484:125::-;6524:4;6552:1;6549;6546:8;6543:34;;;6557:18;;:::i;:::-;-1:-1:-1;6594:9:15;;6484:125::o;7030:128::-;7070:3;7101:1;7097:6;7094:1;7091:13;7088:39;;;7107:18;;:::i;:::-;-1:-1:-1;7143:9:15;;7030:128::o;9012:217::-;9052:1;9078;9068:132;;9122:10;9117:3;9113:20;9110:1;9103:31;9157:4;9154:1;9147:15;9185:4;9182:1;9175:15;9068:132;-1:-1:-1;9214:9:15;;9012:217::o;9234:168::-;9274:7;9340:1;9336;9332:6;9328:14;9325:1;9322:21;9317:1;9310:9;9303:17;9299:45;9296:71;;;9347:18;;:::i;:::-;-1:-1:-1;9387:9:15;;9234:168::o;9686:127::-;9747:10;9742:3;9738:20;9735:1;9728:31;9778:4;9775:1;9768:15;9802:4;9799:1;9792:15;9818:258;9890:1;9900:113;9914:6;9911:1;9908:13;9900:113;;;9990:11;;;9984:18;9971:11;;;9964:39;9936:2;9929:10;9900:113;;;10031:6;10028:1;10025:13;10022:48;;;10066:1;10057:6;10052:3;10048:16;10041:27;10022:48;;9818:258;;;:::o;10081:786::-;10492:25;10487:3;10480:38;10462:3;10547:6;10541:13;10563:62;10618:6;10613:2;10608:3;10604:12;10597:4;10589:6;10585:17;10563:62;:::i;:::-;-1:-1:-1;;;10684:2:15;10644:16;;;10676:11;;;10669:40;10734:13;;10756:63;10734:13;10805:2;10797:11;;10790:4;10778:17;;10756:63;:::i;:::-;10839:17;10858:2;10835:26;;10081:786;-1:-1:-1;;;;10081:786:15:o;10872:383::-;11021:2;11010:9;11003:21;10984:4;11053:6;11047:13;11096:6;11091:2;11080:9;11076:18;11069:34;11112:66;11171:6;11166:2;11155:9;11151:18;11146:2;11138:6;11134:15;11112:66;:::i;:::-;11239:2;11218:15;-1:-1:-1;;11214:29:15;11199:45;;;;11246:2;11195:54;;10872:383;-1:-1:-1;;10872:383:15:o;11260:136::-;11299:3;11327:5;11317:39;;11336:18;;:::i;:::-;-1:-1:-1;;;11372:18:15;;11260:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1170400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "2340",
								"DEFAULT_ADMIN_ROLE()": "284",
								"batchStake(uint256,uint256[])": "infinite",
								"batchUnstake(uint256,uint256[])": "infinite",
								"claimableReward(address,uint256,uint256)": "infinite",
								"collectionInfo(uint256)": "8968",
								"getRoleAdmin(bytes32)": "2562",
								"getTotalStakedItemsCount(uint256)": "4716",
								"getUserStakedTokens(address,uint256)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2699",
								"mintTest()": "infinite",
								"onERC721Received(address,address,uint256)": "infinite",
								"owner()": "2434",
								"renounceOwnership()": "28137",
								"renounceRole(bytes32,address)": "29068",
								"revokeRole(bytes32,address)": "infinite",
								"setAdminRole(address)": "infinite",
								"setCollection(address,uint256)": "infinite",
								"stake(uint256,uint256)": "infinite",
								"supportsInterface(bytes4)": "472",
								"totalClaimableReward(address,uint256)": "infinite",
								"transferOwnership(address)": "28397",
								"unstake(uint256,uint256)": "infinite",
								"updateCollection(uint256,address,uint256)": "infinite"
							},
							"internal": {
								"_claimReward(address,uint256,uint256)": "infinite",
								"_removeElement(uint256[] storage pointer,uint256)": "infinite",
								"_stake(uint256,uint256)": "infinite",
								"_unstake(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 584,
									"end": 7270,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 670,
									"end": 688,
									"name": "PUSH",
									"source": 14,
									"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
								},
								{
									"begin": 642,
									"end": 688,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 642,
									"end": 688,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1377,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "AND",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1403,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1444,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 1445,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 1445,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 1403,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1466,
									"end": 1476,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1466,
									"end": 1476,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1455,
									"end": 1489,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 1455,
									"end": 1489,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1488,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 1455,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 1455,
									"end": 1489,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1455,
									"end": 1489,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 1455,
									"end": 1489,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1496,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 6640,
									"end": 6750,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6640,
									"end": 6750,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6718,
									"end": 6743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6729,
									"end": 6733,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6735,
									"end": 6742,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6718,
									"end": 6728,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6718,
									"end": 6743,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6718,
									"end": 6743,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6718,
									"end": 6743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6640,
									"end": 6750,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6640,
									"end": 6750,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6640,
									"end": 6750,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7397,
									"end": 7401,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 7270,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205cb3e017827c62e7f61a541f68e7321199521a388a5fd7a87af6e79a57038eb264736f6c634300080d0033",
									".code": [
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "91D14854"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "D547741F"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "D547741F"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "EEAFBDDC"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "F93B03BC"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "91D14854"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "9E2C8A5B"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "A217FDDF"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "75B238FC"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "7B0472F0"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "7B71E5DB"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "842DD90A"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "2F2FF15D"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "2F2FF15D"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "302F7FEA"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "36568ABE"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "3B552DBD"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "4ADC7CFD"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "66675AA9"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "8AFD4E"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "FB4D2E5"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "1BBDA52B"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "248A9CA3"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "2EDB531C"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 584,
											"end": 7270,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1783,
											"end": 1805,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1756,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2288,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2341,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2177,
											"end": 2195,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2347,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 2708,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2683,
											"end": 2708,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2683,
											"end": 2708,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2671,
											"end": 2673,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2537,
											"end": 2714,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "tag",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3132,
											"end": 3245,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 3132,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 3132,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 3132,
											"end": 3245,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 688,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 642,
											"end": 688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 642,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 642,
											"end": 688,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 642,
											"end": 688,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 642,
											"end": 688,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 642,
											"end": 688,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 4892,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4841,
											"end": 4892,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4695,
											"end": 4898,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5398,
											"end": 5431,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5398,
											"end": 5431,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5398,
											"end": 5431,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5380,
											"end": 5432,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5380,
											"end": 5432,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5368,
											"end": 5370,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6830,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5236,
											"end": 5438,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "tag",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 2928,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2909,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2928,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2949,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 2958,
											"end": 2971,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2982,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2949,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 2949,
											"end": 2986,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2949,
											"end": 2986,
											"name": "tag",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 2949,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 2587,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2682,
											"end": 2691,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2784,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 2677,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2710,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2697,
											"end": 2698,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2697,
											"end": 2717,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2677,
											"end": 2784,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2677,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 2677,
											"end": 2784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2738,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 2745,
											"end": 2758,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 2738,
											"end": 2773,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2773,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 2738,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2677,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 2677,
											"end": 2784,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5795,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 5785,
											"end": 5795,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5947,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5822,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "PUSH",
											"source": 14,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "PUSH",
											"source": 14,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689"
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "PUSH",
											"source": 14,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A"
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5957,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5964,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4894,
											"end": 4898,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4883,
											"end": 4908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4899,
											"end": 4906,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4951,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4968,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 4969,
											"end": 4982,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5073,
											"end": 5101,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5073,
											"end": 5101,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5101,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5073,
											"end": 5101,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5073,
											"end": 5101,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5102,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5102,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5072,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 5050,
											"end": 5102,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5102,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5102,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5050,
											"end": 5102,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5102,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5102,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4983,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5112,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5128,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5047,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 5047,
											"end": 5148,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5147,
											"end": 5148,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5148,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 5148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 5148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 5140,
											"end": 5148,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5047,
											"end": 5148,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 5047,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5210,
											"end": 5238,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5210,
											"end": 5238,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5238,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5159,
											"end": 5174,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5210,
											"end": 5238,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5159,
											"end": 5174,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5283,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 5283,
											"end": 5389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5283,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 853,
											"end": 861,
											"name": "PUSH",
											"source": 14,
											"value": "15180"
										},
										{
											"begin": 5284,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 5177,
											"end": 5249,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 5284,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 5284,
											"end": 5312,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5284,
											"end": 5312,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 5284,
											"end": 5312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5283,
											"end": 5330,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5283,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 5283,
											"end": 5347,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5283,
											"end": 5347,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 5283,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5283,
											"end": 5364,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5283,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 5283,
											"end": 5389,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5283,
											"end": 5389,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 5283,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5259,
											"end": 5389,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 5426,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6818,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6819,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6855,
											"end": 6857,
											"name": "PUSH",
											"source": 15,
											"value": "2F"
										},
										{
											"begin": 6835,
											"end": 6853,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6835,
											"end": 6853,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6835,
											"end": 6853,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6828,
											"end": 6858,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6894,
											"end": 6928,
											"name": "PUSH",
											"source": 15,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6867,
											"end": 6929,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6938,
											"end": 6983,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7000,
											"end": 7019,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 7000,
											"end": 7019,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5980,
											"end": 5984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4336,
											"end": 4343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4376,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4379,
											"end": 4380,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4390,
											"end": 4415,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4432,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 4433,
											"end": 4446,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "tag",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4447,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4465,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 4465,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4465,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4475,
											"end": 4749,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 4475,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4516,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4535,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4549,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4549,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4549,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4549,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4549,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4549,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4549,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4549,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4549,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4556,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4491,
											"end": 4556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4491,
											"end": 4556,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4749,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 4475,
											"end": 4749,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 4593,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4636,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4650,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4653,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 4653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 4653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4714,
											"end": 4727,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4729,
											"end": 4737,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 4684,
											"end": 4738,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 4738,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 4684,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4667,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 4667,
											"end": 4738,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4667,
											"end": 4738,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4667,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 4667,
											"end": 4738,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4667,
											"end": 4738,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 4667,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4667,
											"end": 4738,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4667,
											"end": 4738,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 4475,
											"end": 4749,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4749,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 4475,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4765,
											"end": 4778,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4765,
											"end": 4778,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4241,
											"end": 4785,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 1502,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 1595,
											"end": 1605,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1595,
											"end": 1605,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1607,
											"end": 1612,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 1584,
											"end": 1613,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3132,
											"end": 3245,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 3132,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3168,
											"end": 3178,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3168,
											"end": 3178,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3225,
											"end": 3235,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7345,
											"end": 7396,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7405,
											"end": 7439,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3224,
											"name": "PUSH",
											"source": 14,
											"value": "40C10F19"
										},
										{
											"begin": 3190,
											"end": 3224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3190,
											"end": 3238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3245,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7652,
											"end": 7654,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7730,
											"end": 7764,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7710,
											"end": 7728,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7710,
											"end": 7728,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7710,
											"end": 7728,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7703,
											"end": 7765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7450,
											"end": 7806,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 1626,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 1709,
											"end": 1722,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1701,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6116,
											"end": 6126,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6116,
											"end": 6126,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6172,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6189,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 6190,
											"end": 6203,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6204,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6263,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6273,
											"end": 6296,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6273,
											"end": 6296,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6273,
											"end": 6296,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6273,
											"end": 6312,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5970,
											"end": 6319,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6688,
											"end": 6695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6740,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6757,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 6758,
											"end": 6771,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 6789,
											"end": 6817,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6789,
											"end": 6817,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6789,
											"end": 6817,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 6789,
											"end": 6817,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6824,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 3009,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3086,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 3095,
											"end": 3108,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3110,
											"end": 3118,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3086,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 3086,
											"end": 3119,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5275,
											"end": 5279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7652,
											"end": 7654,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7730,
											"end": 7764,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7710,
											"end": 7728,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7710,
											"end": 7728,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7710,
											"end": 7728,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7703,
											"end": 7765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7450,
											"end": 7806,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8013,
											"end": 8015,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 8016,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8025,
											"end": 8055,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8091,
											"end": 8125,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8064,
											"end": 8126,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8135,
											"end": 8171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8188,
											"end": 8207,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8188,
											"end": 8207,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7811,
											"end": 8213,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6421,
											"end": 6437,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6448,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6498,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 6499,
											"end": 6512,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6552,
											"end": 6580,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6552,
											"end": 6580,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6580,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6552,
											"end": 6580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6552,
											"end": 6580,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6581,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6551,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6530,
											"end": 6581,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6581,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6530,
											"end": 6581,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6581,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6581,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6595,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6602,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3251,
											"end": 4235,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 3251,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3384,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3401,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3486,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3486,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3458,
											"end": 3486,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3486,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3457,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3416,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3435,
											"end": 3497,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3511,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8402,
											"end": 8423,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8459,
											"end": 8461,
											"name": "PUSH",
											"source": 15,
											"value": "2D"
										},
										{
											"begin": 8439,
											"end": 8457,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8439,
											"end": 8457,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8439,
											"end": 8457,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8432,
											"end": 8462,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8498,
											"end": 8532,
											"name": "PUSH",
											"source": 15,
											"value": "746F6B656E206973206E6F74207374616B6564206F722073656E64657220646F"
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8533,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195CC81B9BDD081BDDDB881A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8542,
											"end": 8585,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8602,
											"end": 8621,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8602,
											"end": 8621,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 8218,
											"end": 8627,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3427,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 3606,
											"end": 3616,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3633,
											"end": 3641,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3593,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3750,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3780,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3781,
											"end": 3791,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3792,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3792,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3792,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3792,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 3714,
											"end": 3803,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 3714,
											"end": 3803,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3803,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 3714,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3934,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3934,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3934,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3934,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3934,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3934,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3934,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3934,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3934,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3934,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3865,
											"end": 3934,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3934,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3934,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4066,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4066,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4066,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4066,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4066,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4067,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4067,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4037,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 4005,
											"end": 4067,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4067,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4067,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4067,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4067,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4077,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4077,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4077,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4077,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4077,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4077,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4077,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4077,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3998,
											"end": 4077,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3998,
											"end": 4077,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3998,
											"end": 4077,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4116,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4088,
											"end": 4116,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4116,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3924,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4121,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4168,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4140,
											"end": 4168,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4191,
											"end": 4195,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8872,
											"end": 8906,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4198,
											"end": 4208,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8915,
											"end": 8958,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8974,
											"end": 8992,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8974,
											"end": 8992,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8974,
											"end": 8992,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8967,
											"end": 9001,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8967,
											"end": 9001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8967,
											"end": 9001,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4168,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4140,
											"end": 4168,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4140,
											"end": 4168,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4140,
											"end": 4168,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4182,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 4132,
											"end": 4182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4132,
											"end": 4219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3341,
											"end": 4235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 4235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 4235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 4235,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 2581,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 1746,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1894,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1895,
											"end": 1908,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2050,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2050,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2050,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2050,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2050,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2050,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2050,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2050,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2063,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2063,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2063,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2063,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2063,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2063,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2063,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2063,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2173,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2173,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2173,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2145,
											"end": 2173,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2144,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2184,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2184,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2184,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2184,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2184,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2184,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2184,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2184,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2187,
											"end": 2202,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2202,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2112,
											"end": 2202,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2345,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2345,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2345,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2345,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2345,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2346,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2346,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2316,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2346,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2346,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2346,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2346,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2346,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2373,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2412,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2384,
											"end": 2412,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2412,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2523,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2495,
											"end": 2523,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2487,
											"end": 2574,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2574,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2487,
											"end": 2574,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2487,
											"end": 2574,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2548,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2487,
											"end": 2574,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2487,
											"end": 2574,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2487,
											"end": 2574,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8872,
											"end": 8906,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2558,
											"end": 2562,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8915,
											"end": 8958,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8974,
											"end": 8992,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8974,
											"end": 8992,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8974,
											"end": 8992,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8967,
											"end": 9001,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8967,
											"end": 9001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8967,
											"end": 9001,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2523,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2495,
											"end": 2523,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2495,
											"end": 2523,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2495,
											"end": 2523,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2487,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 8632,
											"end": 9007,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 7335,
											"end": 7339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7699,
											"end": 7706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7729,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6640,
											"end": 6750,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6640,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6729,
											"end": 6733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6735,
											"end": 6742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6718,
											"end": 6743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5689,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 5432,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5535,
											"end": 5556,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 5575,
											"end": 5587,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5589,
											"end": 5602,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5603,
											"end": 5611,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5559,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5631,
											"end": 5650,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 5631,
											"end": 5650,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5657,
											"end": 5667,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7345,
											"end": 7396,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7405,
											"end": 7439,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7405,
											"end": 7439,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7405,
											"end": 7439,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5535,
											"end": 5612,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5535,
											"end": 5612,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5631,
											"end": 5650,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5631,
											"end": 5650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5656,
											"name": "PUSH",
											"source": 14,
											"value": "40C10F19"
										},
										{
											"begin": 5622,
											"end": 5656,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5622,
											"end": 5682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5525,
											"end": 5689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5689,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6959,
											"end": 7267,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 6959,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7052,
											"end": 7061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7261,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7047,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7080,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7080,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7063,
											"end": 7080,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7063,
											"end": 7080,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7047,
											"end": 7261,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7047,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 7047,
											"end": 7261,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7118,
											"end": 7126,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7111,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7112,
											"end": 7113,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7101,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7101,
											"end": 7251,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7178,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7178,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7164,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7164,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7165,
											"end": 7182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7181,
											"end": 7182,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7181,
											"end": 7182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 7165,
											"end": 7182,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7165,
											"end": 7182,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7165,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7183,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7152,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7153,
											"end": 7154,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7183,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7183,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7207,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 3003,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7101,
											"end": 7251,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7101,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7047,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7047,
											"end": 7261,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1676,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 1879,
											"end": 1890,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11605,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11585,
											"end": 11606,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11585,
											"end": 11606,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11585,
											"end": 11606,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11615,
											"end": 11645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11681,
											"end": 11715,
											"name": "PUSH",
											"source": 15,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11654,
											"end": 11716,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 11401,
											"end": 11757,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 146,
											"end": 1329,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 146,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 239,
											"end": 245,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 253,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 300,
											"end": 302,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 297,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 279,
											"end": 286,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 275,
											"end": 298,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 271,
											"end": 303,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 268,
											"end": 320,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 268,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 268,
											"end": 320,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 316,
											"end": 317,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 314,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 306,
											"end": 318,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 268,
											"end": 320,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 268,
											"end": 320,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 352,
											"end": 361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 339,
											"end": 362,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 329,
											"end": 362,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 329,
											"end": 362,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 381,
											"end": 383,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 434,
											"end": 436,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 423,
											"end": 432,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 419,
											"end": 437,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 406,
											"end": 438,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 457,
											"end": 475,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 498,
											"end": 500,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 490,
											"end": 496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 487,
											"end": 501,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 484,
											"end": 518,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 484,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 484,
											"end": 518,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 514,
											"end": 515,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 512,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 504,
											"end": 516,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 484,
											"end": 518,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 484,
											"end": 518,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 552,
											"end": 558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 541,
											"end": 550,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 537,
											"end": 559,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 527,
											"end": 559,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 527,
											"end": 559,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 597,
											"end": 604,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 590,
											"end": 594,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 586,
											"end": 588,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 582,
											"end": 595,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 578,
											"end": 605,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 568,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 568,
											"end": 623,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 619,
											"end": 620,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 617,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 609,
											"end": 621,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 568,
											"end": 623,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 568,
											"end": 623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 655,
											"end": 657,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 642,
											"end": 658,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 677,
											"end": 679,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 673,
											"end": 675,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 670,
											"end": 680,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 667,
											"end": 703,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 667,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 667,
											"end": 703,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 683,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 683,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 683,
											"end": 701,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 683,
											"end": 701,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 683,
											"end": 701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 729,
											"end": 731,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 722,
											"end": 732,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 761,
											"end": 763,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 764,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 820,
											"end": 827,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 811,
											"end": 813,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 807,
											"end": 818,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 803,
											"end": 828,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 795,
											"end": 801,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 791,
											"end": 829,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 879,
											"end": 885,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 867,
											"end": 877,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 864,
											"end": 886,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 859,
											"end": 861,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 847,
											"end": 857,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 844,
											"end": 862,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 841,
											"end": 887,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 838,
											"end": 910,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 838,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 838,
											"end": 910,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 890,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 941,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 976,
											"end": 994,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 976,
											"end": 994,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 976,
											"end": 994,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1063,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1048,
											"end": 1068,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1048,
											"end": 1068,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1048,
											"end": 1068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1080,
											"end": 1099,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 1080,
											"end": 1099,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1080,
											"end": 1099,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1077,
											"end": 1116,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1077,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 1077,
											"end": 1116,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1077,
											"end": 1116,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 1077,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1156,
											"end": 1298,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 1156,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1167,
											"end": 1170,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1156,
											"end": 1298,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1156,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 1156,
											"end": 1298,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1255,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1255,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1201,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1201,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1201,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1156,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 1156,
											"end": 1298,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1156,
											"end": 1298,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 1156,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1323,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 146,
											"end": 1329,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 146,
											"end": 1329,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 146,
											"end": 1329,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 146,
											"end": 1329,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 146,
											"end": 1329,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 146,
											"end": 1329,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1334,
											"end": 1620,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1334,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1447,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1433,
											"end": 1442,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1424,
											"end": 1431,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1416,
											"end": 1448,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1413,
											"end": 1465,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1413,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 1413,
											"end": 1465,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1413,
											"end": 1465,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 1413,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1571,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1539,
											"end": 1571,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1519,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 1519,
											"end": 1590,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1584,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1576,
											"end": 1588,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1817,
											"end": 1997,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1817,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1882,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1931,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1908,
											"end": 1915,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1904,
											"end": 1927,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1900,
											"end": 1932,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1897,
											"end": 1949,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1897,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 1897,
											"end": 1949,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 1946,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1935,
											"end": 1947,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1897,
											"end": 1949,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 1897,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 1991,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1968,
											"end": 1991,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1817,
											"end": 1997,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1997,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2719,
											"end": 2892,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 2719,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2836,
											"end": 2867,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2867,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2868,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2868,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2816,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 2816,
											"end": 2886,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2880,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2816,
											"end": 2886,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 2816,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2719,
											"end": 2892,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2719,
											"end": 2892,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2719,
											"end": 2892,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2719,
											"end": 2892,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2897,
											"end": 3151,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2897,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2965,
											"end": 2971,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3028,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3005,
											"end": 3012,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3024,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3029,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2994,
											"end": 3046,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2994,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 2994,
											"end": 3046,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3040,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2994,
											"end": 3046,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 2994,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 3084,
											"end": 3093,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3065,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 3065,
											"end": 3094,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3065,
											"end": 3094,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 3065,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3094,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3144,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3126,
											"end": 3144,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3126,
											"end": 3144,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3126,
											"end": 3144,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3113,
											"end": 3145,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3113,
											"end": 3145,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2897,
											"end": 3151,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3156,
											"end": 3410,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 3156,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3285,
											"end": 3287,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3264,
											"end": 3271,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3288,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3291,
											"end": 3303,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3337,
											"end": 3346,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3347,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3314,
											"end": 3347,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3314,
											"end": 3347,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3366,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 3400,
											"end": 3402,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3385,
											"end": 3403,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3366,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 3366,
											"end": 3404,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3404,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 3366,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3356,
											"end": 3404,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3356,
											"end": 3404,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3410,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3410,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3410,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3410,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3410,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3410,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3415,
											"end": 3737,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 3415,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3563,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3559,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3529,
											"end": 3581,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3529,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 3529,
											"end": 3581,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3567,
											"end": 3579,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3529,
											"end": 3581,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 3529,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 3600,
											"end": 3629,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3600,
											"end": 3629,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 3600,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3590,
											"end": 3629,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3676,
											"end": 3678,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3680,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3680,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3729,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3699,
											"end": 3731,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3699,
											"end": 3731,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3737,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3415,
											"end": 3737,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3924,
											"end": 4110,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3924,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3983,
											"end": 3989,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4038,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4015,
											"end": 4022,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4011,
											"end": 4034,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4007,
											"end": 4039,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4004,
											"end": 4056,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4004,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 4004,
											"end": 4056,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4052,
											"end": 4053,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4050,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4042,
											"end": 4054,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4004,
											"end": 4056,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 4004,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4075,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4075,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 4075,
											"end": 4104,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4363,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 4115,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4246,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4223,
											"end": 4230,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4219,
											"end": 4242,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4215,
											"end": 4247,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4212,
											"end": 4264,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4212,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 4212,
											"end": 4264,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4260,
											"end": 4261,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4257,
											"end": 4258,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4212,
											"end": 4264,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 4212,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4283,
											"end": 4306,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4283,
											"end": 4306,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4283,
											"end": 4306,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4353,
											"end": 4355,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4115,
											"end": 4363,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4368,
											"end": 4690,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 4368,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4445,
											"end": 4451,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4459,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4467,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4516,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4502,
											"end": 4511,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4493,
											"end": 4500,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4512,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4485,
											"end": 4517,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4482,
											"end": 4534,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4482,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 4482,
											"end": 4534,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4530,
											"end": 4531,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4528,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4520,
											"end": 4532,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4482,
											"end": 4534,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 4482,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4566,
											"end": 4575,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4553,
											"end": 4576,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4543,
											"end": 4576,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4543,
											"end": 4576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4595,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4627,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4595,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 4595,
											"end": 4633,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4595,
											"end": 4633,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 4595,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4633,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4633,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4669,
											"end": 4678,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4684,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4642,
											"end": 4684,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4642,
											"end": 4684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4368,
											"end": 4690,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4368,
											"end": 4690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4368,
											"end": 4690,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4368,
											"end": 4690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4368,
											"end": 4690,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4368,
											"end": 4690,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4903,
											"end": 5231,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 4903,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4980,
											"end": 4986,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4994,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4996,
											"end": 5002,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5051,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5037,
											"end": 5046,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5028,
											"end": 5035,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5024,
											"end": 5047,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5017,
											"end": 5069,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5017,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 5017,
											"end": 5069,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5062,
											"end": 5063,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5055,
											"end": 5067,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5017,
											"end": 5069,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 5017,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 5107,
											"end": 5116,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5078,
											"end": 5117,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5078,
											"end": 5117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5136,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 5170,
											"end": 5172,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5155,
											"end": 5173,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5136,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 5136,
											"end": 5174,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5443,
											"end": 6075,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 5443,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5614,
											"end": 5616,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5687,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5666,
											"end": 5687,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5666,
											"end": 5687,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5736,
											"end": 5749,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5736,
											"end": 5749,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5657,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5657,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5657,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5758,
											"end": 5780,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5758,
											"end": 5780,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5758,
											"end": 5780,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5614,
											"end": 5616,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5837,
											"end": 5852,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5837,
											"end": 5852,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5837,
											"end": 5852,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5837,
											"end": 5852,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5880,
											"end": 6049,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 5880,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5894,
											"end": 5900,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5891,
											"end": 5892,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5880,
											"end": 6049,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5880,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 5880,
											"end": 6049,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5955,
											"end": 5968,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5955,
											"end": 5968,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6024,
											"end": 6039,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6024,
											"end": 6039,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6024,
											"end": 6039,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6024,
											"end": 6039,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5989,
											"end": 6001,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5989,
											"end": 6001,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5989,
											"end": 6001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5989,
											"end": 6001,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 5917,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5880,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 5880,
											"end": 6049,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5880,
											"end": 6049,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 5880,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5443,
											"end": 6075,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 6075,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6080,
											"end": 6207,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 6080,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6141,
											"end": 6151,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 6136,
											"end": 6139,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6132,
											"end": 6152,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6129,
											"end": 6130,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6122,
											"end": 6153,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6162,
											"end": 6177,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6196,
											"end": 6200,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6193,
											"end": 6194,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6201,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6212,
											"end": 6339,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 6212,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6273,
											"end": 6283,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 6268,
											"end": 6271,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6264,
											"end": 6284,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6261,
											"end": 6262,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 6301,
											"end": 6302,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6294,
											"end": 6309,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6333,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6344,
											"end": 6479,
											"name": "tag",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 6344,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6383,
											"end": 6386,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6401,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 6401,
											"end": 6444,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6424,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 6424,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 6424,
											"end": 6442,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6424,
											"end": 6442,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 6424,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6471,
											"end": 6472,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6460,
											"end": 6473,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6460,
											"end": 6473,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6344,
											"end": 6479,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6484,
											"end": 6609,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 6484,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6553,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6549,
											"end": 6550,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6546,
											"end": 6554,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6543,
											"end": 6577,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6543,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 6543,
											"end": 6577,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6557,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 6557,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 6557,
											"end": 6575,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6557,
											"end": 6575,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 6557,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 6603,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6594,
											"end": 6603,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6484,
											"end": 6609,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7030,
											"end": 7158,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 7030,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7070,
											"end": 7073,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7102,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7097,
											"end": 7103,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7091,
											"end": 7104,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7088,
											"end": 7127,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7088,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 7088,
											"end": 7127,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7143,
											"end": 7152,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7143,
											"end": 7152,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7030,
											"end": 7158,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9012,
											"end": 9229,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 9012,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9052,
											"end": 9053,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9078,
											"end": 9079,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9068,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9068,
											"end": 9200,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9122,
											"end": 9132,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9117,
											"end": 9120,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9113,
											"end": 9133,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9110,
											"end": 9111,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9134,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9157,
											"end": 9161,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9147,
											"end": 9162,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9185,
											"end": 9189,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9182,
											"end": 9183,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9175,
											"end": 9190,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9068,
											"end": 9200,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9068,
											"end": 9200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9214,
											"end": 9223,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 9214,
											"end": 9223,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9012,
											"end": 9229,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9234,
											"end": 9402,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 9234,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9274,
											"end": 9281,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9340,
											"end": 9341,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9336,
											"end": 9337,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9332,
											"end": 9338,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 9328,
											"end": 9342,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 9325,
											"end": 9326,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9322,
											"end": 9343,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9317,
											"end": 9318,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9310,
											"end": 9319,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9303,
											"end": 9320,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9296,
											"end": 9367,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9296,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9296,
											"end": 9367,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9234,
											"end": 9402,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9686,
											"end": 9813,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 9686,
											"end": 9813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9742,
											"end": 9745,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9738,
											"end": 9758,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9735,
											"end": 9736,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9759,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9778,
											"end": 9782,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 9775,
											"end": 9776,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9768,
											"end": 9783,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9802,
											"end": 9806,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9799,
											"end": 9800,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9807,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9818,
											"end": 10076,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 9818,
											"end": 10076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9890,
											"end": 9891,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9900,
											"end": 10013,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 9900,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9914,
											"end": 9920,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9908,
											"end": 9921,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 10013,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 9900,
											"end": 10013,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9990,
											"end": 10001,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9990,
											"end": 10001,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9990,
											"end": 10001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9984,
											"end": 10002,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9971,
											"end": 9982,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9971,
											"end": 9982,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9971,
											"end": 9982,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9964,
											"end": 10003,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9936,
											"end": 9938,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9929,
											"end": 9939,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 9900,
											"end": 10013,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 10013,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 9900,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10031,
											"end": 10037,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10028,
											"end": 10029,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10025,
											"end": 10038,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10066,
											"end": 10067,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10057,
											"end": 10063,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10055,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10048,
											"end": 10064,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10041,
											"end": 10068,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "tag",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9818,
											"end": 10076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9818,
											"end": 10076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9818,
											"end": 10076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9818,
											"end": 10076,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10081,
											"end": 10867,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 10081,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10492,
											"end": 10517,
											"name": "PUSH",
											"source": 15,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 10487,
											"end": 10490,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10480,
											"end": 10518,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10462,
											"end": 10465,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10547,
											"end": 10553,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10563,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 10618,
											"end": 10624,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10613,
											"end": 10615,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 10608,
											"end": 10611,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10604,
											"end": 10616,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10597,
											"end": 10601,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10589,
											"end": 10595,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10585,
											"end": 10602,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10563,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 10563,
											"end": 10625,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10563,
											"end": 10625,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 10563,
											"end": 10625,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10684,
											"end": 10686,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 10644,
											"end": 10660,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10660,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10660,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10687,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10687,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10687,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10669,
											"end": 10709,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10747,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10747,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10756,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 10734,
											"end": 10747,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10805,
											"end": 10807,
											"name": "PUSH",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 10797,
											"end": 10808,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10797,
											"end": 10808,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10790,
											"end": 10794,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10778,
											"end": 10795,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10778,
											"end": 10795,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10756,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 10756,
											"end": 10819,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10756,
											"end": 10819,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 10756,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10839,
											"end": 10856,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10858,
											"end": 10860,
											"name": "PUSH",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 10835,
											"end": 10861,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10835,
											"end": 10861,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10081,
											"end": 10867,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10081,
											"end": 10867,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10872,
											"end": 11255,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 10872,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11021,
											"end": 11023,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11019,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11003,
											"end": 11024,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10984,
											"end": 10988,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11053,
											"end": 11059,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11047,
											"end": 11060,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11096,
											"end": 11102,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11091,
											"end": 11093,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11080,
											"end": 11089,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11076,
											"end": 11094,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11069,
											"end": 11103,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11112,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 11171,
											"end": 11177,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11166,
											"end": 11168,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11155,
											"end": 11164,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11146,
											"end": 11148,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11138,
											"end": 11144,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11134,
											"end": 11149,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11112,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 11112,
											"end": 11178,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11112,
											"end": 11178,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 11112,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11239,
											"end": 11241,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 11218,
											"end": 11233,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11214,
											"end": 11243,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11199,
											"end": 11244,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11199,
											"end": 11244,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11199,
											"end": 11244,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11199,
											"end": 11244,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11246,
											"end": 11248,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11195,
											"end": 11249,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11195,
											"end": 11249,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10872,
											"end": 11255,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10872,
											"end": 11255,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11260,
											"end": 11396,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 11260,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11299,
											"end": 11302,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11327,
											"end": 11332,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11317,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 11317,
											"end": 11356,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11260,
											"end": 11396,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"batchStake(uint256,uint256[])": "1bbda52b",
							"batchUnstake(uint256,uint256[])": "008afd4e",
							"claimableReward(address,uint256,uint256)": "302f7fea",
							"collectionInfo(uint256)": "0fb4d2e5",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTotalStakedItemsCount(uint256)": "842dd90a",
							"getUserStakedTokens(address,uint256)": "f93b03bc",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mintTest()": "66675aa9",
							"onERC721Received(address,address,uint256)": "eeafbddc",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setAdminRole(address)": "4adc7cfd",
							"setCollection(address,uint256)": "2edb531c",
							"stake(uint256,uint256)": "7b0472f0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalClaimableReward(address,uint256)": "3b552dbd",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256,uint256)": "9e2c8a5b",
							"updateCollection(uint256,address,uint256)": "7b71e5db"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collectionID\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIDs\",\"type\":\"uint256[]\"}],\"name\":\"batchStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collectionID\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIDs\",\"type\":\"uint256[]\"}],\"name\":\"batchUnstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collectionID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"claimableReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collectionInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountStaked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collectionID\",\"type\":\"uint256\"}],\"name\":\"getTotalStakedItemsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collectionID\",\"type\":\"uint256\"}],\"name\":\"getUserStakedTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerDay\",\"type\":\"uint256\"}],\"name\":\"setCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collectionID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collectionID\",\"type\":\"uint256\"}],\"name\":\"totalClaimableReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collectionID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collectionID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerDay\",\"type\":\"uint256\"}],\"name\":\"updateCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CLstaking.sol\":\"CyberlionStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"CLstaking.sol\":{\"keccak256\":\"0xcc67ffef0f714c9da847d8e973c7df60dac1adfcfb9728117574e750853dd4c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3089d2fdcbe1d8212419ed1c78e02def49da049184df51999ec29b36ba29a907\",\"dweb:/ipfs/QmRfBtAHDy1qgBRKCtdZBQ5fxM5v5LaM3Jpnh3Pd9Laisi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 400,
								"contract": "CLstaking.sol:CyberlionStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 24,
								"contract": "CLstaking.sol:CyberlionStaking",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 2506,
								"contract": "CLstaking.sol:CyberlionStaking",
								"label": "ADMIN_ROLE",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							},
							{
								"astId": 2524,
								"contract": "CLstaking.sol:CyberlionStaking",
								"label": "rewardsTokenAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2538,
								"contract": "CLstaking.sol:CyberlionStaking",
								"label": "addressToStakedTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2544,
								"contract": "CLstaking.sol:CyberlionStaking",
								"label": "contractTokenIdToOwner",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
							},
							{
								"astId": 2550,
								"contract": "CLstaking.sol:CyberlionStaking",
								"label": "contractTokenIdToStakedTimestamp",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 2554,
								"contract": "CLstaking.sol:CyberlionStaking",
								"label": "collectionInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(CollectionInfo)2531_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(CollectionInfo)2531_storage)dyn_storage": {
								"base": "t_struct(CollectionInfo)2531_storage",
								"encoding": "dynamic_array",
								"label": "struct CyberlionStaking.CollectionInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_address))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => address))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_address)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(CollectionInfo)2531_storage": {
								"encoding": "inplace",
								"label": "struct CyberlionStaking.CollectionInfo",
								"members": [
									{
										"astId": 2526,
										"contract": "CLstaking.sol:CyberlionStaking",
										"label": "collectionAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2528,
										"contract": "CLstaking.sol:CyberlionStaking",
										"label": "rewardPerDay",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2530,
										"contract": "CLstaking.sol:CyberlionStaking",
										"label": "totalAmountStaked",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "CLstaking.sol:CyberlionStaking",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "CLstaking.sol:CyberlionStaking",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Mintable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"mint(address,uint256)": "40c10f19",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CLstaking.sol\":\"Mintable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"CLstaking.sol\":{\"keccak256\":\"0xcc67ffef0f714c9da847d8e973c7df60dac1adfcfb9728117574e750853dd4c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3089d2fdcbe1d8212419ed1c78e02def49da049184df51999ec29b36ba29a907\",\"dweb:/ipfs/QmRfBtAHDy1qgBRKCtdZBQ5fxM5v5LaM3Jpnh3Pd9Laisi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							1919
						],
						"ERC165": [
							2146
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							2158
						],
						"Strings": [
							2122
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 393,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1920,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 2123,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 2147,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1919,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2146,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								2146,
								2158,
								392,
								1919
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2145
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$392",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2145,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 319,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 319,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 319,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3791:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3801:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3830:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4017:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2122,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2122_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2121,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4129:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2122,
																								"src": "4101:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2122_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2121,
																							"src": "4101:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 319,
									"src": "3718:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4474:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4484:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 319,
									"src": "4391:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4873:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4894:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4883:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4883:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4526:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4853:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4853:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4844:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4844:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4779:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4789:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4873:0:0"
									},
									"scope": 319,
									"src": "4770:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5253:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5263:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5263:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5263:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4921:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5233:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5224:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5224:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5158:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5215:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5183:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:0"
									},
									"scope": 319,
									"src": "5149:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "5864:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "5882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "5893:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5893:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5882:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5907:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5874:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5874:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5968:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5968:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5302:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5796:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5855:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5864:0:0"
									},
									"scope": 319,
									"src": "5787:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6708:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6718:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6718:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6718:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "6007:628:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6668:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6708:0:0"
									},
									"scope": 319,
									"src": "6640:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "6948:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6966:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "6958:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6986:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6986:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6958:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7021:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7014:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7014:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7039:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7014:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7014:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7086:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7063:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7063:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7058:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6756:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6884:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6898:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6920:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6912:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6897:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6948:0:0"
									},
									"scope": 319,
									"src": "6875:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7312:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7326:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7327:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7322:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7351:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7365:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7372:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7365:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7365:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7386:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7365:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7397:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7365:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7365:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7432:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7438:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "7447:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7447:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7420:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7420:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7415:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7128:111:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7253:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7272:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7286:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7278:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7263:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7312:0:0"
									},
									"scope": 319,
									"src": "7244:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7671:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7699:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7681:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7709:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7723:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "7730:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7723:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7723:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7744:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7723:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7755:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7723:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7723:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "7791:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7797:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "7806:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7806:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "7779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7779:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "7774:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7483:114:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7611:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7631:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7671:0:0"
									},
									"scope": 319,
									"src": "7602:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6032:0",
							"usedErrors": []
						}
					],
					"src": "108:7731:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 331,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 340,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 349,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 392,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 392,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 392,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 392,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 392,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1919
						],
						"Ownable": [
							497
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 1920,
							"src": "112:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 397,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1919,
										"src": "668:7:2"
									},
									"id": 398,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 396,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497,
								1919
							],
							"name": "Ownable",
							"nameLocation": "657:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 400,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 497,
									"src": "682:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 399,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 406,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "738:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "769:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:2"
									},
									"src": "711:84:2"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "911:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 411,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "940:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 410,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "921:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "921:32:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 416,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:2"
									},
									"scope": 497,
									"src": "897:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1091:30:2",
										"statements": [
											{
												"expression": {
													"id": 422,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "1108:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 421,
												"id": 423,
												"nodeType": "Return",
												"src": "1101:13:2"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1082:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:2"
									},
									"scope": 497,
									"src": "1036:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "1230:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 429,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "1248:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 431,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "1259:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:2"
											},
											{
												"id": 437,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:2"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 439,
									"name": "onlyOwner",
									"nameLocation": "1218:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:2"
									},
									"src": "1209:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "1722:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 446,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 445,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "1732:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:2"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 443,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 442,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 439,
												"src": "1712:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:2"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:2"
									},
									"scope": 497,
									"src": "1668:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "1988:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 462,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "2006:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 472,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2100:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 471,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2081:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:2"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 459,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 458,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 439,
												"src": "1978:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "1945:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:2"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:2"
									},
									"scope": 497,
									"src": "1918:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2333:124:2",
										"statements": [
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "2343:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 482,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"initialValue": {
													"id": 484,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "2362:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:2"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "2378:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 487,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2387:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 491,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2431:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2441:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 490,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "2410:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "EmitStatement",
												"src": "2405:45:2"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2298:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:2"
									},
									"scope": 497,
									"src": "2270:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "639:1820:2",
							"usedErrors": []
						}
					],
					"src": "87:2373:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							575
						]
					},
					"id": 576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 575,
							"linearizedBaseContracts": [
								575
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 509,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 518,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 575,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 575,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 575,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 575,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 575,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 575,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 576,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1897
						],
						"Context": [
							1919
						],
						"ERC165": [
							2146
						],
						"ERC721": [
							1441
						],
						"IERC165": [
							2158
						],
						"IERC721": [
							1557
						],
						"IERC721Metadata": [
							1602
						],
						"IERC721Receiver": [
							1575
						],
						"Strings": [
							2122
						]
					},
					"id": 1442,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 578,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1558,
							"src": "132:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 579,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1576,
							"src": "156:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1603,
							"src": "188:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 581,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1898,
							"src": "231:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1920,
							"src": "265:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 2123,
							"src": "299:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 2147,
							"src": "333:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 586,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1919,
										"src": "647:7:4"
									},
									"id": 587,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:4"
								},
								{
									"baseName": {
										"id": 588,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2146,
										"src": "656:6:4"
									},
									"id": 589,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:4"
								},
								{
									"baseName": {
										"id": 590,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1557,
										"src": "664:7:4"
									},
									"id": 591,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:4"
								},
								{
									"baseName": {
										"id": 592,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1602,
										"src": "673:15:4"
									},
									"id": 593,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 585,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1441,
							"linearizedBaseContracts": [
								1441,
								1602,
								1557,
								2146,
								2158,
								1919
							],
							"name": "ERC721",
							"nameLocation": "637:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 596,
									"libraryName": {
										"id": 594,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1897,
										"src": "701:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:4",
									"typeName": {
										"id": 595,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 599,
									"libraryName": {
										"id": 597,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2122,
										"src": "732:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:4",
									"typeName": {
										"id": 598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 601,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "776:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 600,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 603,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "823:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 602,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 607,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "898:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 606,
										"keyType": {
											"id": 604,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 605,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 611,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "992:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 610,
										"keyType": {
											"id": 608,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 609,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 615,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "1093:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 614,
										"keyType": {
											"id": 612,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 613,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 621,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "1199:71:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 620,
										"keyType": {
											"id": 616,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 619,
											"keyType": {
												"id": 617,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 618,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "1446:57:4",
										"statements": [
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 629,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "1456:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 630,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1464:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:4"
											},
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 633,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "1479:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 634,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "1489:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:4"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 638,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1402:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1423:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:4"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:4"
									},
									"scope": 1441,
									"src": "1390:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2145,
										2157
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "1678:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 649,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "1707:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 651,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "1727:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1557_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1557_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 650,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1557",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 655,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "1763:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 657,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "1783:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1602_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1602_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 656,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1602",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 664,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "1851:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 662,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1441_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2145,
															"src": "1827:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 648,
												"id": 667,
												"nodeType": "Return",
												"src": "1688:175:4"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 645,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 643,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2146,
												"src": "1646:6:4"
											},
											{
												"id": 644,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2158,
												"src": "1654:7:4"
											}
										],
										"src": "1637:25:4"
									},
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1597:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 640,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:4"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1672:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:4"
									},
									"scope": 1441,
									"src": "1570:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1482
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "2010:124:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 679,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "2028:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 680,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															},
															"value": "ERC721: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "2020:74:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 688,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "2111:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 690,
													"indexExpression": {
														"id": 689,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2121:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2111:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 677,
												"id": 691,
												"nodeType": "Return",
												"src": "2104:23:4"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 674,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:4"
									},
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1948:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:4"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2001:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:4"
									},
									"scope": 1441,
									"src": "1929:205:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1490
									],
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "2272:154:4",
										"statements": [
											{
												"assignments": [
													703
												],
												"declarations": [
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2290:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 720,
														"src": "2282:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 702,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2282:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"initialValue": {
													"baseExpression": {
														"id": 704,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "2298:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 706,
													"indexExpression": {
														"id": 705,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "2306:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2298:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2282:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 709,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "2332:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 710,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															},
															"value": "ERC721: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "2324:73:4"
											},
											{
												"expression": {
													"id": 718,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 703,
													"src": "2414:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 701,
												"id": 719,
												"nodeType": "Return",
												"src": "2407:12:4"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "2140:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2200:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 698,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2245:8:4"
									},
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2216:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "2208:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:17:4"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "2263:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:9:4"
									},
									"scope": 1441,
									"src": "2191:235:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1587
									],
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "2557:29:4",
										"statements": [
											{
												"expression": {
													"id": 728,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 601,
													"src": "2574:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 727,
												"id": 729,
												"nodeType": "Return",
												"src": "2567:12:4"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "2432:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2497:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 724,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2524:8:4"
									},
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:2:4"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "2542:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 725,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2542:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:15:4"
									},
									"scope": 1441,
									"src": "2488:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1593
									],
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "2721:31:4",
										"statements": [
											{
												"expression": {
													"id": 738,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 603,
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 737,
												"id": 739,
												"nodeType": "Return",
												"src": "2731:14:4"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "2592:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2659:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 734,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2688:8:4"
									},
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:2:4"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2706:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 735,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2706:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:15:4"
									},
									"scope": 1441,
									"src": "2650:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1601
									],
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "2906:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 752,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "2932:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 751,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "2924:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2924:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2942:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2916:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "2916:76:4"
											},
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3017:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "3003:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 757,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3003:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 759,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "3027:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3027:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3003:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 764,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "3060:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3054:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 762,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3054:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3054:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3054:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3078:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3054:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3138:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3054:86:4",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 773,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "3106:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 774,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 744,
																				"src": "3115:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2004,
																			"src": "3115:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3115:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 771,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3089:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3089:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3089:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3082:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 769,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3082:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3082:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 749,
												"id": 781,
												"nodeType": "Return",
												"src": "3047:93:4"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "2758:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2827:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 746,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2873:8:4"
									},
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2844:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2836:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:17:4"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2891:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2891:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:15:4"
									},
									"scope": 1441,
									"src": "2818:329:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "3455:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3472:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 788,
												"id": 790,
												"nodeType": "Return",
												"src": "3465:9:4"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "3153:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3398:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3406:2:4"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3440:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3440:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:15:4"
									},
									"scope": 1441,
									"src": "3389:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1530
									],
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "3608:331:4",
										"statements": [
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3626:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "3618:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 801,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3618:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"arguments": [
														{
															"id": 805,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "3649:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 803,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "3634:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1441_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 721,
														"src": "3634:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3618:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 809,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "3675:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 810,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "3681:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3675:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3688:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 808,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3667:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3667:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "3667:57:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 816,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "3756:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3756:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 818,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "3772:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3756:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 821,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "3798:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 822,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "3805:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3805:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 820,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "3781:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3781:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3756:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3832:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3735:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3735:165:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "3735:165:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 830,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "3920:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 831,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "3924:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 829,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "3911:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3911:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "3911:21:4"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "3487:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3547:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 799,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3599:8:4"
									},
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3563:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "3555:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3575:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "3567:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:29:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3608:0:4"
									},
									"scope": 1441,
									"src": "3538:401:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1546
									],
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "4085:132:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 846,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "4111:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 845,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "4103:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4103:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4121:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4095:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4095:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "4095:73:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 851,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4186:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 853,
													"indexExpression": {
														"id": 852,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "4202:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4186:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 843,
												"id": 854,
												"nodeType": "Return",
												"src": "4179:31:4"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "3945:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4009:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 840,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:4"
									},
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4029:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "4021:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4020:17:4"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "4076:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:4"
									},
									"scope": 1441,
									"src": "4000:217:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1538
									],
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "4368:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 866,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "4397:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4397:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "4411:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "4421:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 865,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "4378:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "4378:52:4"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "4223:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4293:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 863,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4359:8:4"
									},
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4319:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "4311:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4334:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "4329:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4329:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4310:33:4"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4368:0:4"
									},
									"scope": 1441,
									"src": "4284:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1556
									],
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "4606:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 884,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "4623:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 886,
														"indexExpression": {
															"id": 885,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4623:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 888,
													"indexExpression": {
														"id": 887,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "4649:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4623:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 883,
												"id": 889,
												"nodeType": "Return",
												"src": "4616:42:4"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "4443:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4512:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 880,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4582:8:4"
									},
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4537:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4529:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4529:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4552:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4544:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4544:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4528:33:4"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4600:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4600:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4599:6:4"
									},
									"scope": 1441,
									"src": "4503:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1522
									],
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "4846:211:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 904,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "4935:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4935:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 906,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "4949:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 903,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "4916:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4916:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4959:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4908:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4908:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "4908:103:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "5032:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5038:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 914,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "5042:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 911,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "5022:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "5022:28:4"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "4671:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4736:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 900,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4837:8:4"
									},
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4766:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "4758:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4788:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "4780:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4808:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "4800:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4748:73:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4846:0:4"
									},
									"scope": 1441,
									"src": "4727:330:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1512
									],
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "5246:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 930,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "5273:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "5279:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "5283:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5292:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 929,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															967
														],
														"referencedDeclaration": 967,
														"src": "5256:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5256:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "5256:39:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "5063:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5132:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 927,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5237:8:4"
									},
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5166:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "5158:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5188:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "5180:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5208:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "5200:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5200:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:73:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:4"
									},
									"scope": 1441,
									"src": "5123:179:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1502
									],
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "5519:169:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 952,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "5556:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5556:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 954,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "5570:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 951,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "5537:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5537:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5580:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5529:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "5529:103:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 960,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "5656:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "5662:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "5666:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 963,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "5675:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 959,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "5642:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5642:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "5642:39:4"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "5308:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5377:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 948,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5510:8:4"
									},
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5411:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "5403:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5433:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "5425:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5453:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "5445:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5483:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "5470:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 945,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5470:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:101:4"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5519:0:4"
									},
									"scope": 1441,
									"src": "5368:320:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "6691:166:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 980,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "6711:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "6717:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 982,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "6721:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 979,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "6701:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6701:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "6701:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 987,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "6770:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 988,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "6776:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 989,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "6780:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 990,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "6789:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 986,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "6747:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6747:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6797:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6739:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:111:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "6739:111:4"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "5694:851:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6559:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6590:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6582:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6612:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6604:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6604:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6632:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6624:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6662:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6649:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6649:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6572:101:4"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6691:0:4"
									},
									"scope": 1441,
									"src": "6550:307:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "7231:54:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1004,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7248:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1006,
														"indexExpression": {
															"id": 1005,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "7256:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7248:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7276:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7268:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1007,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7268:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7268:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7248:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1003,
												"id": 1012,
												"nodeType": "Return",
												"src": "7241:37:4"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "6863:292:4",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7169:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7185:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "7177:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7176:17:4"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "7225:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7225:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:6:4"
									},
									"scope": 1441,
									"src": "7160:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "7542:245:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1026,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "7568:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1025,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "7560:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7560:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7578:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7552:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7552:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "7552:73:4"
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7643:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "7635:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7635:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1037,
												"initialValue": {
													"arguments": [
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "7666:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1033,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "7651:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1441_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 721,
														"src": "7651:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7651:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7635:39:4"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "7692:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1039,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "7703:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7692:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1042,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "7729:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1043,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "7736:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1041,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "7712:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7712:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7692:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1047,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "7760:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1046,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "7748:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7748:20:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1049,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "7772:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7748:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7692:87:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1052,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7691:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1053,
												"nodeType": "Return",
												"src": "7684:96:4"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "7291:147:4",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7452:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7479:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "7471:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7496:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "7488:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7470:34:4"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "7536:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7536:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:6:4"
									},
									"scope": 1441,
									"src": "7443:344:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "8182:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1064,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "8202:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "8206:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8215:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1063,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1070,
															1099
														],
														"referencedDeclaration": 1099,
														"src": "8192:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "8192:26:4"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "7793:319:4",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8126:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8144:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "8136:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8156:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "8148:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8148:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8135:29:4"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8182:0:4"
									},
									"scope": 1441,
									"src": "8117:108:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "8561:196:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "8577:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "8581:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1080,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "8571:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8571:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "8571:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8651:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8643:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1087,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8643:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8643:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1091,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "8655:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1092,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "8659:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1093,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "8668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1086,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "8620:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8620:54:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8688:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8599:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8599:151:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "8599:151:4"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "8231:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8455:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8482:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "8474:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8474:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "8494:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8532:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "8519:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8519:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8464:79:4"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8561:0:4"
									},
									"scope": 1441,
									"src": "8446:311:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "9140:366:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1108,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "9158:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9164:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1109,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9164:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9164:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9158:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9176:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 1107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9150:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9150:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "9150:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9229:17:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "9238:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "9230:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9230:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9248:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 1117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9221:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9221:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "9221:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9319:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9311:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1126,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9311:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9311:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1130,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "9323:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "9327:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1125,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "9290:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9290:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "9290:45:4"
											},
											{
												"expression": {
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1134,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "9346:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1136,
														"indexExpression": {
															"id": 1135,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "9356:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9346:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9363:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9346:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "9346:18:4"
											},
											{
												"expression": {
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1140,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9374:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1142,
														"indexExpression": {
															"id": 1141,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "9382:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9374:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1143,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "9393:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9374:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "9374:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9428:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9420:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1147,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9420:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9420:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "9432:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "9436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1146,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "9411:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9411:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "EmitStatement",
												"src": "9406:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9483:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9475:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1156,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9475:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9475:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "9487:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1161,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "9491:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1155,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "9455:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9455:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "9455:44:4"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "8763:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9088:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9102:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "9094:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9114:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "9106:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9093:29:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9140:0:4"
									},
									"scope": 1441,
									"src": "9079:427:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "9772:357:4",
										"statements": [
											{
												"assignments": [
													1172
												],
												"declarations": [
													{
														"constant": false,
														"id": 1172,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9790:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "9782:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1171,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9782:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1177,
												"initialValue": {
													"arguments": [
														{
															"id": 1175,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "9813:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1173,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "9798:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1441_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 721,
														"src": "9798:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9798:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9782:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1179,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "9853:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9868:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9860:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1180,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9860:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9860:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1184,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "9872:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1178,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "9832:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9832:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "9832:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9935:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9927:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1188,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9927:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9927:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "9939:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1187,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "9918:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9918:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "9918:29:4"
											},
											{
												"expression": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1195,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "9958:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1197,
														"indexExpression": {
															"id": 1196,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "9968:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9958:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9978:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9958:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "9958:21:4"
											},
											{
												"expression": {
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9989:23:4",
													"subExpression": {
														"baseExpression": {
															"id": 1201,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9996:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1203,
														"indexExpression": {
															"id": 1202,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "10004:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9996:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "9989:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1207,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "10037:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10052:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10044:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1208,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10044:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10044:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "10056:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1206,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "10028:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10028:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "EmitStatement",
												"src": "10023:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "10095:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10110:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10102:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1217,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10102:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10102:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "10114:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "10075:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "10075:47:4"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "9512:206:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9732:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9746:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "9738:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9737:17:4"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9772:0:4"
									},
									"scope": 1441,
									"src": "9723:406:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "10562:496:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1238,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1232,
																		"src": "10595:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1236,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "10580:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1441_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 721,
																	"src": "10580:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10580:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1240,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "10607:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10580:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10613:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10572:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10572:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "10572:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1246,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "10671:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10685:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10677:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1247,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10677:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10677:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10671:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10689:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 1245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10663:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10663:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "10663:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1256,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "10760:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "10766:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "10770:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1255,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "10739:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10739:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "10739:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10857:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10849:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10849:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10849:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "10861:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1261,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "10840:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10840:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "10840:29:4"
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1269,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "10880:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1271,
														"indexExpression": {
															"id": 1270,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "10890:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10880:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10899:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10880:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "10880:20:4"
											},
											{
												"expression": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1275,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "10910:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1277,
														"indexExpression": {
															"id": 1276,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "10920:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10910:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10927:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10910:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "10910:18:4"
											},
											{
												"expression": {
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1281,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1283,
														"indexExpression": {
															"id": 1282,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "10946:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10938:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1284,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "10957:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10938:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "10938:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1288,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "10984:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "10990:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "10994:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1287,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "10975:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10975:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "EmitStatement",
												"src": "10970:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1294,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "11033:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "11039:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1296,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "11043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1293,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "11013:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "11013:38:4"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "10135:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10462:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10489:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "10481:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10481:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10511:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "10503:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10531:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "10523:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10471:73:4"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10562:0:4"
									},
									"scope": 1441,
									"src": "10453:605:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "11233:107:4",
										"statements": [
											{
												"expression": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1308,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "11243:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1310,
														"indexExpression": {
															"id": 1309,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "11259:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11243:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1311,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "11270:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11243:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "11243:29:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1317,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "11311:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1315,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "11296:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1441_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 721,
																"src": "11296:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11296:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1319,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "11321:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "11325:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1314,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "11287:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "EmitStatement",
												"src": "11282:51:4"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "11064:100:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11178:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11195:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "11187:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11187:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11207:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "11199:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11199:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11186:29:4"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11233:0:4"
									},
									"scope": 1441,
									"src": "11169:171:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "11598:184:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1335,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "11616:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1336,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "11625:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11616:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11635:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 1334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11608:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11608:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "11608:55:4"
											},
											{
												"expression": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1341,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "11673:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1344,
															"indexExpression": {
																"id": 1342,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "11692:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11673:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1345,
														"indexExpression": {
															"id": 1343,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "11699:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11673:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1346,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "11711:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11673:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "11673:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1350,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "11749:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1351,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "11756:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1352,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "11766:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1349,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "11734:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11734:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "EmitStatement",
												"src": "11729:46:4"
											}
										]
									},
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "11346:124:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "11484:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11520:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "11512:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11512:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11543:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "11535:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11535:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11566:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "11561:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11561:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11502:78:4"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11598:0:4"
									},
									"scope": 1441,
									"src": "11475:307:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "12491:622:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "12505:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1620,
														"src": "12505:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12505:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1415,
													"nodeType": "Block",
													"src": "13071:36:4",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13092:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1369,
															"id": 1414,
															"nodeType": "Return",
															"src": "13085:11:4"
														}
													]
												},
												"id": 1416,
												"nodeType": "IfStatement",
												"src": "12501:606:4",
												"trueBody": {
													"id": 1412,
													"nodeType": "Block",
													"src": "12522:543:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1392,
																		"nodeType": "Block",
																		"src": "12637:91:4",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1386,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1384,
																						"src": "12662:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1387,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1575,
																								"src": "12672:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1575_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1388,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1574,
																							"src": "12672:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1389,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "12672:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "12662:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1369,
																				"id": 1391,
																				"nodeType": "Return",
																				"src": "12655:58:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1393,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1385,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1384,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "12629:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1393,
																				"src": "12622:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1383,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12622:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12621:15:4"
																	},
																	"src": "12613:115:4"
																},
																{
																	"block": {
																		"id": 1409,
																		"nodeType": "Block",
																		"src": "12757:298:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1397,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1395,
																							"src": "12779:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1398,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "12779:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1399,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12796:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12779:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1407,
																					"nodeType": "Block",
																					"src": "12906:135:4",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "12937:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "12974:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12978:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "12970:3:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12970:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12993:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "12987:5:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12987:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "12963:6:4"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12963:38:4"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "12963:38:4"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1395,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12978:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1395,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12993:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1406,
																							"nodeType": "InlineAssembly",
																							"src": "12928:95:4"
																						}
																					]
																				},
																				"id": 1408,
																				"nodeType": "IfStatement",
																				"src": "12775:266:4",
																				"trueBody": {
																					"id": 1405,
																					"nodeType": "Block",
																					"src": "12799:101:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1402,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12828:52:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1401,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "12821:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1403,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12821:60:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1404,
																							"nodeType": "ExpressionStatement",
																							"src": "12821:60:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1410,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1396,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1395,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "12749:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1410,
																				"src": "12736:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1394,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "12736:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12735:21:4"
																	},
																	"src": "12729:326:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1377,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "12577:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12577:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1379,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1359,
																		"src": "12591:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1380,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "12597:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1381,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "12606:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1374,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1361,
																				"src": "12556:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1373,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1575,
																			"src": "12540:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1575_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12540:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1575",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1574,
																	"src": "12540:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12540:72:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1411,
															"nodeType": "TryStatement",
															"src": "12536:519:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "11788:542:4",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "12344:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12384:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "12376:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12376:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12406:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "12398:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12398:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12426:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "12418:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12418:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "12443:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12443:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12366:101:4"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "12485:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12485:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12484:6:4"
									},
									"scope": 1441,
									"src": "12335:778:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "13789:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "13119:545:4",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13678:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13716:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "13708:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13708:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13738:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "13730:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13730:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "13750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13698:73:4"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13789:0:4"
									},
									"scope": 1441,
									"src": "13669:122:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "14282:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "13797:361:4",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "14172:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14209:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "14201:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "14223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14251:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "14243:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14243:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14191:73:4"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14282:0:4"
									},
									"scope": 1441,
									"src": "14163:121:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1442,
							"src": "628:13658:4",
							"usedErrors": []
						}
					],
					"src": "107:14180:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2158
						],
						"IERC721": [
							1557
						]
					},
					"id": 1558,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1443,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1444,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 2159,
							"src": "133:47:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1446,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2158,
										"src": "271:7:5"
									},
									"id": 1447,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1557,
							"linearizedBaseContracts": [
								1557,
								2158
							],
							"name": "IERC721",
							"nameLocation": "260:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1456,
									"name": "Transfer",
									"nameLocation": "384:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "393:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "415:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "435:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:5"
									},
									"src": "378:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1465,
									"name": "Approval",
									"nameLocation": "571:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "580:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "603:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "629:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:5"
									},
									"src": "565:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1474,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "803:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "826:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "852:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:5"
									},
									"src": "782:85:5"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "973:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:5"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1011:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:5"
									},
									"scope": 1557,
									"src": "954:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "1187:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:5"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "1227:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:5"
									},
									"scope": 1557,
									"src": "1170:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "1844:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "1866:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "1911:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:5"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:5"
									},
									"scope": 1557,
									"src": "1809:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "2682:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "2704:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "2724:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:5"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:5"
									},
									"scope": 1557,
									"src": "2647:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "3301:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "3323:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "3343:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:5"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:5"
									},
									"scope": 1557,
									"src": "3270:104:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "3854:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "3866:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:5"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:5"
									},
									"scope": 1557,
									"src": "3837:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "4239:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "4257:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:5"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:5"
									},
									"scope": 1557,
									"src": "4212:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4453:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:5"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4493:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:5"
									},
									"scope": 1557,
									"src": "4432:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "4686:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "4701:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:5"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "4742:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1553,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:5"
									},
									"scope": 1557,
									"src": "4660:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1558,
							"src": "250:4500:5",
							"usedErrors": []
						}
					],
					"src": "108:4643:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1575
						]
					},
					"id": 1576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1559,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1560,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1575,
							"linearizedBaseContracts": [
								1575
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "859:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "885:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "907:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "932:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:6"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "976:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1571,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:6"
									},
									"scope": 1575,
									"src": "824:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1576,
							"src": "294:692:6",
							"usedErrors": []
						}
					],
					"src": "116:871:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							2158
						],
						"IERC721": [
							1557
						],
						"IERC721Metadata": [
							1602
						]
					},
					"id": 1603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1578,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1603,
							"sourceUnit": 1558,
							"src": "137:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1580,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1557,
										"src": "326:7:7"
									},
									"id": 1581,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1579,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1602,
							"linearizedBaseContracts": [
								1602,
								1557,
								2158
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:7"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "442:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:7"
									},
									"scope": 1602,
									"src": "403:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:7"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "569:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1590,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:7"
									},
									"scope": 1602,
									"src": "528:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "703:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:7"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "743:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:7"
									},
									"scope": 1602,
									"src": "685:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1603,
							"src": "297:463:7",
							"usedErrors": []
						}
					],
					"src": "112:649:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1897
						]
					},
					"id": 1898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1604,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1605,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1897,
							"linearizedBaseContracts": [
								1897
							],
							"name": "Address",
							"nameLocation": "202:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "1241:254:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1613,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1608,
																"src": "1465:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1612,
												"id": 1618,
												"nodeType": "Return",
												"src": "1458:30:8"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "1195:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:8"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "1235:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1610,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:8"
									},
									"scope": 1897,
									"src": "1175:320:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "2483:241:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1631,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1897",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1897",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1629,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1634,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "2526:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1628,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:8"
											},
											{
												"assignments": [
													1640,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1640,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1653,
														"src": "2578:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1639,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1647,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1641,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "2596:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1643,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "2618:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1649,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "2647:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:8"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2431:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2458:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:8"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:8"
									},
									"scope": 1897,
									"src": "2412:312:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "3555:84:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "3585:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "3593:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1664,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1671,
															1691
														],
														"referencedDeclaration": 1691,
														"src": "3572:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1663,
												"id": 1669,
												"nodeType": "Return",
												"src": "3565:67:8"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3488:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3504:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1658,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:8"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3541:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:8"
									},
									"scope": 1897,
									"src": "3466:173:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "4008:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1684,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "4047:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1685,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "4055:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1687,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "4064:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1683,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1711,
															1761
														],
														"referencedDeclaration": 1761,
														"src": "4025:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1682,
												"id": 1689,
												"nodeType": "Return",
												"src": "4018:59:8"
											}
										]
									},
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3892:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3916:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3943:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1677,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:8"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3994:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:8"
									},
									"scope": 1897,
									"src": "3861:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "4589:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1704,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "4628:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1705,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "4636:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1706,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "4642:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1703,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1711,
															1761
														],
														"referencedDeclaration": 1761,
														"src": "4606:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1702,
												"id": 1709,
												"nodeType": "Return",
												"src": "4599:94:8"
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "4486:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "4510:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1695,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "4537:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:8"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "4575:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1700,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:8"
									},
									"scope": 1897,
									"src": "4446:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "5127:320:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1728,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1897",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1897",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1726,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1731,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "5170:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1738,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "5247:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1737,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "5236:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:8"
											},
											{
												"assignments": [
													1744,
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "5300:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1743,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "5314:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1745,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"arguments": [
														{
															"id": 1751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "5367:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1747,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "5341:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1749,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "5360:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1755,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "5406:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1756,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "5415:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1757,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "5427:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1754,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "5389:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1759,
												"nodeType": "Return",
												"src": "5382:58:8"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "4988:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "5012:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "5039:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "5062:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1719,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:8"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "5113:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:8"
									},
									"scope": 1897,
									"src": "4948:499:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "5724:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1772,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "5760:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1773,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "5768:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1771,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1778,
															1813
														],
														"referencedDeclaration": 1813,
														"src": "5741:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1776,
												"nodeType": "Return",
												"src": "5734:80:8"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "5652:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "5668:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:8"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "5710:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:8"
									},
									"scope": 1897,
									"src": "5624:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "6163:228:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1792,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "6192:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1791,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "6181:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:8"
											},
											{
												"assignments": [
													1798,
													1800
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1812,
														"src": "6252:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1797,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1800,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1812,
														"src": "6266:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1799,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1805,
												"initialValue": {
													"arguments": [
														{
															"id": 1803,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "6311:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1801,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "6293:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1807,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "6350:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1808,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "6359:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1809,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "6371:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1806,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "6333:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1789,
												"id": 1811,
												"nodeType": "Return",
												"src": "6326:58:8"
											}
										]
									},
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6042:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6066:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6093:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:8"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6149:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:8"
									},
									"scope": 1897,
									"src": "6005:386:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "6667:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1824,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "6705:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1825,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "6713:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1823,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1830,
															1865
														],
														"referencedDeclaration": 1865,
														"src": "6684:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1822,
												"id": 1828,
												"nodeType": "Return",
												"src": "6677:84:8"
											}
										]
									},
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6600:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6616:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:8"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6653:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:8"
									},
									"scope": 1897,
									"src": "6570:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "7109:232:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1844,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "7138:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1843,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "7127:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:8"
											},
											{
												"assignments": [
													1850,
													1852
												],
												"declarations": [
													{
														"constant": false,
														"id": 1850,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "7200:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1849,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1852,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "7214:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1851,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1857,
												"initialValue": {
													"arguments": [
														{
															"id": 1855,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "7261:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1853,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "7241:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1859,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "7300:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1860,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "7309:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1861,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "7321:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1858,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "7283:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1841,
												"id": 1863,
												"nodeType": "Return",
												"src": "7276:58:8"
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "6993:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "7017:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "7044:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:8"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "7095:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:8"
									},
									"scope": 1897,
									"src": "6954:387:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "7721:532:8",
										"statements": [
											{
												"condition": {
													"id": 1877,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1868,
													"src": "7735:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1893,
													"nodeType": "Block",
													"src": "7792:455:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1881,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "7876:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1891,
																"nodeType": "Block",
																"src": "8184:53:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1888,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1872,
																					"src": "8209:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1887,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1890,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:8"
																	}
																]
															},
															"id": 1892,
															"nodeType": "IfStatement",
															"src": "7872:365:8",
															"trueBody": {
																"id": 1886,
																"nodeType": "Block",
																"src": "7899:279:8",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:8"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:8"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:8",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:8"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:8"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1870,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:8",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1870,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:8",
																				"valueSize": 1
																			}
																		],
																		"id": 1885,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:8"
																	}
																]
															}
														}
													]
												},
												"id": 1894,
												"nodeType": "IfStatement",
												"src": "7731:516:8",
												"trueBody": {
													"id": 1880,
													"nodeType": "Block",
													"src": "7744:42:8",
													"statements": [
														{
															"expression": {
																"id": 1878,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "7765:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1876,
															"id": 1879,
															"nodeType": "Return",
															"src": "7758:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:8",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "7596:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "7618:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "7651:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:8"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "7707:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:8"
									},
									"scope": 1897,
									"src": "7561:692:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1898,
							"src": "194:8061:8",
							"usedErrors": []
						}
					],
					"src": "101:8155:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1919
						]
					},
					"id": 1920,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1900,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1919,
							"linearizedBaseContracts": [
								1919
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1905,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1904,
												"id": 1907,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 1919,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1914,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1913,
												"id": 1916,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 1919,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1920,
							"src": "608:235:9",
							"usedErrors": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2122
						]
					},
					"id": 2123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1921,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1922,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2122,
							"linearizedBaseContracts": [
								2122
							],
							"name": "Strings",
							"nameLocation": "154:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1925,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2122,
									"src": "168:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1923,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1924,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "399:632:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1933,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "601:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1939,
												"nodeType": "IfStatement",
												"src": "597:51:10",
												"trueBody": {
													"id": 1938,
													"nodeType": "Block",
													"src": "613:35:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1932,
															"id": 1937,
															"nodeType": "Return",
															"src": "627:10:10"
														}
													]
												}
											},
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "657:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1943,
												"initialValue": {
													"id": 1942,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1928,
													"src": "672:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:10"
											},
											{
												"assignments": [
													1945
												],
												"declarations": [
													{
														"constant": false,
														"id": 1945,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "687:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1944,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1946,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:10"
											},
											{
												"body": {
													"id": 1957,
													"nodeType": "Block",
													"src": "729:57:10",
													"statements": [
														{
															"expression": {
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:10",
																"subExpression": {
																	"id": 1950,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "743:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1952,
															"nodeType": "ExpressionStatement",
															"src": "743:8:10"
														},
														{
															"expression": {
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1953,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "765:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1956,
															"nodeType": "ExpressionStatement",
															"src": "765:10:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1947,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "718:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1958,
												"nodeType": "WhileStatement",
												"src": "711:75:10"
											},
											{
												"assignments": [
													1960
												],
												"declarations": [
													{
														"constant": false,
														"id": 1960,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "795:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1959,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1965,
												"initialValue": {
													"arguments": [
														{
															"id": 1963,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "827:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1961,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:10"
											},
											{
												"body": {
													"id": 1996,
													"nodeType": "Block",
													"src": "863:131:10",
													"statements": [
														{
															"expression": {
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1969,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "877:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1972,
															"nodeType": "ExpressionStatement",
															"src": "877:11:10"
														},
														{
															"expression": {
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1973,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1960,
																		"src": "902:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1975,
																	"indexExpression": {
																		"id": 1974,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1945,
																		"src": "909:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1980,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1985,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1983,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1928,
																									"src": "945:5:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1984,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1982,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1981,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:10",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1986,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1978,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1976,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1991,
															"nodeType": "ExpressionStatement",
															"src": "902:56:10"
														},
														{
															"expression": {
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1992,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "972:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1995,
															"nodeType": "ExpressionStatement",
															"src": "972:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1966,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "851:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1997,
												"nodeType": "WhileStatement",
												"src": "844:150:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2000,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "1017:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1998,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1932,
												"id": 2002,
												"nodeType": "Return",
												"src": "1003:21:10"
											}
										]
									},
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "346:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:10"
									},
									"returnParameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "384:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1930,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:10"
									},
									"scope": 2122,
									"src": "328:703:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "1210:255:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2012,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2007,
														"src": "1224:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2018,
												"nodeType": "IfStatement",
												"src": "1220:54:10",
												"trueBody": {
													"id": 2017,
													"nodeType": "Block",
													"src": "1236:38:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 2011,
															"id": 2016,
															"nodeType": "Return",
															"src": "1250:13:10"
														}
													]
												}
											},
											{
												"assignments": [
													2020
												],
												"declarations": [
													{
														"constant": false,
														"id": 2020,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "1283:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"id": 2021,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2007,
													"src": "1298:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:10"
											},
											{
												"assignments": [
													2024
												],
												"declarations": [
													{
														"constant": false,
														"id": 2024,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "1313:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2026,
												"initialValue": {
													"hexValue": "30",
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:10"
											},
											{
												"body": {
													"id": 2037,
													"nodeType": "Block",
													"src": "1359:57:10",
													"statements": [
														{
															"expression": {
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:10",
																"subExpression": {
																	"id": 2030,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "1373:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2032,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:10"
														},
														{
															"expression": {
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2033,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "1395:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2036,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2027,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "1348:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2038,
												"nodeType": "WhileStatement",
												"src": "1341:75:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2040,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2007,
															"src": "1444:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2041,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "1451:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2039,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2045,
															2121
														],
														"referencedDeclaration": 2121,
														"src": "1432:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2011,
												"id": 2043,
												"nodeType": "Return",
												"src": "1425:33:10"
											}
										]
									},
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "1157:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:10"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "1195:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:10"
									},
									"scope": 2122,
									"src": "1136:329:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "1678:351:10",
										"statements": [
											{
												"assignments": [
													2056
												],
												"declarations": [
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2120,
														"src": "1688:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2055,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2065,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2060,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "1724:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2057,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:10"
											},
											{
												"expression": {
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2066,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "1745:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2068,
														"indexExpression": {
															"hexValue": "30",
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:10"
											},
											{
												"expression": {
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2072,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "1770:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2074,
														"indexExpression": {
															"hexValue": "31",
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:10"
											},
											{
												"body": {
													"id": 2106,
													"nodeType": "Block",
													"src": "1840:87:10",
													"statements": [
														{
															"expression": {
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2092,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "1854:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2094,
																	"indexExpression": {
																		"id": 2093,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "1861:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2095,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "1866:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2099,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2096,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2048,
																			"src": "1879:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2101,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:10"
														},
														{
															"expression": {
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2102,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "1905:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2105,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2086,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "1828:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2107,
												"initializationExpression": {
													"assignments": [
														2079
													],
													"declarations": [
														{
															"constant": false,
															"id": 2079,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2107,
															"src": "1800:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2085,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2081,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "1816:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:10"
												},
												"loopExpression": {
													"expression": {
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:10",
														"subExpression": {
															"id": 2089,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "1837:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2091,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:10"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2109,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "1944:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2114,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2117,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "2015:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2115,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2054,
												"id": 2119,
												"nodeType": "Return",
												"src": "2001:21:10"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1609:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1624:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:10"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1663:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2052,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:10"
									},
									"scope": 2122,
									"src": "1588:441:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2123,
							"src": "146:1885:10",
							"usedErrors": []
						}
					],
					"src": "86:1946:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2146
						],
						"IERC165": [
							2158
						]
					},
					"id": 2147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2147,
							"sourceUnit": 2159,
							"src": "124:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2127,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2158,
										"src": "754:7:11"
									},
									"id": 2128,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2126,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2146,
							"linearizedBaseContracts": [
								2146,
								2158
							],
							"name": "ERC165",
							"nameLocation": "744:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2157
									],
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "920:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2137,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "937:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2139,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "957:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2158_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2158_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2138,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2158",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2136,
												"id": 2143,
												"nodeType": "Return",
												"src": "930:47:11"
											}
										]
									},
									"documentation": {
										"id": 2129,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:11"
									},
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "856:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2130,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:11"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "914:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:11"
									},
									"scope": 2146,
									"src": "829:155:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2147,
							"src": "726:260:11",
							"usedErrors": []
						}
					],
					"src": "99:888:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2158
						]
					},
					"id": 2159,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2149,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2158,
							"linearizedBaseContracts": [
								2158
							],
							"name": "IERC165",
							"nameLocation": "415:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "801:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2151,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:12"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "844:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:12"
									},
									"scope": 2158,
									"src": "774:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2159,
							"src": "405:447:12",
							"usedErrors": []
						}
					],
					"src": "100:753:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2470
						]
					},
					"id": 2471,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2160,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2161,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:13",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2470,
							"linearizedBaseContracts": [
								2470
							],
							"name": "SafeMath",
							"nameLocation": "490:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "717:140:13",
										"statements": [
											{
												"id": 2191,
												"nodeType": "UncheckedBlock",
												"src": "727:124:13",
												"statements": [
													{
														"assignments": [
															2174
														],
														"declarations": [
															{
																"constant": false,
																"id": 2174,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2191,
																"src": "751:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2173,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2178,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2175,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2164,
																"src": "763:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2176,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "767:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2179,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "786:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2180,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2164,
																"src": "790:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2186,
														"nodeType": "IfStatement",
														"src": "782:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2184,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2172,
															"id": 2185,
															"nodeType": "Return",
															"src": "793:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2188,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "838:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2189,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2172,
														"id": 2190,
														"nodeType": "Return",
														"src": "824:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2162,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "657:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "668:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:13"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "702:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "708:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:13"
									},
									"scope": 2470,
									"src": "641:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "1078:113:13",
										"statements": [
											{
												"id": 2219,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2205,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "1116:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2206,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "1120:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2212,
														"nodeType": "IfStatement",
														"src": "1112:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2210,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2204,
															"id": 2211,
															"nodeType": "Return",
															"src": "1123:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2214,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "1168:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2215,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2198,
																		"src": "1172:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2217,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2204,
														"id": 2218,
														"nodeType": "Return",
														"src": "1154:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1018:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1029:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:13"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1063:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1069:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:13"
									},
									"scope": 2470,
									"src": "1002:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "1415:417:13",
										"statements": [
											{
												"id": 2261,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2233,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "1683:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2240,
														"nodeType": "IfStatement",
														"src": "1679:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2238,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2232,
															"id": 2239,
															"nodeType": "Return",
															"src": "1691:16:13"
														}
													},
													{
														"assignments": [
															2242
														],
														"declarations": [
															{
																"constant": false,
																"id": 2242,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "1721:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2241,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2246,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2243,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "1733:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2244,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "1737:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2247,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "1756:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2248,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "1760:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2250,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "1765:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2256,
														"nodeType": "IfStatement",
														"src": "1752:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2254,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2232,
															"id": 2255,
															"nodeType": "Return",
															"src": "1768:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2258,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "1813:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2259,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2232,
														"id": 2260,
														"nodeType": "Return",
														"src": "1799:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "1355:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "1366:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:13"
									},
									"returnParameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "1400:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "1406:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:13"
									},
									"scope": 2470,
									"src": "1339:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "2057:114:13",
										"statements": [
											{
												"id": 2289,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2275,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2268,
																"src": "2095:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2282,
														"nodeType": "IfStatement",
														"src": "2091:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2280,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2274,
															"id": 2281,
															"nodeType": "Return",
															"src": "2103:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2284,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2266,
																		"src": "2148:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2285,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "2152:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2287,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2274,
														"id": 2288,
														"nodeType": "Return",
														"src": "2134:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1997:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2008:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:13"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2042:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2048:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:13"
									},
									"scope": 2470,
									"src": "1981:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2318,
										"nodeType": "Block",
										"src": "2406:114:13",
										"statements": [
											{
												"id": 2317,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2303,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2296,
																"src": "2444:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2310,
														"nodeType": "IfStatement",
														"src": "2440:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2308,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2302,
															"id": 2309,
															"nodeType": "Return",
															"src": "2452:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2312,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2294,
																		"src": "2497:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2313,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2296,
																		"src": "2501:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2315,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2302,
														"id": 2316,
														"nodeType": "Return",
														"src": "2483:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "2346:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "2357:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:13"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "2391:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "2397:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:13"
									},
									"scope": 2470,
									"src": "2330:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "2822:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2329,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "2839:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2330,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2324,
														"src": "2843:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2328,
												"id": 2332,
												"nodeType": "Return",
												"src": "2832:12:13"
											}
										]
									},
									"documentation": {
										"id": 2320,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:13",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "2768:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "2779:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:13"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "2813:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:13"
									},
									"scope": 2470,
									"src": "2755:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "3189:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2344,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "3206:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2345,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "3210:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2343,
												"id": 2347,
												"nodeType": "Return",
												"src": "3199:12:13"
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:13",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3135:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3146:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:13"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3180:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:13"
									},
									"scope": 2470,
									"src": "3122:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2363,
										"nodeType": "Block",
										"src": "3532:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2359,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2352,
														"src": "3549:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2360,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2354,
														"src": "3553:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2358,
												"id": 2362,
												"nodeType": "Return",
												"src": "3542:12:13"
											}
										]
									},
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:13",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3478:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3489:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:13"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3523:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:13"
									},
									"scope": 2470,
									"src": "3465:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2378,
										"nodeType": "Block",
										"src": "3917:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2374,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "3934:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2375,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "3938:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2373,
												"id": 2377,
												"nodeType": "Return",
												"src": "3927:12:13"
											}
										]
									},
									"documentation": {
										"id": 2365,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:13",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "3863:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "3874:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:13"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "3908:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:13"
									},
									"scope": 2470,
									"src": "3850:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "4466:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2389,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2382,
														"src": "4483:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2390,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "4487:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2388,
												"id": 2392,
												"nodeType": "Return",
												"src": "4476:12:13"
											}
										]
									},
									"documentation": {
										"id": 2380,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "4412:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "4423:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:13"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "4457:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:13"
									},
									"scope": 2470,
									"src": "4399:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2418,
										"nodeType": "Block",
										"src": "5084:106:13",
										"statements": [
											{
												"id": 2417,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2407,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "5126:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2408,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2397,
																		"src": "5131:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2410,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "5134:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2406,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2412,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2413,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2397,
																"src": "5168:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2414,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "5172:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2405,
														"id": 2416,
														"nodeType": "Return",
														"src": "5161:12:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:13",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "4981:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "5000:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "5019:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:13"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "5075:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:13"
									},
									"scope": 2470,
									"src": "4959:231:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2443,
										"nodeType": "Block",
										"src": "5799:105:13",
										"statements": [
											{
												"id": 2442,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2432,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2424,
																		"src": "5841:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2435,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "5848:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2431,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2437,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2438,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2422,
																"src": "5882:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2439,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2424,
																"src": "5886:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2430,
														"id": 2441,
														"nodeType": "Return",
														"src": "5875:12:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2420,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:13",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "5696:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "5715:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "5734:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:13"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "5790:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:13"
									},
									"scope": 2470,
									"src": "5674:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2468,
										"nodeType": "Block",
										"src": "6675:105:13",
										"statements": [
											{
												"id": 2467,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2457,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2449,
																		"src": "6717:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2460,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2451,
																	"src": "6724:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2456,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2462,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2463,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "6758:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2464,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "6762:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2455,
														"id": 2466,
														"nodeType": "Return",
														"src": "6751:12:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2445,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "6572:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "6591:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "6610:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:13"
									},
									"returnParameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "6666:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:13"
									},
									"scope": 2470,
									"src": "6550:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2471,
							"src": "482:6300:13",
							"usedErrors": []
						}
					],
					"src": "107:6676:13"
				},
				"id": 13
			},
			"CLstaking.sol": {
				"ast": {
					"absolutePath": "CLstaking.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Address": [
							1897
						],
						"Context": [
							1919
						],
						"CyberlionStaking": [
							3134
						],
						"ERC165": [
							2146
						],
						"ERC721": [
							1441
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							2158
						],
						"IERC20": [
							575
						],
						"IERC721": [
							1557
						],
						"IERC721Metadata": [
							1602
						],
						"IERC721Receiver": [
							1575
						],
						"Mintable": [
							2497
						],
						"Ownable": [
							497
						],
						"SafeMath": [
							2470
						],
						"Strings": [
							2122
						]
					},
					"id": 3135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2472,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2473,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3135,
							"sourceUnit": 2471,
							"src": "59:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2474,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3135,
							"sourceUnit": 498,
							"src": "117:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3135,
							"sourceUnit": 1442,
							"src": "170:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2476,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3135,
							"sourceUnit": 1558,
							"src": "228:58:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2477,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3135,
							"sourceUnit": 576,
							"src": "287:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2478,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3135,
							"sourceUnit": 320,
							"src": "344:58:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Mintable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2497,
							"linearizedBaseContracts": [
								2497
							],
							"name": "Mintable",
							"nameLocation": "415:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 2485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "438:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "451:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "443:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "463:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "455:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:28:14"
									},
									"returnParameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:0:14"
									},
									"scope": 2497,
									"src": "429:51:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "493:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "514:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "506:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "530:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "522:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "549:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "541:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:51:14"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "574:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "574:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:6:14"
									},
									"scope": 2497,
									"src": "484:96:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3135,
							"src": "405:177:14",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2498,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 497,
										"src": "613:7:14"
									},
									"id": 2499,
									"nodeType": "InheritanceSpecifier",
									"src": "613:7:14"
								},
								{
									"baseName": {
										"id": 2500,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "622:13:14"
									},
									"id": 2501,
									"nodeType": "InheritanceSpecifier",
									"src": "622:13:14"
								}
							],
							"canonicalName": "CyberlionStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3134,
							"linearizedBaseContracts": [
								3134,
								319,
								2146,
								2158,
								392,
								497,
								1919
							],
							"name": "CyberlionStaking",
							"nameLocation": "593:16:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "75b238fc",
									"id": 2506,
									"mutability": "mutable",
									"name": "ADMIN_ROLE",
									"nameLocation": "657:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 3134,
									"src": "642:46:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2502,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "642:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e",
												"id": 2504,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "680:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												},
												"value": "ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												}
											],
											"id": 2503,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "670:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2505,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "670:18:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"global": false,
									"id": 2509,
									"libraryName": {
										"id": 2507,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2470,
										"src": "700:8:14"
									},
									"nodeType": "UsingForDirective",
									"src": "694:27:14",
									"typeName": {
										"id": 2508,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2512,
									"libraryName": {
										"id": 2510,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1897,
										"src": "733:7:14"
									},
									"nodeType": "UsingForDirective",
									"src": "727:26:14",
									"typeName": {
										"id": 2511,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "745:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 2515,
									"mutability": "constant",
									"name": "_ERC721_RECEIVED",
									"nameLocation": "783:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 3134,
									"src": "759:53:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 2513,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "759:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783135306237613032",
										"id": 2514,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "802:10:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_353073666_by_1",
											"typeString": "int_const 353073666"
										},
										"value": "0x150b7a02"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2522,
									"mutability": "constant",
									"name": "SECONDS_PER_DAY",
									"nameLocation": "835:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 3134,
									"src": "818:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2516,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"id": 2521,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1440_by_1",
												"typeString": "int_const 1440"
											},
											"id": 2519,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3234",
												"id": 2517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "853:2:14",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3630",
												"id": 2518,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "856:2:14",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_60_by_1",
													"typeString": "int_const 60"
												},
												"value": "60"
											},
											"src": "853:5:14",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1440_by_1",
												"typeString": "int_const 1440"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3630",
											"id": 2520,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "859:2:14",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"src": "853:8:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2524,
									"mutability": "mutable",
									"name": "rewardsTokenAddress",
									"nameLocation": "875:19:14",
									"nodeType": "VariableDeclaration",
									"scope": 3134,
									"src": "867:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2523,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "867:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "CyberlionStaking.CollectionInfo",
									"id": 2531,
									"members": [
										{
											"constant": false,
											"id": 2526,
											"mutability": "mutable",
											"name": "collectionAddress",
											"nameLocation": "945:17:14",
											"nodeType": "VariableDeclaration",
											"scope": 2531,
											"src": "937:25:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2525,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "937:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2528,
											"mutability": "mutable",
											"name": "rewardPerDay",
											"nameLocation": "980:12:14",
											"nodeType": "VariableDeclaration",
											"scope": 2531,
											"src": "972:20:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2527,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "972:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2530,
											"mutability": "mutable",
											"name": "totalAmountStaked",
											"nameLocation": "1010:17:14",
											"nodeType": "VariableDeclaration",
											"scope": 2531,
											"src": "1002:25:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2529,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1002:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectionInfo",
									"nameLocation": "912:14:14",
									"nodeType": "StructDefinition",
									"scope": 3134,
									"src": "905:129:14",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2538,
									"mutability": "mutable",
									"name": "addressToStakedTokens",
									"nameLocation": "1087:21:14",
									"nodeType": "VariableDeclaration",
									"scope": 3134,
									"src": "1040:68:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(address => mapping(address => uint256[]))"
									},
									"typeName": {
										"id": 2537,
										"keyType": {
											"id": 2532,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1048:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1040:46:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(address => mapping(address => uint256[]))"
										},
										"valueType": {
											"id": 2536,
											"keyType": {
												"id": 2533,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1067:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1059:26:14",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(address => uint256[])"
											},
											"valueType": {
												"baseType": {
													"id": 2534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1078:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2535,
												"nodeType": "ArrayTypeName",
												"src": "1078:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2544,
									"mutability": "mutable",
									"name": "contractTokenIdToOwner",
									"nameLocation": "1159:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 3134,
									"src": "1114:67:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
										"typeString": "mapping(address => mapping(uint256 => address))"
									},
									"typeName": {
										"id": 2543,
										"keyType": {
											"id": 2539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1122:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1114:44:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
											"typeString": "mapping(address => mapping(uint256 => address))"
										},
										"valueType": {
											"id": 2542,
											"keyType": {
												"id": 2540,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1141:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1133:24:14",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"valueType": {
												"id": 2541,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1149:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2550,
									"mutability": "mutable",
									"name": "contractTokenIdToStakedTimestamp",
									"nameLocation": "1229:32:14",
									"nodeType": "VariableDeclaration",
									"scope": 3134,
									"src": "1187:74:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 2549,
										"keyType": {
											"id": 2545,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1195:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1187:41:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 2548,
											"keyType": {
												"id": 2546,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1214:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1206:21:14",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 2547,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1222:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0fb4d2e5",
									"id": 2554,
									"mutability": "mutable",
									"name": "collectionInfo",
									"nameLocation": "1292:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 3134,
									"src": "1268:38:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage",
										"typeString": "struct CyberlionStaking.CollectionInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 2552,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2551,
												"name": "CollectionInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2531,
												"src": "1268:14:14"
											},
											"referencedDeclaration": 2531,
											"src": "1268:14:14",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
												"typeString": "struct CyberlionStaking.CollectionInfo"
											}
										},
										"id": 2553,
										"nodeType": "ArrayTypeName",
										"src": "1268:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage_ptr",
											"typeString": "struct CyberlionStaking.CollectionInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2575,
										"nodeType": "Block",
										"src": "1348:148:14",
										"statements": [
											{
												"expression": {
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2559,
														"name": "rewardsTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2524,
														"src": "1358:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2560,
														"name": "_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "1380:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1358:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2562,
												"nodeType": "ExpressionStatement",
												"src": "1358:35:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2564,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1414:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2565,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1434:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1434:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2563,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1403:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:42:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2568,
												"nodeType": "ExpressionStatement",
												"src": "1403:42:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2570,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2506,
															"src": "1466:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2571,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1478:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1478:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2569,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1455:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:34:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2574,
												"nodeType": "ExpressionStatement",
												"src": "1455:34:14"
											}
										]
									},
									"id": 2576,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "1333:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "1325:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:23:14"
									},
									"returnParameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:14"
									},
									"scope": 3134,
									"src": "1313:183:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2589,
										"nodeType": "Block",
										"src": "1574:46:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2585,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2506,
															"src": "1595:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2586,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "1607:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2584,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1584:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1584:29:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2588,
												"nodeType": "ExpressionStatement",
												"src": "1584:29:14"
											}
										]
									},
									"functionSelector": "4adc7cfd",
									"id": 2590,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2581,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1555:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2580,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1546:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1546:28:14"
										}
									],
									"name": "setAdminRole",
									"nameLocation": "1511:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1532:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "1524:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1523:15:14"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1574:0:14"
									},
									"scope": 3134,
									"src": "1502:118:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2602,
										"nodeType": "Block",
										"src": "1691:49:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2598,
															"name": "_collectionID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "1709:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2599,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "1724:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2597,
														"name": "_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2669,
														"src": "1701:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1701:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2601,
												"nodeType": "ExpressionStatement",
												"src": "1701:32:14"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 2603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1635:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "1649:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "1641:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1672:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "1664:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:41:14"
									},
									"returnParameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1691:0:14"
									},
									"scope": 3134,
									"src": "1626:114:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2668,
										"nodeType": "Block",
										"src": "1834:747:14",
										"statements": [
											{
												"assignments": [
													2612
												],
												"declarations": [
													{
														"constant": false,
														"id": 2612,
														"mutability": "mutable",
														"name": "collection",
														"nameLocation": "1867:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2668,
														"src": "1844:33:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
															"typeString": "struct CyberlionStaking.CollectionInfo"
														},
														"typeName": {
															"id": 2611,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2610,
																"name": "CollectionInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2531,
																"src": "1844:14:14"
															},
															"referencedDeclaration": 2531,
															"src": "1844:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2616,
												"initialValue": {
													"baseExpression": {
														"id": 2613,
														"name": "collectionInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "1880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage",
															"typeString": "struct CyberlionStaking.CollectionInfo storage ref[] storage ref"
														}
													},
													"id": 2615,
													"indexExpression": {
														"id": 2614,
														"name": "_collectionID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "1895:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1880:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage",
														"typeString": "struct CyberlionStaking.CollectionInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1844:65:14"
											},
											{
												"expression": {
													"id": 2625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2617,
																"name": "contractTokenIdToOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "1988:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
																	"typeString": "mapping(address => mapping(uint256 => address))"
																}
															},
															"id": 2621,
															"indexExpression": {
																"expression": {
																	"id": 2618,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "2011:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																		"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																	}
																},
																"id": 2619,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "collectionAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2526,
																"src": "2011:28:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1988:52:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2622,
														"indexExpression": {
															"id": 2620,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "2041:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1988:62:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2623,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2053:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2053:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1988:75:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2626,
												"nodeType": "ExpressionStatement",
												"src": "1988:75:14"
											},
											{
												"expression": {
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2627,
																"name": "contractTokenIdToStakedTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2550,
																"src": "2112:32:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2631,
															"indexExpression": {
																"expression": {
																	"id": 2628,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "2145:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																		"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																	}
																},
																"id": 2629,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "collectionAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2526,
																"src": "2145:28:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2112:62:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2632,
														"indexExpression": {
															"id": 2630,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "2175:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2112:72:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2633,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2187:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2187:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2112:90:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2636,
												"nodeType": "ExpressionStatement",
												"src": "2112:90:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2645,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "2364:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2637,
																	"name": "addressToStakedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2538,
																	"src": "2295:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(address => mapping(address => uint256[] storage ref))"
																	}
																},
																"id": 2642,
																"indexExpression": {
																	"expression": {
																		"id": 2638,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2612,
																		"src": "2317:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																			"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																		}
																	},
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "collectionAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2526,
																	"src": "2317:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2295:51:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 2643,
															"indexExpression": {
																"expression": {
																	"id": 2640,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2347:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2347:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2295:63:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2295:68:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2295:78:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "2295:78:14"
											},
											{
												"expression": {
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2648,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "2384:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
															}
														},
														"id": 2650,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalAmountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2530,
														"src": "2384:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2416:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2384:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2653,
												"nodeType": "ExpressionStatement",
												"src": "2384:33:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2659,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2538:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2538:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2663,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2558:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CyberlionStaking_$3134",
																		"typeString": "contract CyberlionStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CyberlionStaking_$3134",
																		"typeString": "contract CyberlionStaking"
																	}
																],
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2550:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2661,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2550:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2665,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "2565:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2655,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2612,
																		"src": "2495:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																			"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																		}
																	},
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "collectionAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2526,
																	"src": "2495:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2654,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "2487:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1557_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 2657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2487:37:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1557",
																"typeString": "contract IERC721"
															}
														},
														"id": 2658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1522,
														"src": "2487:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2487:87:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2667,
												"nodeType": "ExpressionStatement",
												"src": "2487:87:14"
											}
										]
									},
									"id": 2669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "1755:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "1779:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "1771:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1810:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "1802:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:63:14"
									},
									"returnParameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:14"
									},
									"scope": 3134,
									"src": "1746:835:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "2667:123:14",
										"statements": [
											{
												"body": {
													"id": 2695,
													"nodeType": "Block",
													"src": "2724:60:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2689,
																		"name": "_collectionID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2671,
																		"src": "2745:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2690,
																			"name": "_tokenIDs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "2760:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2692,
																		"indexExpression": {
																			"id": 2691,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2678,
																			"src": "2770:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2760:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2688,
																	"name": "_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "2738:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2694,
															"nodeType": "ExpressionStatement",
															"src": "2738:35:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2681,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2678,
														"src": "2697:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2682,
															"name": "_tokenIDs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2674,
															"src": "2701:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2701:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2697:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2696,
												"initializationExpression": {
													"assignments": [
														2678
													],
													"declarations": [
														{
															"constant": false,
															"id": 2678,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2690:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2696,
															"src": "2682:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2677,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2682:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2680,
													"initialValue": {
														"hexValue": "30",
														"id": 2679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2694:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2682:13:14"
												},
												"loopExpression": {
													"expression": {
														"id": 2686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2719:3:14",
														"subExpression": {
															"id": 2685,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2678,
															"src": "2721:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2687,
													"nodeType": "ExpressionStatement",
													"src": "2719:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2677:107:14"
											}
										]
									},
									"functionSelector": "1bbda52b",
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchStake",
									"nameLocation": "2596:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "2615:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "2607:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "_tokenIDs",
												"nameLocation": "2647:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "2630:26:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2672,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2630:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2673,
													"nodeType": "ArrayTypeName",
													"src": "2630:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:51:14"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:14"
									},
									"scope": 3134,
									"src": "2587:203:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2726,
										"nodeType": "Block",
										"src": "2878:125:14",
										"statements": [
											{
												"body": {
													"id": 2724,
													"nodeType": "Block",
													"src": "2935:62:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2718,
																		"name": "_collectionID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2700,
																		"src": "2958:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2719,
																			"name": "_tokenIDs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "2973:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2721,
																		"indexExpression": {
																			"id": 2720,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2983:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2973:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2717,
																	"name": "_unstake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2838,
																	"src": "2949:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2949:37:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2723,
															"nodeType": "ExpressionStatement",
															"src": "2949:37:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2710,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2707,
														"src": "2908:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2711,
															"name": "_tokenIDs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "2912:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2912:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2908:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2725,
												"initializationExpression": {
													"assignments": [
														2707
													],
													"declarations": [
														{
															"constant": false,
															"id": 2707,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2901:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2725,
															"src": "2893:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2706,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2893:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2709,
													"initialValue": {
														"hexValue": "30",
														"id": 2708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2905:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2893:13:14"
												},
												"loopExpression": {
													"expression": {
														"id": 2715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2930:3:14",
														"subExpression": {
															"id": 2714,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2932:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2716,
													"nodeType": "ExpressionStatement",
													"src": "2930:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2888:109:14"
											}
										]
									},
									"functionSelector": "008afd4e",
									"id": 2727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchUnstake",
									"nameLocation": "2805:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "2826:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "2818:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2818:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "_tokenIDs",
												"nameLocation": "2858:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "2841:26:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2701,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2702,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2817:51:14"
									},
									"returnParameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2878:0:14"
									},
									"scope": 3134,
									"src": "2796:207:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "3076:50:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2735,
															"name": "_collectionID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "3095:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2736,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2731,
															"src": "3110:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2734,
														"name": "_unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2838,
														"src": "3086:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3086:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2738,
												"nodeType": "ExpressionStatement",
												"src": "3086:33:14"
											}
										]
									},
									"functionSelector": "9e2c8a5b",
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "3018:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "3034:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "3026:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "3057:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "3049:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3049:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3025:41:14"
									},
									"returnParameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3076:0:14"
									},
									"scope": 3134,
									"src": "3009:117:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2755,
										"nodeType": "Block",
										"src": "3180:65:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2750,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3225:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3225:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3236:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2747,
																	"name": "rewardsTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2524,
																	"src": "3199:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2746,
																"name": "Mintable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2497,
																"src": "3190:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Mintable_$2497_$",
																	"typeString": "type(contract Mintable)"
																}
															},
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3190:29:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Mintable_$2497",
																"typeString": "contract Mintable"
															}
														},
														"id": 2749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2485,
														"src": "3190:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3190:48:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2754,
												"nodeType": "ExpressionStatement",
												"src": "3190:48:14"
											}
										]
									},
									"functionSelector": "66675aa9",
									"id": 2756,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2743,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2506,
													"src": "3168:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2744,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2742,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "3159:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3159:20:14"
										}
									],
									"name": "mintTest",
									"nameLocation": "3141:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3149:2:14"
									},
									"returnParameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3180:0:14"
									},
									"scope": 3134,
									"src": "3132:113:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2837,
										"nodeType": "Block",
										"src": "3341:894:14",
										"statements": [
											{
												"assignments": [
													2765
												],
												"declarations": [
													{
														"constant": false,
														"id": 2765,
														"mutability": "mutable",
														"name": "collection",
														"nameLocation": "3374:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2837,
														"src": "3351:33:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
															"typeString": "struct CyberlionStaking.CollectionInfo"
														},
														"typeName": {
															"id": 2764,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2763,
																"name": "CollectionInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2531,
																"src": "3351:14:14"
															},
															"referencedDeclaration": 2531,
															"src": "3351:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2769,
												"initialValue": {
													"baseExpression": {
														"id": 2766,
														"name": "collectionInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "3387:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage",
															"typeString": "struct CyberlionStaking.CollectionInfo storage ref[] storage ref"
														}
													},
													"id": 2768,
													"indexExpression": {
														"id": 2767,
														"name": "_collectionID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2758,
														"src": "3402:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3387:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage",
														"typeString": "struct CyberlionStaking.CollectionInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3351:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2771,
																		"name": "contractTokenIdToOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "3435:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
																			"typeString": "mapping(address => mapping(uint256 => address))"
																		}
																	},
																	"id": 2774,
																	"indexExpression": {
																		"expression": {
																			"id": 2772,
																			"name": "collection",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2765,
																			"src": "3458:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																				"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																			}
																		},
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "collectionAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2526,
																		"src": "3458:28:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3435:52:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 2776,
																"indexExpression": {
																	"id": 2775,
																	"name": "_tokenID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2760,
																	"src": "3488:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3435:62:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2777,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3501:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3501:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3435:76:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e206973206e6f74207374616b6564206f722073656e64657220646f6573206e6f74206f776e206974",
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3525:47:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_121e532a745289a4d8fbe9c70c44deae0d657d32c56bdcb669a134e31fbbd902",
																"typeString": "literal_string \"token is not staked or sender does not own it\""
															},
															"value": "token is not staked or sender does not own it"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_121e532a745289a4d8fbe9c70c44deae0d657d32c56bdcb669a134e31fbbd902",
																"typeString": "literal_string \"token is not staked or sender does not own it\""
															}
														],
														"id": 2770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3427:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3427:155:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2782,
												"nodeType": "ExpressionStatement",
												"src": "3427:155:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2784,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3606:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3606:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2786,
															"name": "_collectionID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2758,
															"src": "3618:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2787,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2760,
															"src": "3633:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2783,
														"name": "_claimReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2978,
														"src": "3593:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3593:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2789,
												"nodeType": "ExpressionStatement",
												"src": "3593:49:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2791,
																	"name": "addressToStakedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2538,
																	"src": "3729:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(address => mapping(address => uint256[] storage ref))"
																	}
																},
																"id": 2794,
																"indexExpression": {
																	"expression": {
																		"id": 2792,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2765,
																		"src": "3751:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																			"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																		}
																	},
																	"id": 2793,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "collectionAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2526,
																	"src": "3751:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3729:51:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 2797,
															"indexExpression": {
																"expression": {
																	"id": 2795,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3781:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3781:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3729:63:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 2798,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2760,
															"src": "3794:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2790,
														"name": "_removeElement",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3133,
														"src": "3714:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3714:89:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2800,
												"nodeType": "ExpressionStatement",
												"src": "3714:89:14"
											},
											{
												"expression": {
													"id": 2807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3865:69:14",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2801,
																"name": "contractTokenIdToOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "3872:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
																	"typeString": "mapping(address => mapping(uint256 => address))"
																}
															},
															"id": 2804,
															"indexExpression": {
																"expression": {
																	"id": 2802,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "3895:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																		"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																	}
																},
																"id": 2803,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "collectionAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2526,
																"src": "3895:28:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3872:52:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2806,
														"indexExpression": {
															"id": 2805,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2760,
															"src": "3925:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3872:62:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2808,
												"nodeType": "ExpressionStatement",
												"src": "3865:69:14"
											},
											{
												"expression": {
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3998:79:14",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2809,
																"name": "contractTokenIdToStakedTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2550,
																"src": "4005:32:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2812,
															"indexExpression": {
																"expression": {
																	"id": 2810,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "4038:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																		"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																	}
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "collectionAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2526,
																"src": "4038:28:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4005:62:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2814,
														"indexExpression": {
															"id": 2813,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2760,
															"src": "4068:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4005:72:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2816,
												"nodeType": "ExpressionStatement",
												"src": "3998:79:14"
											},
											{
												"expression": {
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2817,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "4088:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
															}
														},
														"id": 2819,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalAmountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2530,
														"src": "4088:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4120:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4088:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2822,
												"nodeType": "ExpressionStatement",
												"src": "4088:33:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2830,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4191:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CyberlionStaking_$3134",
																		"typeString": "contract CyberlionStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CyberlionStaking_$3134",
																		"typeString": "contract CyberlionStaking"
																	}
																],
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4183:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2828,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4183:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4183:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2832,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4198:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4198:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2834,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2760,
															"src": "4210:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2824,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2765,
																		"src": "4140:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																			"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																		}
																	},
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "collectionAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2526,
																	"src": "4140:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2823,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "4132:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1557_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4132:37:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1557",
																"typeString": "contract IERC721"
															}
														},
														"id": 2827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1522,
														"src": "4132:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4132:87:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2836,
												"nodeType": "ExpressionStatement",
												"src": "4132:87:14"
											}
										]
									},
									"id": 2838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unstake",
									"nameLocation": "3260:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "3286:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "3278:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "3317:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "3309:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3309:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3268:63:14"
									},
									"returnParameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:0:14"
									},
									"scope": 3134,
									"src": "3251:984:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2894,
										"nodeType": "Block",
										"src": "4345:440:14",
										"statements": [
											{
												"assignments": [
													2848
												],
												"declarations": [
													{
														"constant": false,
														"id": 2848,
														"mutability": "mutable",
														"name": "payableAmount",
														"nameLocation": "4363:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2894,
														"src": "4355:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4355:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2850,
												"initialValue": {
													"hexValue": "30",
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4379:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4355:25:14"
											},
											{
												"assignments": [
													2852
												],
												"declarations": [
													{
														"constant": false,
														"id": 2852,
														"mutability": "mutable",
														"name": "collectionAddress",
														"nameLocation": "4398:17:14",
														"nodeType": "VariableDeclaration",
														"scope": 2894,
														"src": "4390:25:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4390:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2857,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2853,
															"name": "collectionInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2554,
															"src": "4418:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage",
																"typeString": "struct CyberlionStaking.CollectionInfo storage ref[] storage ref"
															}
														},
														"id": 2855,
														"indexExpression": {
															"id": 2854,
															"name": "_collectionID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2842,
															"src": "4433:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4418:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage",
															"typeString": "struct CyberlionStaking.CollectionInfo storage ref"
														}
													},
													"id": 2856,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "collectionAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2526,
													"src": "4418:47:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4390:75:14"
											},
											{
												"body": {
													"id": 2890,
													"nodeType": "Block",
													"src": "4563:186:14",
													"statements": [
														{
															"assignments": [
																2873
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2873,
																	"mutability": "mutable",
																	"name": "_tokenId",
																	"nameLocation": "4585:8:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2890,
																	"src": "4577:16:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2872,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4577:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2881,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2874,
																			"name": "addressToStakedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2538,
																			"src": "4596:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
																				"typeString": "mapping(address => mapping(address => uint256[] storage ref))"
																			}
																		},
																		"id": 2876,
																		"indexExpression": {
																			"id": 2875,
																			"name": "collectionAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "4618:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4596:40:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 2878,
																	"indexExpression": {
																		"id": 2877,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "4637:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4596:54:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 2880,
																"indexExpression": {
																	"id": 2879,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2859,
																	"src": "4651:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4596:57:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4577:76:14"
														},
														{
															"expression": {
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2882,
																	"name": "payableAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2848,
																	"src": "4667:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2884,
																			"name": "_userAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2840,
																			"src": "4700:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2885,
																			"name": "_collectionID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2842,
																			"src": "4714:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2886,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "4729:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2883,
																		"name": "claimableReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2951,
																		"src": "4684:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256,uint256) view returns (uint256)"
																		}
																	},
																	"id": 2887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4684:54:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4667:71:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2889,
															"nodeType": "ExpressionStatement",
															"src": "4667:71:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2861,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2859,
														"src": "4491:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2862,
																	"name": "addressToStakedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2538,
																	"src": "4495:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(address => mapping(address => uint256[] storage ref))"
																	}
																},
																"id": 2864,
																"indexExpression": {
																	"id": 2863,
																	"name": "collectionAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "4517:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4495:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 2866,
															"indexExpression": {
																"id": 2865,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "4536:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4495:54:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4495:61:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4491:65:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2891,
												"initializationExpression": {
													"assignments": [
														2859
													],
													"declarations": [
														{
															"constant": false,
															"id": 2859,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4488:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2891,
															"src": "4480:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2858,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4480:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2860,
													"nodeType": "VariableDeclarationStatement",
													"src": "4480:9:14"
												},
												"loopExpression": {
													"expression": {
														"id": 2870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4558:3:14",
														"subExpression": {
															"id": 2869,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "4558:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2871,
													"nodeType": "ExpressionStatement",
													"src": "4558:3:14"
												},
												"nodeType": "ForStatement",
												"src": "4475:274:14"
											},
											{
												"expression": {
													"id": 2892,
													"name": "payableAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2848,
													"src": "4765:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2846,
												"id": 2893,
												"nodeType": "Return",
												"src": "4758:20:14"
											}
										]
									},
									"functionSelector": "3b552dbd",
									"id": 2895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalClaimableReward",
									"nameLocation": "4250:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "4279:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "4271:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "4301:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "4293:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4270:45:14"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "4336:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4335:9:14"
									},
									"scope": 3134,
									"src": "4241:544:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2950,
										"nodeType": "Block",
										"src": "4908:518:14",
										"statements": [
											{
												"assignments": [
													2908
												],
												"declarations": [
													{
														"constant": false,
														"id": 2908,
														"mutability": "mutable",
														"name": "collection",
														"nameLocation": "4941:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "4918:33:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
															"typeString": "struct CyberlionStaking.CollectionInfo"
														},
														"typeName": {
															"id": 2907,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2906,
																"name": "CollectionInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2531,
																"src": "4918:14:14"
															},
															"referencedDeclaration": 2531,
															"src": "4918:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2912,
												"initialValue": {
													"baseExpression": {
														"id": 2909,
														"name": "collectionInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "4954:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage",
															"typeString": "struct CyberlionStaking.CollectionInfo storage ref[] storage ref"
														}
													},
													"id": 2911,
													"indexExpression": {
														"id": 2910,
														"name": "_collectionID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "4969:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4954:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage",
														"typeString": "struct CyberlionStaking.CollectionInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4918:65:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2913,
																"name": "contractTokenIdToOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "5050:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
																	"typeString": "mapping(address => mapping(uint256 => address))"
																}
															},
															"id": 2916,
															"indexExpression": {
																"expression": {
																	"id": 2914,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2908,
																	"src": "5073:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																		"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																	}
																},
																"id": 2915,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "collectionAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2526,
																"src": "5073:28:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5050:52:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2918,
														"indexExpression": {
															"id": 2917,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "5103:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5050:62:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2919,
														"name": "_userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "5116:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5050:78:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2923,
												"nodeType": "IfStatement",
												"src": "5047:101:14",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 2921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5147:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2905,
													"id": 2922,
													"nodeType": "Return",
													"src": "5140:8:14"
												}
											},
											{
												"assignments": [
													2925
												],
												"declarations": [
													{
														"constant": false,
														"id": 2925,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "5164:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "5159:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2924,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5159:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2932,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2926,
															"name": "contractTokenIdToStakedTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2550,
															"src": "5177:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 2929,
														"indexExpression": {
															"expression": {
																"id": 2927,
																"name": "collection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2908,
																"src": "5210:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																	"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																}
															},
															"id": 2928,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "collectionAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2526,
															"src": "5210:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5177:62:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2931,
													"indexExpression": {
														"id": 2930,
														"name": "_tokenID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "5240:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5177:72:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5159:90:14"
											},
											{
												"assignments": [
													2934
												],
												"declarations": [
													{
														"constant": false,
														"id": 2934,
														"mutability": "mutable",
														"name": "payableAmount",
														"nameLocation": "5267:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "5259:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5259:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2947,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2944,
																"name": "collection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2908,
																"src": "5365:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																	"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																}
															},
															"id": 2945,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardPerDay",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2528,
															"src": "5365:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2941,
																	"name": "SECONDS_PER_DAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "5331:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2935,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "5284:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "5284:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2937,
																				"name": "timeStaked",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2925,
																				"src": "5302:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5284:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2939,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5283:30:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2379,
																"src": "5283:47:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5283:64:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2364,
														"src": "5283:81:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5283:106:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5259:130:14"
											},
											{
												"expression": {
													"id": 2948,
													"name": "payableAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2934,
													"src": "5406:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2905,
												"id": 2949,
												"nodeType": "Return",
												"src": "5399:20:14"
											}
										]
									},
									"functionSelector": "302f7fea",
									"id": 2951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimableReward",
									"nameLocation": "4800:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "4824:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "4816:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4816:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "4846:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "4838:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "4869:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "4861:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4815:63:14"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "4899:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:9:14"
									},
									"scope": 3134,
									"src": "4791:635:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2977,
										"nodeType": "Block",
										"src": "5525:164:14",
										"statements": [
											{
												"assignments": [
													2961
												],
												"declarations": [
													{
														"constant": false,
														"id": 2961,
														"mutability": "mutable",
														"name": "payableAmount",
														"nameLocation": "5543:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2977,
														"src": "5535:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2960,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5535:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2967,
												"initialValue": {
													"arguments": [
														{
															"id": 2963,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2953,
															"src": "5575:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2964,
															"name": "_collectionID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2955,
															"src": "5589:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2965,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2957,
															"src": "5603:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2962,
														"name": "claimableReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2951,
														"src": "5559:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 2966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5559:53:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5535:77:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2972,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5657:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5657:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2974,
															"name": "payableAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "5668:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2969,
																	"name": "rewardsTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2524,
																	"src": "5631:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2968,
																"name": "Mintable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2497,
																"src": "5622:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Mintable_$2497_$",
																	"typeString": "type(contract Mintable)"
																}
															},
															"id": 2970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5622:29:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Mintable_$2497",
																"typeString": "contract Mintable"
															}
														},
														"id": 2971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2485,
														"src": "5622:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5622:60:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2976,
												"nodeType": "ExpressionStatement",
												"src": "5622:60:14"
											}
										]
									},
									"id": 2978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimReward",
									"nameLocation": "5441:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "5462:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "5454:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5454:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "5484:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "5476:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5476:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "5506:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "5498:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5498:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5453:62:14"
									},
									"returnParameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5525:0:14"
									},
									"scope": 3134,
									"src": "5432:257:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2998,
										"nodeType": "Block",
										"src": "5797:167:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2992,
																	"name": "_collectionAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2980,
																	"src": "5876:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2993,
																	"name": "_rewardPerDay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "5910:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 2994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5944:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2991,
																"name": "CollectionInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2531,
																"src": "5841:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_CollectionInfo_$2531_storage_ptr_$",
																	"typeString": "type(struct CyberlionStaking.CollectionInfo storage pointer)"
																}
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"collectionAddress",
																"rewardPerDay",
																"totalAmountStaked"
															],
															"nodeType": "FunctionCall",
															"src": "5841:106:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_memory_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_memory_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo memory"
															}
														],
														"expression": {
															"id": 2988,
															"name": "collectionInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2554,
															"src": "5808:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage",
																"typeString": "struct CyberlionStaking.CollectionInfo storage ref[] storage ref"
															}
														},
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5808:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage_ptr_$_t_struct$_CollectionInfo_$2531_storage_$returns$__$bound_to$_t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CyberlionStaking.CollectionInfo storage ref[] storage pointer,struct CyberlionStaking.CollectionInfo storage ref)"
														}
													},
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5808:149:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2997,
												"nodeType": "ExpressionStatement",
												"src": "5808:149:14"
											}
										]
									},
									"functionSelector": "2edb531c",
									"id": 2999,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2985,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2506,
													"src": "5785:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2984,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5776:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "5776:20:14"
										}
									],
									"name": "setCollection",
									"nameLocation": "5704:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "_collectionAddress",
												"nameLocation": "5726:18:14",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "5718:26:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5718:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "_rewardPerDay",
												"nameLocation": "5754:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "5746:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5746:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5717:51:14"
									},
									"returnParameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5797:0:14"
									},
									"scope": 3134,
									"src": "5695:269:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3030,
										"nodeType": "Block",
										"src": "6129:190:14",
										"statements": [
											{
												"assignments": [
													3013
												],
												"declarations": [
													{
														"constant": false,
														"id": 3013,
														"mutability": "mutable",
														"name": "collection",
														"nameLocation": "6162:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 3030,
														"src": "6139:33:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
															"typeString": "struct CyberlionStaking.CollectionInfo"
														},
														"typeName": {
															"id": 3012,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3011,
																"name": "CollectionInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2531,
																"src": "6139:14:14"
															},
															"referencedDeclaration": 2531,
															"src": "6139:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3017,
												"initialValue": {
													"baseExpression": {
														"id": 3014,
														"name": "collectionInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "6175:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage",
															"typeString": "struct CyberlionStaking.CollectionInfo storage ref[] storage ref"
														}
													},
													"id": 3016,
													"indexExpression": {
														"id": 3015,
														"name": "_collectionID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3001,
														"src": "6190:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6175:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage",
														"typeString": "struct CyberlionStaking.CollectionInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6139:65:14"
											},
											{
												"expression": {
													"id": 3022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3018,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "6214:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
															}
														},
														"id": 3020,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "collectionAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2526,
														"src": "6214:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3021,
														"name": "_collectionAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3003,
														"src": "6245:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6214:49:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3023,
												"nodeType": "ExpressionStatement",
												"src": "6214:49:14"
											},
											{
												"expression": {
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3024,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "6273:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
															}
														},
														"id": 3026,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardPerDay",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2528,
														"src": "6273:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3027,
														"name": "_rewardPerDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3005,
														"src": "6299:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6273:39:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3029,
												"nodeType": "ExpressionStatement",
												"src": "6273:39:14"
											}
										]
									},
									"functionSelector": "7b71e5db",
									"id": 3031,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3008,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2506,
													"src": "6116:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3009,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3007,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "6107:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "6107:20:14"
										}
									],
									"name": "updateCollection",
									"nameLocation": "5979:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3001,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "6013:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "6005:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "_collectionAddress",
												"nameLocation": "6044:18:14",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "6036:26:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "_rewardPerDay",
												"nameLocation": "6080:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "6072:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6072:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:104:14"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6129:0:14"
									},
									"scope": 3134,
									"src": "5970:349:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3055,
										"nodeType": "Block",
										"src": "6438:164:14",
										"statements": [
											{
												"assignments": [
													3043
												],
												"declarations": [
													{
														"constant": false,
														"id": 3043,
														"mutability": "mutable",
														"name": "collection",
														"nameLocation": "6471:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 3055,
														"src": "6448:33:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
															"typeString": "struct CyberlionStaking.CollectionInfo"
														},
														"typeName": {
															"id": 3042,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3041,
																"name": "CollectionInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2531,
																"src": "6448:14:14"
															},
															"referencedDeclaration": 2531,
															"src": "6448:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3047,
												"initialValue": {
													"baseExpression": {
														"id": 3044,
														"name": "collectionInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "6484:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage",
															"typeString": "struct CyberlionStaking.CollectionInfo storage ref[] storage ref"
														}
													},
													"id": 3046,
													"indexExpression": {
														"id": 3045,
														"name": "_collectionID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3035,
														"src": "6499:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6484:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage",
														"typeString": "struct CyberlionStaking.CollectionInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6448:65:14"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3048,
															"name": "addressToStakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2538,
															"src": "6530:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
																"typeString": "mapping(address => mapping(address => uint256[] storage ref))"
															}
														},
														"id": 3051,
														"indexExpression": {
															"expression": {
																"id": 3049,
																"name": "collection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3043,
																"src": "6552:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																	"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
																}
															},
															"id": 3050,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "collectionAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2526,
															"src": "6552:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6530:51:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 3053,
													"indexExpression": {
														"id": 3052,
														"name": "_userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3033,
														"src": "6582:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6530:65:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 3040,
												"id": 3054,
												"nodeType": "Return",
												"src": "6523:72:14"
											}
										]
									},
									"functionSelector": "f93b03bc",
									"id": 3056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStakedTokens",
									"nameLocation": "6334:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "6362:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "6354:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6354:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "6384:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "6376:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6376:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6353:45:14"
									},
									"returnParameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "6421:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3037,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6421:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3038,
													"nodeType": "ArrayTypeName",
													"src": "6421:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:18:14"
									},
									"scope": 3134,
									"src": "6325:277:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3073,
										"nodeType": "Block",
										"src": "6697:127:14",
										"statements": [
											{
												"assignments": [
													3065
												],
												"declarations": [
													{
														"constant": false,
														"id": 3065,
														"mutability": "mutable",
														"name": "collection",
														"nameLocation": "6730:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 3073,
														"src": "6707:33:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
															"typeString": "struct CyberlionStaking.CollectionInfo"
														},
														"typeName": {
															"id": 3064,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3063,
																"name": "CollectionInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2531,
																"src": "6707:14:14"
															},
															"referencedDeclaration": 2531,
															"src": "6707:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
																"typeString": "struct CyberlionStaking.CollectionInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3069,
												"initialValue": {
													"baseExpression": {
														"id": 3066,
														"name": "collectionInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "6743:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CollectionInfo_$2531_storage_$dyn_storage",
															"typeString": "struct CyberlionStaking.CollectionInfo storage ref[] storage ref"
														}
													},
													"id": 3068,
													"indexExpression": {
														"id": 3067,
														"name": "_collectionID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3058,
														"src": "6758:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6743:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage",
														"typeString": "struct CyberlionStaking.CollectionInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6707:65:14"
											},
											{
												"expression": {
													"expression": {
														"id": 3070,
														"name": "collection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3065,
														"src": "6789:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectionInfo_$2531_storage_ptr",
															"typeString": "struct CyberlionStaking.CollectionInfo storage pointer"
														}
													},
													"id": 3071,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalAmountStaked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2530,
													"src": "6789:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3062,
												"id": 3072,
												"nodeType": "Return",
												"src": "6782:35:14"
											}
										]
									},
									"functionSelector": "842dd90a",
									"id": 3074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStakedItemsCount",
									"nameLocation": "6617:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3058,
												"mutability": "mutable",
												"name": "_collectionID",
												"nameLocation": "6650:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "6642:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6642:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6641:23:14"
									},
									"returnParameters": {
										"id": 3062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "6688:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6688:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6687:9:14"
									},
									"scope": 3134,
									"src": "6608:216:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3087,
										"nodeType": "Block",
										"src": "6913:40:14",
										"statements": [
											{
												"expression": {
													"id": 3085,
													"name": "_ERC721_RECEIVED",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2515,
													"src": "6930:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 3084,
												"id": 3086,
												"nodeType": "Return",
												"src": "6923:23:14"
											}
										]
									},
									"functionSelector": "eeafbddc",
									"id": 3088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "6839:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3088,
												"src": "6857:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3088,
												"src": "6866:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6866:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3088,
												"src": "6875:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6875:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6855:28:14"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3088,
												"src": "6905:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3082,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6905:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6904:8:14"
									},
									"scope": 3134,
									"src": "6830:123:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3132,
										"nodeType": "Block",
										"src": "7036:231:14",
										"statements": [
											{
												"body": {
													"id": 3130,
													"nodeType": "Block",
													"src": "7087:174:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3106,
																		"name": "_array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3091,
																		"src": "7105:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 3108,
																	"indexExpression": {
																		"id": 3107,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3097,
																		"src": "7112:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7105:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3109,
																	"name": "_element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3093,
																	"src": "7118:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7105:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3129,
															"nodeType": "IfStatement",
															"src": "7101:150:14",
															"trueBody": {
																"id": 3128,
																"nodeType": "Block",
																"src": "7128:123:14",
																"statements": [
																	{
																		"expression": {
																			"id": 3120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3111,
																					"name": "_array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3091,
																					"src": "7146:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 3113,
																				"indexExpression": {
																					"id": 3112,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3097,
																					"src": "7153:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7146:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3114,
																					"name": "_array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3091,
																					"src": "7158:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 3119,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3118,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3115,
																							"name": "_array",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3091,
																							"src": "7165:6:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																								"typeString": "uint256[] storage pointer"
																							}
																						},
																						"id": 3116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "7165:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3117,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7181:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "7165:17:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7158:25:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7146:37:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3121,
																		"nodeType": "ExpressionStatement",
																		"src": "7146:37:14"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 3122,
																					"name": "_array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3091,
																					"src": "7201:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 3124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "7201:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer)"
																				}
																			},
																			"id": 3125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7201:12:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3126,
																		"nodeType": "ExpressionStatement",
																		"src": "7201:12:14"
																	},
																	{
																		"id": 3127,
																		"nodeType": "Break",
																		"src": "7231:5:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3099,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3097,
														"src": "7063:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3100,
															"name": "_array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3091,
															"src": "7067:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 3101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7067:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7063:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3131,
												"initializationExpression": {
													"assignments": [
														3097
													],
													"declarations": [
														{
															"constant": false,
															"id": 3097,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7060:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3131,
															"src": "7052:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3096,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7052:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3098,
													"nodeType": "VariableDeclarationStatement",
													"src": "7052:9:14"
												},
												"loopExpression": {
													"expression": {
														"id": 3104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7082:3:14",
														"subExpression": {
															"id": 3103,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3097,
															"src": "7082:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3105,
													"nodeType": "ExpressionStatement",
													"src": "7082:3:14"
												},
												"nodeType": "ForStatement",
												"src": "7047:214:14"
											}
										]
									},
									"id": 3133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeElement",
									"nameLocation": "6968:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "_array",
												"nameLocation": "7001:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "6983:24:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3089,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6983:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3090,
													"nodeType": "ArrayTypeName",
													"src": "6983:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "_element",
												"nameLocation": "7017:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "7009:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7009:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:44:14"
									},
									"returnParameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7036:0:14"
									},
									"scope": 3134,
									"src": "6959:308:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3135,
							"src": "584:6686:14",
							"usedErrors": []
						}
					],
					"src": "33:7238:14"
				},
				"id": 14
			}
		}
	}
}